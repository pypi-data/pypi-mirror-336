Metadata-Version: 2.1
Name: danielutils
Version: 1.0.39
Summary: A python utils library for things I find useful
Author-email: danielnachumdev <danielnachumdev@gmail.com>
License: MIT License
        
        Copyright (c) 2022 danielnachumdev
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
Project-URL: Homepage, https://github.com/danielnachumdev/danielutils
Project-URL: Bug Tracker, https://github.com/danielnachumdev/danielutils/issues
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Programming Language :: Python :: 3
Classifier: Operating System :: Microsoft :: Windows
Requires-Python: >=3.8.0
Description-Content-Type: text/markdown
License-File: LICENSE


[![Python package](https://github.com/danielnachumdev/danielutils/actions/workflows/python-package.yml/badge.svg)](https://github.com/danielnachumdev/danielutils/actions/workflows/python-package.yml)
[![Pylint](https://github.com/danielnachumdev/danielutils/actions/workflows/pylint.yml/badge.svg)](https://github.com/danielnachumdev/danielutils/actions/workflows/pylint.yml)
[![Python 3.10.11](https://img.shields.io/badge/python-3.10.11-blue.svg)](https://www.python.org/downloads/release/python-31011/)
[![gitleaks](https://github.com/danielnachumdev/danielutils/actions/workflows/gitleaks.yml/badge.svg)](https://github.com/danielnachumdev/danielutils/actions/workflows/gitleaks.yml)
[![CodeQL](https://github.com/danielnachumdev/danielutils/actions/workflows/github-code-scanning/codeql/badge.svg)](https://github.com/danielnachumdev/danielutils/actions/workflows/github-code-scanning/codeql)
# danielutils v=1.0.0
A utils library for things that I find useful for my coding workflow.\
Feel free to use and / or contribute / improve my code :)

THIS PACKAGE IS IN DEVELOPMENT AND SUBJECT TO CHANGE, USE AT YOUR OWN RISK!

**Tested python versions**: `3.8.0`*, `3.9.0`, `3.10.13` 

Versions marked with * are partially working
# Showcase
In [this](./READMES/) folder you can check out some more in depth showcase of some of the topics I have covered in this package

### [`isoftype`](./READMES/isoftype.md)
-- _"Boost your type checking game with `isoftype`: Effortlessly verify object types and subtypes, handle complex data structures, and tackle union types in Python!"_

**Support for Parametrized Generics**
### [`@overload`](./READMES/overload.md)
-- _"Manage function overloads with ease: Introducing `@overload` to handle specific resolutions and simplify function overloading in Python!"_

**Support for function overloading**
### [`@validate`](./READMES/validate.md)
-- _"Safeguard your code with `@validate`: Protecting against type-related disasters and ensuring type safety in Python functions!"_

**Runtime argument type validation for functions**
### [`tlist`](./READMES/tlist.md)
-- _"Elevate your list safety with `tlist`: Empower your code with runtime type safety, seamless list operations, and enhanced control over list elements!"_

**Like `list` but with runtime type validation**
### [`Interface`](./READMES/Interface.md)
-- _"Unlock the Power of Interfaces in Python: Create Your Own Metaclass for Interface-Like Behavior and Enhance Your Object-Oriented Programming Skills!"_

**Learning `metaclasses` by implementing an `Interface` (and `Abstract Classes`) for python in python**
