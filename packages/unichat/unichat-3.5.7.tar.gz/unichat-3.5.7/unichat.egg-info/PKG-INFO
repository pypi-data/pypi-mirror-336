Metadata-Version: 2.4
Name: unichat
Version: 3.5.7
Summary: Universal API chat Python client for OpenAI, MistralAI, Anthropic, xAI, Google AI, DeepSeek and Alibaba.
Author-email: Stefan <versed_info0w@icloud.com>
License: MIT License
        
        Copyright (c) 2024 Stefan
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Project-URL: Repository, https://github.com/amidabuddha/unichat
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.6
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: anthropic~=0.48.0
Requires-Dist: mistralai~=1.5.0
Requires-Dist: openai~=1.65.1
Dynamic: license-file

# unichat
Universal API chat Python client for OpenAI, MistralAI, Anthropic, xAI, Google AI, DeepSeek and Alibaba.

## Build sequence:
```shell
rm -rf dist build *.egg-info
```
```shell
python3 -m build
```
```shell
twine upload dist/*
```

## Usage:

1. Install the pip package:

```shell
pip install unichat
```

2. Add the class 'UnifiedChatApi' from module 'unichat' to your application:

3. [optional] Import MODELS_LIST as well for additional validation

## Functionality testing:
Try the eclosed in the source code 'sample_chat.py' file:

```shell
python3 sample_chat.py
```
