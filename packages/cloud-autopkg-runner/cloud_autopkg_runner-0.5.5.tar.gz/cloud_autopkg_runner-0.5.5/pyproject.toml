[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.version]
path = "src/cloud_autopkg_runner/__about__.py"

[dependency-groups]
dev = [
    "hatch>=1.14.0",
    "pre-commit>=4.1.0",
    "pyright>=1.1.397",
    "pytest-cov>=6.0.0",
    "ruff>=0.11.0",
]

[project]
name = "cloud-autopkg-runner"
dynamic = ["version"]
description = "Asynchronous tools for managing AutoPkg recipes in cloud environments."
readme = {file = "README.md", content-type = "text/markdown"}
requires-python = ">=3.10"
license = "MIT"
license-files = ["LICENSE"]
authors = [{name = "Scott Blake", email = "mitchelsblake@gmail.com"}]
keywords = ["autopkg", "cloud", "automation", "recipes", "async"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: System :: Software Distribution",
    "Operating System :: MacOS",
    "Operating System :: MacOS :: MacOS X",
    "Typing :: Typed",
]
dependencies = [
    "pyyaml>=6.0.2",
    "xattr>=1.1.4",
]

[project.scripts]
autopkg-run = "cloud_autopkg_runner.__main__:main"

[project.urls]
Homepage = "https://github.com/MScottBlake/cloud-autopkg-runner"
Repository = "https://github.com/MScottBlake/cloud-autopkg-runner.git"

[tool.coverage.report]
fail_under = 80

[tool.coverage.xml]
output = "artifacts/coverage.xml"

[tool.coverage.run]
branch = true
data_file = "artifacts/.coverage"
source = ["src"]

[tool.pyright]
include = ["src"]
typeCheckingMode = "strict"
venvPath = "."
venv = ".venv"

[tool.pytest.ini_options]
cache_dir = ".cache/pytest"
addopts = [
    "--color=yes",
    "--cov",
    "--cov-report=term-missing",
    "--cov-report=xml",
    "--junit-xml=artifacts/test_results.xml",
    "--verbosity=1",
]

[tool.ruff]
cache-dir = ".cache/ruff"
include = ["pyproject.toml", "{src,tests}/**/*.py"]
extend-exclude = [".venv"]

[tool.ruff.lint]
select = ["D", "E4", "E7", "E9", "F", "W"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[[tool.uv.index]]
name = "testpypi"
url = "https://test.pypi.org/simple/"
publish-url = "https://test.pypi.org/legacy/"
explicit = true
