[tool.poetry]
name = "processpype"
version = "1.1.5"
description = "A modular application framework with built-in FastAPI integration and pluggable services"
authors = ["Gianluca Pagliara <pagliara.gianluca@gmail.com>"]
readme = "README.md"
repository = "https://github.com/gianlucapagliara/processpype"

[tool.poetry.dependencies]
python = "^3.13"
pydantic = "^2.10.4"
fastapi = "^0.115.6"
uvicorn = "^0.34.0"
psutil = "^6.1.1"
httpx = "^0.28.1"
pytz = "^2024.2"
logfire = {extras = ["fastapi"], version = "^2.11.1"}
pyyaml = "^6.0.2"
eventspype = "^1.0.3"
chronopype = "^0.2.7"
cronitor = {version = "4.7.1", optional = true}
agentspype = {version = "^0.1.3", optional = true}
boto3 = {version = "^1.37.0", optional = true}
sqlalchemy = {version = "^2.0.30", optional = true}
aiosqlite = {version = "^0.20.0", optional = true}
asyncpg = {version = "^0.29.0", optional = true, python = "<3.13"}
telethon = {version = "^1.34.0", optional = true}
aiosmtplib = {version = "^3.0.1", optional = true}

[tool.poetry.extras]
agents = ["agentspype"]
storage = ["boto3"]
database = ["sqlalchemy", "aiosqlite", "asyncpg"]
database_py313 = ["sqlalchemy", "aiosqlite"]  # For Python 3.13 without asyncpg
notifications = ["telethon", "aiosmtplib"]
monitoring = ["cronitor", "boto3"]
all = ["agentspype", "boto3", "sqlalchemy", "aiosqlite", "asyncpg", "telethon", "aiosmtplib", "cronitor"]
all_py313 = ["agentspype", "boto3", "sqlalchemy", "aiosqlite", "telethon", "aiosmtplib", "cronitor"]  # For Python 3.13 without asyncpg

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-cov = "^4.1.0"
black = "^23.11.0"
isort = "^5.12.0"
mypy = "^1.7.0"
safety = "^2.3.5"
pre-commit = "^3.5.0"
ruff = "^0.8.4"
pytest-asyncio = "<0.25.0"
types-pyyaml = "^6.0.12.20241230"
types-pytz = "^2024.2.0.20241221"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
strict = true
disallow_untyped_decorators = false
ignore_missing_imports = true
disable_error_code = ["misc"]
exclude = ["tests/.*"]

[tool.ruff]
line-length = 88
target-version = "py312"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "C",   # flake8-comprehensions
    "B",   # flake8-bugbear
    "UP"   # pyupgrade
]
ignore = [
    "E203",  # See https://github.com/psf/black/issues/315
    "E501"   # Line too long (handled by black)
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # Ignore unused imports in __init__ files
