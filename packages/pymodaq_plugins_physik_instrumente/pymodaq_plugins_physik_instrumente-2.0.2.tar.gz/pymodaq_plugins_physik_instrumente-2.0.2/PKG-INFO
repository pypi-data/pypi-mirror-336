Metadata-Version: 2.4
Name: pymodaq_plugins_physik_instrumente
Version: 2.0.2
Summary: Set of PyMoDAQ plugins for Actuators from Physik Instumente (All the ones compatible with the GCS2 commands as well as the old 32bits MMC controller...)
Project-URL: Homepage, https://pymodaq.cnrs.fr
Project-URL: Documentation , https://pymodaq.cnrs.fr
Project-URL: Repository , https://github.com/PyMoDAQ/pymodaq_plugins_physik_instrumente
Author-email: "Sebastien J. Weber" <sebastien.weber@cemes.fr>
Maintainer-email: "Sebastien J. Weber" <sebastien.weber@cemes.fr>
License: The MIT License (MIT)
        
        Copyright (c) 2021 Sebastien Weber <sebastien.weber@cemes.fr>
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in
        all copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
        THE SOFTWARE.
License-File: LICENSE
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Topic :: Scientific/Engineering :: Human Machine Interfaces
Classifier: Topic :: Scientific/Engineering :: Visualization
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Software Development :: User Interfaces
Requires-Python: >=3.8
Requires-Dist: bitstring
Requires-Dist: msl-loadlib
Requires-Dist: pipython
Requires-Dist: pymodaq>=5.0.0
Description-Content-Type: text/x-rst

pymodaq_plugins_physik_instrumente (Physik Instrumente Stages)
##############################################################

.. image:: https://img.shields.io/pypi/v/pymodaq_plugins_physik_instrumente.svg
   :target: https://pypi.org/project/pymodaq_plugins_physik_instrumente/
   :alt: Latest Version

.. image:: https://readthedocs.org/projects/pymodaq/badge/?version=latest
   :target: https://pymodaq.readthedocs.io/en/stable/?badge=latest
   :alt: Documentation Status

.. image:: https://github.com/PyMoDAQ/pymodaq_plugins_physik_instrumente/workflows/Upload%20Python%20Package/badge.svg
    :target: https://github.com/PyMoDAQ/pymodaq_plugins_physik_instrumente

PyMoDAQ plugin for actuators from Physik Instumente (All the ones compatible with the GCS2 commands as well as the old
32bits MMC controller...)

Authors
=======

* Sebastien J. Weber

Instruments
===========
Below is the list of instruments included in this plugin

Actuators
+++++++++

* **PI**: All stages compatible with the GCS2 library. Tested on E-816, C-863 (mercury DC/Stepper), C-663, E-545.
  Using a wrapper around the PI library for ease of use and reusability elsewhere
* **PILegacy**: All stages compatible with the GCS2 library. Tested on E-816, C-863 (mercury DC/Stepper), C-663, E-545.
  Using a direct communication through the PI library
* **PI_MMCLegacy**: old controller and stages using the 32 bits MMC dll (requires 32bit python) C-862 controller. Using
  direct access to the 32bits dll. Only compatible with python 32bits
* **PI_MMC**: old controller and stages using the 32 bits MMC dll (requires 32bit python) C-862 controller. Using a
  wrapper around the 32bits dlls (either direct on 32 bits python or through a server on 64bits python with the help of
  the **msl-loadlib** package