from bfp_rs.types import Version
from bfp_rs.combinators.combinator import Combinator
from bfp_rs.combinators.get import Get
from bfp_rs.retrievers import Retriever


class IfBuilder:
    """
    """
    def then(self, com: Combinator) -> Combinator: ...

    def eq(self, *source: Retriever | int | Get) -> IfBuilder: ...
    def ne(self, *source: Retriever | int | Get) -> IfBuilder: ...
    def gt(self, *source: Retriever | int | Get) -> IfBuilder: ...
    def ge(self, *source: Retriever | int | Get) -> IfBuilder: ...
    def lt(self, *source: Retriever | int | Get) -> IfBuilder: ...
    def le(self, *source: Retriever | int | Get) -> IfBuilder: ...

def if_(target: Retriever | int | Get) -> IfBuilder: ...
def if_not(target: Retriever | int | Get) -> IfBuilder: ...
def if_len(target: Retriever | int | Get) -> IfBuilder: ...
def if_ver(*, min: Version = Version(-1), max: Version = Version(10_000)) -> IfBuilder: ...
