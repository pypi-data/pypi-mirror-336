Metadata-Version: 2.4
Name: mcp-serverless
Version: 0.1.0
Summary: Tools for Model Context Protocol in serverless environments
Home-page: https://github.com/yourusername/mcp-serverless
Author: MCP Team
Author-email: example@example.com
Keywords: ai,model,context,protocol,serverless
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: keywords
Dynamic: license-file
Dynamic: requires-python
Dynamic: summary

# MCP-Serverless

A Python package for implementing the Model Context Protocol in serverless environments.

## About Model Context Protocol

The Model Context Protocol (MCP) is a standardized way for AI models to interact with their context, including:

- Structured communication between models and their runtime environments
- Standardized interfaces for data exchange
- Context management for AI inference in serverless environments
- Tools for efficient model deployment and scaling

## Installation

```bash
pip install mcp-serverless
```

## Quick Start

```python
from mcp_serverless import about
from mcp_serverless.core import create_mcp_context

# Print information about MCP
print(about())

# Create a context for your model
context = create_mcp_context(model_id="my-model")

# Add data to the context
context.add_context("input", "Some user input")
context.add_context("parameters", {"temperature": 0.7, "max_tokens": 100})

# Get context data
print(context.get_context())
```

## Features

- Simple API for managing model context
- Lightweight with minimal dependencies
- Designed for serverless environments

## License

MIT 
