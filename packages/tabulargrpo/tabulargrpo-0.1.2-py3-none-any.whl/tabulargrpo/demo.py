from tabulargrpo_classifier import TabularGRPOClassifier
from models.transformer_moe import MoETransformer
from sklearn.datasets import make_classification
from sklearn.model_selection import train_test_split
import pandas as pd
from sklearn.preprocessing import   LabelEncoder

def  train_tabular_grpo():
        
    """
    Train a TabularGRPOClassifier model with synthetic data.

    Train a TabularGRPOClassifier model with synthetic data generated by
    scikit-learn's make_classification function. Evaluate the model on a test
    set and predict on a sample input.
    """
    X, y = make_classification(n_samples=5000, n_features=14, n_classes=2, random_state=42)
 
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
    
    classifier = TabularGRPOClassifier(model_class=MoETransformer,input_dim=14, num_classes=2, epochs=10,group_size=10)
    classifier.fit(X_train,y_train)
    classifier.evaluate(X_test, y_test)

    p = classifier.predict([[0,0,0,0,0,0,0,0,0,0,0,0,0,0]])
    print(p)

def evaluate_synthetic_data():
    """
    Evaluate the TabularGRPOClassifier model on a synthetic dataset.

    Dataset download url: https://zenodo.org/records/15081413.
    After you download, please drop in data/ folder
    
    Evaluate the TabularGRPOClassifier model on a synthetic dataset stored in
    './data/synthetic_data_small.csv'. The dataset has 4 features and 3 classes.
    The model is trained for 1000 epochs and the group size is 10. The
    precision threshold is set to 1.0. The model is evaluated on a test set and
    the predicted probabilities are printed for a sample input.
    """
    df = pd.read_csv( './data/synthetic_data_small.csv'   )
    cat_cols = df.select_dtypes(include=['object']).columns
    for col in cat_cols:
            df[col] = LabelEncoder().fit_transform(df[col])
        
    X = df.drop('label', axis=1)
    y = df['label']
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
    
    classifier = TabularGRPOClassifier(model_class=MoETransformer,input_dim=4, num_classes=3, epochs=1000,group_size=10,precision_threshold=1.0)
    classifier.fit(X_train,y_train, X_test, y_test)
    classifier.evaluate(X_test, y_test)

    p = classifier.predict([[0,0,0,0]])
    print(p)

if __name__ == '__main__':

    train_tabular_grpo()
    # evaluate_synthetic_data()

    