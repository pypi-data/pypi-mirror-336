# This workflows will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: pypi

on:
    release:
        types: [created]
    push:
        tags:
            - "v[0-9]+.[0-9]+.[0-9]+"

jobs:
    deploy:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4
            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version: "3.x"
            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install setuptools wheel twine build
            - name: Build and publish
              env:
                  TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
                  TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
              run: |
                  python -m build
                  twine upload dist/*
    release:
        runs-on: ubuntu-latest
        needs:
            - deploy
        permissions:
        # IMPORTANT: this permission is mandatory for trusted publishing
            id-token: write

        # Dedicated environments with protections for publishing are strongly recommended.
        environment:
            name: pypi
            url: https://pypi.org/project/cookiecutter-practice/

        steps:
            - name: Retrieve release distributions
              uses: actions/download-artifact@v4
              with:
                name: release-dists
                path: dist/

            - name: Publish release distributions to PyPI
              uses: pypa/gh-action-pypi-publish@6f7e8d9c0b1a2c3d4e5f6a7b8c9d0e1f2a3b4c5d
