# generated by datamodel-codegen:
#   filename:  experts-portal-qualification.json

from __future__ import annotations

from typing import Literal, Sequence

from pydantic import BaseModel, ConfigDict


class Action(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    type: Literal['ACTION_SERVICE'] | None = None


class IdentifiedAction(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    type: Literal['ACTION_SERVICE'] | None = None


class Duration(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    seconds: int | None = None
    zero: bool | None = None
    nano: int | None = None
    negative: bool | None = None
    positive: bool | None = None


class Unit(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    durationEstimated: bool | None = None
    duration: Duration | None = None
    timeBased: bool | None = None
    dateBased: bool | None = None


class IdleTimeout(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    seconds: int | None = None
    zero: bool | None = None
    nano: int | None = None
    negative: bool | None = None
    positive: bool | None = None
    units: Sequence[Unit] | None = None


class OnIdleAction(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    action: IdentifiedAction
    idle_timeout: IdleTimeout
