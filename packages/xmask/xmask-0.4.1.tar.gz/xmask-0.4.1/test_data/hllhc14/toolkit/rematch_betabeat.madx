! Stephane Fartoukh Rematch beta beating
!   From SLHC3.0/toolkit/rematch_betabeat
! 2011/11/10 Riccardo De Maria
!   Changed approach for the phase, now completely relative and not
!   relying on a matched optics at pi/2 mod pi


IPBETA(NIR,BIM)    : macro = {

!Evaluate the beta0 block at a given IP

evalIR=NIR;
if(evalIR==8)gc
{exec select(8,78,81,BIM);
use,sequence=lhcBIM,range=s.ds.l8.BIM/e.ds.r8.BIM;savebeta,label=betaIP8BIM,place=IP8;twiss,beta0=bir8BIM;};
if(evalIR==1)gc
{exec select(1,81,12,BIM);
use,sequence=lhcBIM,range=s.ds.l1.BIM/e.ds.r1.BIM;savebeta,label=betaIP1BIM,place=IP1;twiss,beta0=bir1BIM;};
if(evalIR==2)gc
{exec select(2,12,23,BIM);
use,sequence=lhcBIM,range=s.ds.l2.BIM/e.ds.r2.BIM;savebeta,label=betaIP2BIM,place=IP2;twiss,beta0=bir2BIM;};
if(evalIR==3)gc
{exec select(3,23,34,BIM);
use,sequence=lhcBIM,range=s.ds.l3.BIM/e.ds.r3.BIM;savebeta,label=betaIP3BIM,place=IP3;twiss,beta0=bir3BIM;};
if(evalIR==4)gc
{exec select(4,34,45,BIM);
use,sequence=lhcBIM,range=s.ds.l4.BIM/e.ds.r4.BIM;savebeta,label=betaIP4BIM,place=IP4;twiss,beta0=bir4BIM;};
if(evalIR==5)gc
{exec select(5,45,56,BIM);
use,sequence=lhcBIM,range=s.ds.l5.BIM/e.ds.r5.BIM;savebeta,label=betaIP5BIM,place=IP5;twiss,beta0=bir5BIM;};
if(evalIR==6)gc
{exec select(6,56,67,BIM);
use,sequence=lhcBIM,range=s.ds.l6.BIM/e.ds.r6.BIM;savebeta,label=betaIP6BIM,place=IP6;twiss,beta0=bir6BIM;};
if(evalIR==7)gc
{exec select(7,67,78,BIM);
use,sequence=lhcBIM,range=s.ds.l7.BIM/e.ds.r7.BIM;savebeta,label=betaIP7BIM,place=IP7;twiss,beta0=bir7BIM;};
gc
};

BETABEAT(NIR,BIM)  : macro = {

!calculate the w's at a given IP starting from the previous IP

evalIR=NIR;

if(evalIR==1) {use,sequence=lhcBIM,range=IP8/IP1;twiss,chrom,beta0=betaIP8BIM,wx=wxaux,wy=wyaux,phix=phixaux,phiy=phiyaux;};
if(evalIR==2) {use,sequence=lhcBIM,range=IP1/IP2;twiss,chrom,beta0=betaIP1BIM,wx=wxaux,wy=wyaux,phix=phixaux,phiy=phiyaux;};
if(evalIR==3) {use,sequence=lhcBIM,range=IP2/IP3;twiss,chrom,beta0=betaIP2BIM,wx=wxaux,wy=wyaux,phix=phixaux,phiy=phiyaux;};
if(evalIR==4) {use,sequence=lhcBIM,range=IP3/IP4;twiss,chrom,beta0=betaIP3BIM,wx=wxaux,wy=wyaux,phix=phixaux,phiy=phiyaux;};
if(evalIR==5) {use,sequence=lhcBIM,range=IP4/IP5;twiss,chrom,beta0=betaIP4BIM,wx=wxaux,wy=wyaux,phix=phixaux,phiy=phiyaux;};
if(evalIR==6) {use,sequence=lhcBIM,range=IP5/IP6;twiss,chrom,beta0=betaIP5BIM,wx=wxaux,wy=wyaux,phix=phixaux,phiy=phiyaux;};
if(evalIR==7) {use,sequence=lhcBIM,range=IP6/IP7;twiss,chrom,beta0=betaIP6BIM,wx=wxaux,wy=wyaux,phix=phixaux,phiy=phiyaux;};
if(evalIR==8) {use,sequence=lhcBIM,range=IP7/IP8;twiss,chrom,beta0=betaIP7BIM,wx=wxaux,wy=wyaux,phix=phixaux,phiy=phiyaux;};

wxipNIRBIM=table(twiss,IPNIR,wx);phixipNIRBIM=table(twiss,IPNIR,phix);dbetxipNIRBIM=wxipNIRBIM*cos(twopi*phixipNIRBIM);dalfxipNIRBIM=wxipNIRBIM*sin(twopi*phixipNIRBIM);
wyipNIRBIM=table(twiss,IPNIR,wy);phiyipNIRBIM=table(twiss,IPNIR,phiy);dbetyipNIRBIM=wyipNIRBIM*cos(twopi*phiyipNIRBIM);dalfyipNIRBIM=wyipNIRBIM*sin(twopi*phiyipNIRBIM);

!value,wxipNIRBIM,phixipNIRBIM,dbetxipNIRBIM,dalfxipNIRBIM;
!value,wyipNIRBIM,phiyipNIRBIM,dbetyipNIRBIM,dalfyipNIRBIM;


};

IR_PHASESHIFT(NIR0,NIR1,NIR2,mybeam) : macro = {

!! calculate the low-beta IR phase shift, e.g. exec IR_PHASESHIFT(4,5,6,1) for IR5b1

!Reset Phase shift
phixlIRNIR1bmybeam=0;phiylIRNIR1bmybeam=0;
phixrIRNIR1bmybeam=0;phiyrIRNIR1bmybeam=0;

!install phase shifter
exec,PHASESHIFT(e.ds.lNIR1.bmybeam,phixlIRNIR1bmybeam,phiylIRNIR1bmybeam,bmybeam);
exec,PHASESHIFT(s.ds.rNIR1.bmybeam,phixrIRNIR1bmybeam,phiyrIRNIR1bmybeam,bmybeam);

!Define beta blocks
exec IPBETA(NIR0,bmybeam);exec IPBETA(NIR1,bmybeam);

whichbeam=mybeam;

if(whichbeam==1){
ksfstrongL=ksf1.aNIR0NIR1b1;ksf1.aNIR0NIR1b1:=ksfstrongL;
ksdstrongL=ksd2.aNIR0NIR1b1;ksd2.aNIR0NIR1b1:=ksdstrongL;
ksfstrongR=ksf1.aNIR1NIR2b1;ksf1.aNIR1NIR2b1:=ksfstrongR;
ksdstrongR=ksd2.aNIR1NIR2b1;ksd2.aNIR1NIR2b1:=ksdstrongR;};
if(whichbeam==2){
ksfstrongL=ksf2.aNIR0NIR1b2;ksf2.aNIR0NIR1b2:=ksfstrongL;
ksdstrongL=ksd1.aNIR0NIR1b2;ksd1.aNIR0NIR1b2:=ksdstrongL;
ksfstrongR=ksf2.aNIR1NIR2b2;ksf2.aNIR1NIR2b2:=ksfstrongR;
ksdstrongR=ksd1.aNIR1NIR2b2;ksd1.aNIR1NIR2b2:=ksdstrongR;};

return;

wxaux=0;wyaux=0;phixaux=0;phiyaux=0;exec BETABEAT(NIR1,bmybeam);
a=dbetxipNIR1bmybeam;
b=dalfxipNIR1bmybeam;
c=dbetyipNIR1bmybeam;
d=dalfyipNIR1bmybeam;

!! find phase and kstrongL that makes the strong family acting only on dalfx/dalfy

match,use_macro;
vary,name=ksfstrongL;
vary,name=ksdstrongL;
use_macro,name=BETABEAT(NIR1,bmybeam);
constraint,expr=dbetxipNIR1bmybeam=a;
constraint,expr=dbetyipNIR1bmybeam=c;
constraint,expr=dalfxipNIR1bmybeam=(b-d)/2;
constraint,expr=dalfyipNIR1bmybeam=(d-b)/2;
jacobian, calls=2, bisec=0;
endmatch;

match,use_macro;
vary,name=ksfstrongL;
vary,name=ksdstrongL;
vary,name=phixlIRNIR1bmybeam;
vary,name=phiylIRNIR1bmybeam;
use_macro,name=BETABEAT(NIR1,bmybeam);
constraint,expr=dbetxipNIR1bmybeam=a;
constraint,expr=dbetyipNIR1bmybeam=c;
constraint,expr=dalfxipNIR1bmybeam=(b-d)/2;
constraint,expr=dalfyipNIR1bmybeam=(d-b)/2;
jacobian, calls=10, tolerance=1.E-15, bisec=1;
endmatch;

tarwirNIR1Lbmybeam=tar;

!! find phase and kstrongR that makes the strong family acting only on dalfx/dalfy

wxaux=200;
wyaux=200;
phixaux=-0.25;
phiyaux=-0.25;

match,use_macro;
vary,name=wxaux;
vary,name=wyaux;
vary,name=phixaux;
vary,name=phiyaux;
use_macro,name=BETABEAT(NIR2,bmybeam);
constraint,expr=dbetxipNIR2bmybeam=0;
constraint,expr=dbetyipNIR2bmybeam=0;
constraint,expr=dalfxipNIR2bmybeam=0;
constraint,expr=dalfyipNIR2bmybeam=0;
jacobian, calls=10, tolerance=1.E-15, bisec=0;
endmatch;

a=wxaux*cos(twopi*phixaux);
b=wxaux*sin(twopi*phixaux);
c=wyaux*cos(twopi*phiyaux);
d=wyaux*sin(twopi*phiyaux);

wxaux=sqrt(a^2+((b-d)/2)^2);
wyaux=sqrt(c^2+((b-d)/2)^2);
phixaux=atan( (( b-d)/2)/a )/twopi;
if (a<0) { phixaux=phixaux+.5;};
phiyaux=atan( ((-b+d)/2)/c )/twopi;
if (c<0) { phiyaux=phiyaux+.5;};

value,wxaux*cos(twopi*phixaux)-a,  wxaux*sin(twopi*phixaux)-(b-d)/2., wyaux*cos(twopi*phiyaux)-c, wyaux*sin(twopi*phiyaux)+(b-d)/2;

match,use_macro;
vary,name=ksfstrongR;
vary,name=ksdstrongR;
use_macro,name=BETABEAT(NIR2,bmybeam);
constraint,expr=dbetxipNIR2bmybeam=0;
constraint,expr=dbetyipNIR2bmybeam=0;
constraint,expr=dalfxipNIR2bmybeam=0;
constraint,expr=dalfyipNIR2bmybeam=0;
jacobian, calls=2, bisec=0;
endmatch;

match,use_macro;
vary,name=ksfstrongR;
vary,name=ksdstrongR;
vary,name=phixrIRNIR1bmybeam;
vary,name=phiyrIRNIR1bmybeam;
use_macro,name=BETABEAT(NIR2,bmybeam);
constraint,expr=dbetxipNIR2bmybeam=0;
constraint,expr=dbetyipNIR2bmybeam=0;
constraint,expr=dalfxipNIR2bmybeam=0;
constraint,expr=dalfyipNIR2bmybeam=0;
jacobian, calls=10, tolerance=1.E-15, bisec=1;
endmatch;

tarwirNIR1Rbmybeam=tar;

if(whichbeam==1){
ksf1.aNIR0NIR1b1=ksfstrongL;
ksd2.aNIR0NIR1b1=ksdstrongL;
ksf1.aNIR1NIR2b1=ksfstrongR;
ksd2.aNIR1NIR2b1=ksdstrongR;
value,ksf1.aNIR0NIR1b1,ksf1.aNIR1NIR2b1,ksd2.aNIR0NIR1b1,ksd2.aNIR1NIR2b1;
};
if(whichbeam==2){
ksf2.aNIR0NIR1b2=ksfstrongL;
ksd1.aNIR0NIR1b2=ksdstrongL;
ksf2.aNIR1NIR2b2=ksfstrongR;
ksd1.aNIR1NIR2b2=ksdstrongR;
value,ksf2.aNIR0NIR1b2,ksf2.aNIR1NIR2b2,ksd1.aNIR0NIR1b2,ksd1.aNIR1NIR2b2;
};



value,phixlIRNIR1bmybeam,phiylIRNIR1bmybeam,phixrIRNIR1bmybeam,phiyrIRNIR1bmybeam;

!remove phase shifter
option,warn,info;
!exec,REMOVE_PHASESHIFT(e.ds.lNIR1.bmybeam,bmybeam);
!exec,REMOVE_PHASESHIFT(s.ds.rNIR1.bmybeam,bmybeam);
option,-warn,info;

};


!------------------------------------------------------------------
!  Rephase for beta beating correction
!------------------------------------------------------------------

seqedit,sequence=lhcb1;flatten;cycle,start=IP3;endedit;
seqedit,sequence=lhcb2;flatten;cycle,start=IP3;endedit;

!ksf.b1          =      0.603278552600E-01;
!ksd.b1          =     -0.994910850300E-01;
!ksf.b2          =      0.603278552600E-01;
!ksd.b2          =     -0.994910850300E-01;
!ksf.b1          =      0.034             ;
!ksd.b1          =     -0.07              ;
!ksf.b2          =      0.034             ;
!ksd.b2          =     -0.07              ;
!exec,cable_sext_twofam(ksf.b1,ksd.b1,ksf.b2,ksd.b2);

! force start with muxIP5b1==muxIP5b2 muyIP5b1==muyIP5b2
value,muxIP5b2_l,muxIP5b1_l+muxIP5b1_r-muxIP5b2_r;
value,muyIP5b2_l,muyIP5b1_l+muyIP5b1_r-muyIP5b2_r;
muxIP5b2_l=muxIP5b1_l+muxIP5b1_r-muxIP5b2_r;
muyIP5b2_l=muyIP5b1_l+muyIP5b1_r-muyIP5b2_r;


on_x1:=0;on_x5:=0;on_sep1:=0;on_sep5:=0;
on_x2:=0;on_x8:=0;on_sep2:=0;on_sep8:=0;on_lhcb:=0;on_alice:=0;

NRJ:=7000;
Beam,particle=proton,sequence=lhcb1,energy=nrj,NPART=1.15E11,sige=1.1e-4;
Beam,particle=proton,sequence=lhcb2,energy=nrj,bv = -1,NPART=1.15E11,sige=1.1e-4;         !<<<<

use,sequence=lhcb1;twiss;
muxb1_0=table(twiss,e.ds.r5.b1,mux)-table(twiss,s.ds.l5.b1,mux);
muyb1_0=table(twiss,e.ds.r5.b1,muy)-table(twiss,s.ds.l5.b1,muy);
muxRb1_0=table(twiss,e.ds.r5.b1,mux)-table(twiss,IP5,mux);muxLb1_0=muxb1_0-muxRb1_0;
muyRb1_0=table(twiss,e.ds.r5.b1,muy)-table(twiss,IP5,muy);muyLb1_0=muyb1_0-muyRb1_0;
use,sequence=lhcb2;twiss;
muxb2_0=table(twiss,e.ds.r5.b2,mux)-table(twiss,s.ds.l5.b2,mux);
muyb2_0=table(twiss,e.ds.r5.b2,muy)-table(twiss,s.ds.l5.b2,muy);
muxRb2_0=table(twiss,e.ds.r5.b2,mux)-table(twiss,IP5,mux);muxLb2_0=muxb2_0-muxRb2_0;
muyRb2_0=table(twiss,e.ds.r5.b2,muy)-table(twiss,IP5,muy);muyLb2_0=muyb2_0-muyRb2_0;

exec IR_PHASESHIFT(4,5,6,1);!exec,REMOVE_PHASESHIFT(e.ds.l5.b1,b1);exec,REMOVE_PHASESHIFT(s.ds.r5.b1,b1);
exec IR_PHASESHIFT(4,5,6,2);!exec,REMOVE_PHASESHIFT(e.ds.l5.b2,b2);exec,REMOVE_PHASESHIFT(s.ds.r5.b2,b2);
exec IR_PHASESHIFT(8,1,2,1);!exec,REMOVE_PHASESHIFT(e.ds.l1.b1,b1);exec,REMOVE_PHASESHIFT(s.ds.r1.b1,b1);
exec IR_PHASESHIFT(8,1,2,2);!exec,REMOVE_PHASESHIFT(e.ds.l1.b2,b2);exec,REMOVE_PHASESHIFT(s.ds.r1.b2,b2);

value,phixlIR1b1,phixlIR5b1,phiyrIR1b1,phiyrIR5b1,phixrIR1b2,phixrIR5b2,phiylIR1b2,phiylIR5b2;
value,phixrIR1b1,phixrIR5b1,phiylIR1b1,phiylIR5b1,phixlIR1b2,phixlIR5b2,phiyrIR1b2,phiyrIR5b2;

!exec,plotw(b1);exec,plotw(b2);


use,sequence=lhcb1;twiss;
DeltamuxIP1b1l=table(twiss,IP1,mux)-table(twiss,MS.14L1.b1,mux)-1.25;
DeltamuxIP1b1r=table(twiss,MS.15R1.b1,mux)-table(twiss,IP1,mux)-1.75;
DeltamuyIP1b1l=table(twiss,IP1,muy)-table(twiss,MS.15L1.b1,muy)-1.75;
DeltamuyIP1b1r=table(twiss,MS.14R1.b1,muy)-table(twiss,IP1,muy)-1.25;
DeltamuxIP5b1l=table(twiss,IP5,mux)-table(twiss,MS.14L5.b1,mux)-1.25;
DeltamuxIP5b1r=table(twiss,MS.15R5.b1,mux)-table(twiss,IP5,mux)-1.75;
DeltamuyIP5b1l=table(twiss,IP5,muy)-table(twiss,MS.15L5.b1,muy)-1.75;
DeltamuyIP5b1r=table(twiss,MS.14R5.b1,muy)-table(twiss,IP5,muy)-1.25;


use,sequence=lhcb2;twiss;
DeltamuxIP1b2l=table(twiss,IP1,mux)-table(twiss,MS.15L1.B2,mux)-1.75;
DeltamuxIP1b2r=table(twiss,MS.14R1.B2,mux)-table(twiss,IP1,mux)-1.25;
DeltamuyIP1b2l=table(twiss,IP1,muy)-table(twiss,MS.14L1.B2,muy)-1.25;
DeltamuyIP1b2r=table(twiss,MS.15R1.B2,muy)-table(twiss,IP1,muy)-1.75;
DeltamuxIP5b2l=table(twiss,IP5,mux)-table(twiss,MS.15L5.B2,mux)-1.75;
DeltamuxIP5b2r=table(twiss,MS.14R5.B2,mux)-table(twiss,IP5,mux)-1.25;
DeltamuyIP5b2l=table(twiss,IP5,muy)-table(twiss,MS.14L5.B2,muy)-1.25;
DeltamuyIP5b2r=table(twiss,MS.15R5.B2,muy)-table(twiss,IP5,muy)-1.75;

value,DeltamuxIP1b1l,DeltamuxIP5b1l;
value,DeltamuxIP1b1r,DeltamuxIP5b1r;
value,DeltamuxIP1b2l,DeltamuxIP5b2l;
value,DeltamuxIP1b2r,DeltamuxIP5b2r;
value,DeltamuyIP1b1l,DeltamuyIP5b1l;
value,DeltamuyIP1b1r,DeltamuyIP5b1r;
value,DeltamuyIP1b2l,DeltamuyIP5b2l;
value,DeltamuyIP1b2r,DeltamuyIP5b2r;


! compromise ir1 ir5
!phixlb1:=phixlb2+phixrb2-phixrb1;
!match,use_macro;
!vary,name=phixrb1;
!vary,name=phixlb2;
!vary,name=phixrb2;
!m1: macro={value,phixlb1;};
!constraint,expr= phixlb1=phixlir1b1;
!constraint,expr= phixlb1=phixlir5b1;
!constraint,expr= phixrb1=phixrir1b1;
!constraint,expr= phixrb1=phixrir5b1;
!constraint,expr= phixlb2=phixlir1b2;
!constraint,expr= phixlb2=phixlir5b2;
!constraint,expr= phixrb2=phixrir1b2;
!constraint,expr= phixrb2=phixrir5b2;
!jacobian,calls=1;
!endmatch;
!
!phiylb1:=phiylb2+phiyrb2-phiyrb1;
!match,use_macro;
!vary,name=phiyrb1;
!vary,name=phiylb2;
!vary,name=phiyrb2;
!m1: macro={value,phiylb1;};
!constraint,expr= phiylb1=phiylir1b1;
!constraint,expr= phiylb1=phiylir5b1;
!constraint,expr= phiyrb1=phiyrir1b1;
!constraint,expr= phiyrb1=phiyrir5b1;
!constraint,expr= phiylb2=phiylir1b2;
!constraint,expr= phiylb2=phiylir5b2;
!constraint,expr= phiyrb2=phiyrir1b2;
!constraint,expr= phiyrb2=phiyrir5b2;
!jacobian,calls=1;
!endmatch;



phixlb1 =.5*(phixlir1b1+phixlir5b1);
phixrb1 =.5*(phixrir1b1+phixrir5b1);
phixlb2 =.5*(phixlir1b2+phixlir5b2);
phixrb2 =.5*(phixrir1b2+phixrir5b2);
phiylb1 =.5*(phiylir1b1+phiylir5b1);
phiyrb1 =.5*(phiyrir1b1+phiyrir5b1);
phiylb2 =.5*(phiylir1b2+phiylir5b2);
phiyrb2 =.5*(phiyrir1b2+phiyrir5b2);

phixd12=.25*((phixlb1+phixrb1)-(phixlb2+phixrb2));
phiyd12=.25*((phiylb1+phiyrb1)-(phiylb2+phiyrb2));

phixlb1=phixlb1-phixd12;
phixrb1=phixrb1-phixd12;
phixlb2=phixlb2+phixd12;
phixrb2=phixrb2+phixd12;
phiylb1=phiylb1-phiyd12;
phiyrb1=phiyrb1-phiyd12;
phiylb2=phiylb2+phiyd12;
phiyrb2=phiylb2+phiyd12;



!exec,round(phixlb1,4);
exec,round(phixrb1,4);
exec,round(phixlb2,4);
exec,round(phixrb2,4);
!exec,round(phiylb1,4);
exec,round(phiyrb1,4);
exec,round(phiylb2,4);
exec,round(phiyrb2,4);
phiylb1=phiylb2+phiyrb2-phiyrb1;
phixlb1=phixlb2+phixrb2-phixrb1;
value,phixlb1,phixrb1,phixlb2,phixrb2;
value,phiylb1,phiyrb1,phiylb2,phiyrb2;


m1: macro={
value, phixlb1,phixlir1b1, phixlb1-phixlir1b1;
value, phixlb1,phixlir5b1, phixlb1-phixlir5b1;
value, phixrb1,phixrir1b1, phixrb1-phixrir1b1;
value, phixrb1,phixrir5b1, phixrb1-phixrir5b1;
value, phixlb2,phixlir1b2, phixlb2-phixlir1b2;
value, phixlb2,phixlir5b2, phixlb2-phixlir5b2;
value, phixrb2,phixrir1b2, phixrb2-phixrir1b2;
value, phixrb2,phixrir5b2, phixrb2-phixrir5b2;
value, phiylb1,phiylir1b1, phiylb1-phiylir1b1;
value, phiylb1,phiylir5b1, phiylb1-phiylir5b1;
value, phiyrb1,phiyrir1b1, phiyrb1-phiyrir1b1;
value, phiyrb1,phiyrir5b1, phiyrb1-phiyrir5b1;
value, phiylb2,phiylir1b2, phiylb2-phiylir1b2;
value, phiylb2,phiylir5b2, phiylb2-phiylir5b2;
value, phiyrb2,phiyrir1b2, phiyrb2-phiyrir1b2;
value, phiyrb2,phiyrir5b2, phiyrb2-phiyrir5b2;
};
!exec,m1;





!muxlIR1b1=phixlIR1b1+muxLb1_0;muxlIR5b1=phixlIR5b1+muxLb1_0;muxrIR1b1=phixrIR1b1+muxRb1_0;muxrIR5b1=phixrIR5b1+muxRb1_0;
!muxlIR1b2=phixlIR1b2+muxLb2_0;muxlIR5b2=phixlIR5b2+muxLb2_0;muxrIR1b2=phixrIR1b2+muxRb2_0;muxrIR5b2=phixrIR5b2+muxRb2_0;
!muylIR1b1=phiylIR1b1+muyLb1_0;muylIR5b1=phiylIR5b1+muyLb1_0;muyrIR1b1=phiyrIR1b1+muyRb1_0;muyrIR5b1=phiyrIR5b1+muyRb1_0;
!muylIR1b2=phiylIR1b2+muyLb2_0;muylIR5b2=phiylIR5b2+muyLb2_0;muyrIR1b2=phiyrIR1b2+muyRb2_0;muyrIR5b2=phiyrIR5b2+muyRb2_0;
!
!value,muxlIR1b1,muxlIR5b1,muxrIR1b2,muxrIR5b2;
!value,muyrIR1b1,muyrIR5b1,muylIR1b2,muylIR5b2;
!value,muxrIR1b1,muxrIR5b1,muxlIR1b2,muxlIR5b2;
!value,muylIR1b1,muylIR5b1,muyrIR1b2,muyrIR5b2;
!
!muxLb1=0.125*(-(muxrIR1b1+muxrIR5b1)+(muxrIR1b2+muxrIR5b2)+3*(muxlIR1b1+muxlIR5b1)+(muxlIR1b2+muxlIR5b2));
!muxLb2=0.125*(-(muxrIR1b2+muxrIR5b2)+(muxrIR1b1+muxrIR5b1)+3*(muxlIR1b2+muxlIR5b2)+(muxlIR1b1+muxlIR5b1));
!muxRb1=0.125*(-(muxlIR1b1+muxlIR5b1)+(muxlIR1b2+muxlIR5b2)+3*(muxrIR1b1+muxrIR5b1)+(muxrIR1b2+muxrIR5b2));
!muxRb2=0.125*(-(muxlIR1b2+muxlIR5b2)+(muxlIR1b1+muxlIR5b1)+3*(muxrIR1b2+muxrIR5b2)+(muxrIR1b1+muxrIR5b1));
!
!muyLb1=0.125*(-(muyrIR1b1+muyrIR5b1)+(muyrIR1b2+muyrIR5b2)+3*(muylIR1b1+muylIR5b1)+(muylIR1b2+muylIR5b2));
!muyLb2=0.125*(-(muyrIR1b2+muyrIR5b2)+(muyrIR1b1+muyrIR5b1)+3*(muylIR1b2+muylIR5b2)+(muylIR1b1+muylIR5b1));
!muyRb1=0.125*(-(muylIR1b1+muylIR5b1)+(muylIR1b2+muylIR5b2)+3*(muyrIR1b1+muyrIR5b1)+(muyrIR1b2+muyrIR5b2));
!muyRb2=0.125*(-(muylIR1b2+muylIR5b2)+(muylIR1b1+muylIR5b1)+3*(muyrIR1b2+muyrIR5b2)+(muyrIR1b1+muyrIR5b1));
!
!value,muxLb1+muxRb1,muxLb2+muxRb2,muyLb1+muyRb1,muyLb2+muyRb2;
!muxIR15=muxLb1+muxRb1;muyIR15=muyLb1+muyRb1;
!value,muxLb1,muxLb2,muxIR15;
!value,muyLb1,muyLb2,muyIR15;
!
!exec round(muxLb1,4);exec round(muxLb2,4);exec round(muxir15,4);
!exec round(muyLb1,4);exec round(muyLb2,4);exec round(muyir15,4);
!muxrb1=muxir15-muxlb1;
!muxrb2=muxir15-muxlb2;
!muyrb1=muyir15-muylb1;
!muyrb2=muyir15-muylb2;
!
!value,(muxlIR1b1-muxLb1)/phixlIR1b1,(muylIR1b1-muyLb1)/phiylIR1b1,(muxrIR1b1-muxRb1)/phixrIR1b1,(muyrIR1b1-muyRb1)/phiyrIR1b1;
!value,(muxlIR1b2-muxLb2)/phixlIR1b2,(muylIR1b2-muyLb2)/phiylIR1b2,(muxrIR1b2-muxRb2)/phixrIR1b2,(muyrIR1b2-muyRb2)/phiyrIR1b2;
!value,(muxlIR5b1-muxLb1)/phixlIR5b1,(muylIR5b1-muyLb1)/phiylIR5b1,(muxrIR5b1-muxRb1)/phixrIR5b1,(muyrIR5b1-muyRb1)/phiyrIR5b1;
!value,(muxlIR5b2-muxLb2)/phixlIR5b2,(muylIR5b2-muyLb2)/phiylIR5b2,(muxrIR5b2-muxRb2)/phixrIR5b2,(muyrIR5b2-muyRb2)/phiyrIR5b2;
!
!phixlIR1b1=muxLb1-muxLb1_0;phixlIR5b1=muxLb1-muxLb1_0;phixlIR1b2=muxLb2-muxLb2_0;phixlIR5b2=muxLb2-muxLb2_0;
!phixrIR1b1=muxRb1-muxRb1_0;phixrIR5b1=muxRb1-muxRb1_0;phixrIR1b2=muxRb2-muxRb2_0;phixrIR5b2=muxRb2-muxRb2_0;
!phiylIR1b1=muyLb1-muyLb1_0;phiylIR5b1=muyLb1-muyLb1_0;phiylIR1b2=muyLb2-muyLb2_0;phiylIR5b2=muyLb2-muyLb2_0;
!phiyrIR1b1=muyRb1-muyRb1_0;phiyrIR5b1=muyRb1-muyRb1_0;phiyrIR1b2=muyRb2-muyRb2_0;phiyrIR5b2=muyRb2-muyRb2_0;
!
!value,phixlIR1b1,phixlIR5b1,phiyrIR1b1,phiyrIR5b1,phixrIR1b2,phixrIR5b2,phiylIR1b2,phiylIR5b2;
!value,phixrIR1b1,phixrIR5b1,phiylIR1b1,phiylIR5b1,phixlIR1b2,phixlIR5b2,phiyrIR1b2,phiyrIR5b2;
!
!value,phixlIR1b1+phixrIR1b1+muxb1_0,phixlIR5b1+phixrIR5b1+muxb1_0
!     ,phixlIR1b2+phixrIR1b2+muxb2_0,phixlIR5b2+phixrIR5b2+muxb2_0;
!value,phiylIR1b1+phiyrIR1b1+muyb1_0,phiylIR5b1+phiyrIR5b1+muyb1_0
!     ,phiylIR1b2+phiyrIR1b2+muyb2_0,phiylIR5b2+phiyrIR5b2+muyb2_0;
!
!!exec plotw(b1);exec plotw(b2);
!
!phixlb1=phixlIR5b1;phixrb1=phixrIR5b1;phiylb1=phiylIR5b1;phiyrb1=phiyrIR5b1;
!phixlb2=phixlIR5b2;phixrb2=phixrIR5b2;phiylb2=phiylIR5b2;phiyrb2=phiyrIR5b2;
!
!value,phixrb1+phixlb1,phixrb2+phixlb2,phiyrb1+phiylb1,phiyrb2+phiylb2;
!
!value,phixlb1,phiyrb1,phixrb2,phiylb2;
!value,phixrb1,phiylb1,phixlb2,phiyrb2;
!value,phixlb1+phixrb1+muxb1_0,phixlb2+phixrb2+muxb2_0;
!value,phiylb1+phiyrb1+muyb1_0,phiylb2+phiyrb2+muyb2_0;

value,ksf1.a81b1,ksf1.a12b1,ksf1.a45b1,ksf1.a56b1;
value,ksd2.a81b1,ksd2.a12b1,ksd2.a45b1,ksd2.a56b1;

value,ksf2.a81b2,ksf2.a12b2,ksf2.a45b2,ksf2.a56b2;
value,ksd1.a81b2,ksd1.a12b2,ksd1.a45b2,ksd1.a56b2;

!exec plotw(b1);exec plotw(b2);

exec,REMOVE_PHASESHIFT(e.ds.l5.b1,b1);exec,REMOVE_PHASESHIFT(s.ds.r5.b1,b1);
exec,REMOVE_PHASESHIFT(e.ds.l5.b2,b2);exec,REMOVE_PHASESHIFT(s.ds.r5.b2,b2);
exec,REMOVE_PHASESHIFT(e.ds.l1.b1,b1);exec,REMOVE_PHASESHIFT(s.ds.r1.b1,b1);
exec,REMOVE_PHASESHIFT(e.ds.l1.b2,b2);exec,REMOVE_PHASESHIFT(s.ds.r1.b2,b2);


!!!Rematch IR1 and IR5 with right phase shift

!muxIP5b1_l=muxlb1; muyIP5b1_l=muylb1; muxIP1b1_l=muxlb1; muyIP1b1_l=muylb1;
!muxIP5b2_l=muxlb2; muyIP5b2_l=muylb2; muxIP1b2_l=muxlb2; muyIP1b2_l=muylb2;
!muxIP5b1_r=muxrb1; muyIP5b1_r=muyrb1; muxIP1b1_r=muxrb1; muyIP1b1_r=muyrb1;
!muxIP5b2_r=muxrb2; muyIP5b2_r=muyrb2; muxIP1b2_r=muxrb2; muyIP1b2_r=muyrb2;

muxIP5b1_l=muxIP5b1_l+phixlb1;
muxIP5b1_r=muxIP5b1_r+phixrb1;
muyIP5b1_l=muyIP5b1_l+phiylb1;
muyIP5b1_r=muyIP5b1_r+phiyrb1;
muxIP5b2_l=muxIP5b2_l+phixlb2;
muxIP5b2_r=muxIP5b2_r+phixrb2;
muyIP5b2_l=muyIP5b2_l+phiylb2;
muyIP5b2_r=muyIP5b2_r+phiyrb2;



muxIP5b1=muxIP5b1_l+muxIP5b1_r;
muxIP5b2=muxIP5b2_l+muxIP5b2_r;
muyIP5b1=muyIP5b1_l+muyIP5b1_r;
muyIP5b2=muyIP5b2_l+muyIP5b2_r;




value,tarwIR1Lb1;
value,tarwIR1Rb1;
value,tarwIR1Lb2;
value,tarwIR1Rb2;
value,tarwIR5Lb1;
value,tarwIR5Rb1;
value,tarwIR5Lb2;
value,tarwIR5Rb2;

value,muxIP5b1_l,muxIP5b1_r,muyIP5b1_l,muyIP5b1_r;
value,muxIP5b2_l,muxIP5b2_r,muyIP5b2_l,muyIP5b2_r;
value,muxIP5b1,muxIP5b2,muyIP5b1,muyIP5b2;

return;
