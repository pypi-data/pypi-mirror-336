
def z_5():
    print(f'''
1) Независимые наблюдения нормально распределенной случайной величины X, описывающей
приращение стоимости акций некоторой компании, представлены в виде выборки (campus.fa.ru).
Скопируйте и преобразуйте в столбец "A" данные выборки на лист "Лист1" Excel-файла и,
используя Excel, очистите исходную выборку от пропусков "NA", преобразуйте её в
вариационный ряд. Для полученного ряда вычислите требуемые далее величины: количество
пропущенных значений в исходной выборке, обозначенные как "NA"; объем очищенной от
пропусков выборки; среднее значение; стандартное отклонение (исправленное); несмещенную
дисперсию; первую и третью квартиль; медиану; максимальное и минимальное значение в
вариационном ряду; размах выборки; исправленный эксцесс и коэффициент асимметрии
(формулы по умолчанию в Excel); значение ошибки выборки; границы 0.95-доверительного
интервала для E(X) и Var(X); количество выбросов выше и ниже нормы. Постройте на листе
"Лист1" гистограмму и диаграмму "ящик с усиками" для исходной выборки, очищенной от "NA"
и выбросов.

z_5_1(data, gamma, yr_qvant)

2) По результатам социологического исследования ответы респондентов на определенный
вопрос анкеты представлены в виде выборки (campus.fa.ru). Скопируйте и преобразуйте в столбец
"A" данные выборки на лист "Лист1" Excel-файла. Используя Excel, очистите выборку от
пропусков, обозначенных как "NA", и вычислите требуемые далее величины: количество
различных вариантов ответов респондентов, встречающиеся в очищенной выборке; объем
очищенной от "NA" выборки; количество пропущенных данных "NA" в исходной выборке; доля
респондентов, которые дали ответ "M"; границs 0.95-доверительного интервала для истинной
доли ответов "M". На уровне значимости 0.1 проверьте критерием согласия (Хи-квадрат
критерием Пирсона) гипотезу о равновероятном распределении ответов респондентов.
Вычислите количество степеней свободы, критическое значение статистики хи-квадрат и
наблюдаемое значение хи-квадрат. Сделайте вывод: есть ли основания отвергнуть гипотезу о
равновероятном распределении ответов. Постройте на листе "Лист2" гистограмму для исходной
выборки, очищенной от "NA".

z_5_2(data='1',alpha1 = 0.05, alpha2 = 0.05)

3) Ряд совместных наблюдений независимых нормально распределенных случайных величин X
и Y, описывающих некоторый финансовый показатель двух фирм, задан двумерной выборкой
(campus.fa.ru). Скопируйте данную выборку на лист "Лист3" и преобразуйте ее в столбцы "A" и
"B" соответственно для первой и второй фирмы. При этом связанные значения показателей
должны располагаться в одной строке. Используя Excel, очистите исходную выборку от
пропущенных данных, обозначенных как "NA", и вычислите требуемые далее величины:
выборочный коэффициент корреляции Пирсона между X и Y; значение P-value в проверке
гипотезы о равенстве средних значений показателей фирм при альтернативной гипотезе об их
неравенстве (без каких-либо предположений о равенстве дисперсий); значение P-value в проверке
гипотезы о равенстве дисперсий показателей двух фирм при альтернативной гипотезе об их
неравенстве. Сделайте выводы: На уровне значимости 0.05 можно ли утверждать, что средние
значения показателей у фирм различны? На уровне значимости 0.05 можно ли утверждать, что
дисперсии показателей фирм различны?

z_5_3(data, flag1, alpha1, flag2, alpha2)
''')

def z_2():
    print('''№ 1.
    В группе Ω учится 10 студентов Ω = {1, 2, ..., 10}. Пусть X(i) - 100-балльная оценка студента i ∈ Ω. Из группы Ω случайным образом 5 раз выбирается студент ω ∈ Ω. Повторный выбор допускается. Пусть ωj - студент, полученный после выбора j = 1, ..., 5. X(ωj) - его оценка. Среднюю оценку на случайный выборке обозначим X̄ = 1/5 * Σ X(ωj). Оценки в группе даны: 53, 34, 61, 58, 83, 74, 61, 87, 6, 79. Требуется найти 1) дисперсию Var(X̄); 2) центральный момент μ3(X̄).
    ''')
    print(
        '''№ 2. В группе Ω учится 10 студентов Ω = {1, 2, ..., 10}. Пусть X(j) — 100-балльная оценка студента i ∈ Ω. В группе Ω случайным образом 5 раз выбирается студент ω ∈ Ω. Повторный выбор не допускается. Пусть ω_j — студент, полученный после выбора j = 1, ..., 5. X(ω_j) — его оценка. Среднюю оценку на случайной выборке обозначим X̄ = (1/5) * ∑(X(ω_j)) для j от 1 до 5. Оценки в группе даны: 77, 70, 54, 51, 95, 45, 80, 72, 97, 63. Требуется найти: 1) математическое ожидание E(X̄); 2) дисперсию Var(X̄).''')
    print('''№ 3. Распределение Баллов на экзамене до перепроверки задано таблицей:
    
    Оценка работы | 2 | 3 | 4 | 5
    --------------|---|---|---|---
    Число работ   | 7 | 22 | 49 | 22
    
    Работы будут перепроверять 5 преподавателей, которые разделили все работы между собой поровну случайным образом.    Пусть X̄ — средний балл (до перепроверки) работ, попавших к одному из преподавателей. Требуется найти: 1) математическое ожидание E(X̄); 2) стандартное отклонение σ(X̄).''')

    print('''

    № 4. Две игральные кости, красная и синяя подбрасываются до тех пор, пока не выпадет 19 различных (с учетом цвета)  комбинаций кубиков. Пусть R_i — число очков на красной кости, а B_i — число очков на синей кости в комбинации с номером i. Случайные величины X_i задаются соотношениями: X_i = 11R_i - 9B_i, i = 1,...,19. Среднее арифметическое этих величин обозначим X̄ = (1/19) * ∑(X_i) для i от 1 до 19. Требуется найти: 1) математическое ожидание E(X̄); 2) стандартное отклонение σ(X̄).''')
    print('''
    № 5. Имеется 11 пронумерованных монет. Монеты подбрасываются до тех пор, пока не выпадет 257 различных (с учетом номера монеты) комбинаций орел-решка.
    Пусть X_i — число орлов в комбинации с номером i, а X̄ = (1/257) * ∑(X_i) для i от 1 до 257 — среднее число орлов в полученных таким образом комбинациях.
    Требуется найти: 1) математическое ожидание E(X̄); 2) дисперсию Var(X̄).''')
    print('''
    № 6. Эмпирические распределения признаков X и Y из генеральной совокупности Ω = {1, 2, ..., 100} задано таблицей частот:

            | Y = 1 | Y = 3 | Y = 5
    --------------------------------
    X = 100 |  13  |  16   |  20
    X = 300 |  12  |  28   |  11

    Из Ω случайным образом без возвращения извлекают 10 элементов. Пусть X̄ и Ȳ — средние значения признаков на выбранных элементах. Требуется найти: 1) математическое ожидание E(X̄); 2) дисперсию Var(Ȳ); 3) коэффициент корреляции ρ(X̄, Ȳ).
    ''')
    print('''
    № 7. Эмпирические распределения признаков X и Y из генеральной совокупности Ω = {1, 2, ..., 100} задано таблицей частот:

    X       | Y = 1 | Y = 3 | Y = 5
    --------------------------------
    X = 200 |  10  |  15   |  16
    X = 300 |  14  |  11   |  14

    Из Ω случайным образом без возвращения извлекают 10 элементов. Пусть X̄ и Ȳ — средние значения признаков на выбранных элементах. Требуется найти: 1) математическое ожидание E(Ȳ); 2) стандартное отклонение σ(X̄); 3) ковариацию Cov(X̄, Ȳ).
    ''')

def gip_sr():
    print('''
    1. Пусть x = (x1, ..., x30) - реализация случайной выборки X = (X1, ..., X30) из нормального распределения N(му, 3.2^2). Проверить на уровне значимости альфа = 0.04 основную гипотезу H0: му = 1.65 против альтернативной гипотезы H1: му ≠ 1.65 с критическим множеством вида Kα = (-бесконечность, -A] ∪ [A, +бесконечность).

    1) Найдите значение статистики критерия Zнабл = Z(x).
    2) Найдите (границу) A критического множества.
    3) Найдите P-значение критерия и сделайте выводы.
    4) Найдите мощность W критерия для H1: му = 1.52.

    Исходные данные: x =
     (-5,641; 5,885; -1,079; 7,921; 5,669; -0,001; 9,762; 5,076; 3,167; 3,471; 1,036; 6,13; 0,419; 2,498; -1,457; 2,824; 1,725; 3,795; -3,386; -0,196).
    ''')
    print('''
    2. Пусть x = (x1, ..., x20) - реализация случайной выборки X = (X1, ..., X20) из нормального распределения N(му, сигма^2). Проверить на уровне значимости альфа = 0.05 основную гипотезу H0: му = 1.65 против альтернативной гипотезы H1: му ≠ 1.65 с критическим множеством вида Kα = (-бесконечность, -A] ∪ [A, +бесконечность).

    1) Найдите значение статистики критерия t = Tнабл. = T(x).
    2) Найдите (границу) A критического множества.
    3) Найдите P-значение критерия и сделайте вывод.
    4) Найдите мощность W критерия для H1: му = 1.52.

    Исходные данные: x = (1.146, 2.958, 3.325, -0.534, 0.374, 5.293, 0.12, 1.185, 5.148, 5.351, 2.639, 1.47, -1.967, 4.96, 6.057, -0.542, 1.544, -0.243, -1.988, 2.844).
    ''')

def gip_var():
    print('''
    1. Пусть x = (x1, ..., x30) - реализация случайной выборки X = (X1, ..., X30) из нормального распределения N(1.65, сигма^2). Проверить на уровне значимости альфа = 0.05 гипотезу H0: сигма = 1.15 против альтернативной гипотезы H1: сигма ≠ 1.15 с критическим множеством вида Kα = (0, A] ∪ (B, +бесконечность).

    1) Найдите значение статистики критерия x_2_0^2.
    2) Найдите границы A и B критического множества и проверьте гипотезу H0.
    3) Найдите P-значение критерия.
    4) Найдите вероятность ошибки второго рода при сигма = 1.25.

    Исходные данные: x = (-0.738, 2.94, 0.676, 0.874, 0.824, -1.162, 0.93, 2.749, 2.44, 0.591, 2.566, -0.634, 1.575, 0.886, 2.808, 0.885, 3.55, 1.322, 7.96, 3.074, 3.033, 1.228, 0.959, -0.171, 1.779, 0.062, 0.485, 0.609, -0.052, 0.487).
    ''')
    print('''
    2. Пусть z = (x1, ..., x30) - реализация случайной выборки X = (X1, ..., X30) из нормального распределения N(mu; sigma^2). Проверить на уровне значимости alpha = 0.05 гипотезу H0: sigma = 1.15 против альтернативной гипотезы H1: sigma ≠ 1.15 с критическим множеством вида Kα = (0;A) ∪ (B; + ∞).

    1) Найдите значение статистики критерия x^2.
    2) Найдите границы A и B критического множества и проверьте гипотезу H0.
    3) Найдите P-значение критерия.
    4) Найдите вероятность ошибки второго рода beta для sigma = 1.25. 

    Исходные данные z = (-0.738, 2.94, 0.676, 0.874, 0.824, -1.162, 0.93, 2.749, 2.447, 0.591, -0.669, -0.634, 1.573, 0.886, 2.808, 0.885, 3.55, 1.347, 1.796, 3.074, 3.033, 1.226, 0.999, -0.171, 1.779, 0.062, 0.485, 0.609, -0.062, 0.487).
    ''')


def show(filename):
    import importlib.resources as pkg_resources
    from IPython.display import display, Image
    package = "varr_0.theory"
    filename += '.png'
    try:
        with pkg_resources.path(package, filename) as file_path:
            img = Image(filename=str(file_path))
            display(img)
    except Exception as e:
        print(f'Неправильное имя файла: {e}')
    return filename


def show_pdf(filename):
    import importlib.resources as pkg_resources
    from IPython.display import display, IFrame
    package = "varr_0.theory"
    filename += '.pdf'
    try:
        with pkg_resources.path(package, filename) as file_path:
            # Создаем IFrame для отображения PDF
            pdf_iframe = IFrame(src=str(file_path), width=1000, height=800)
            display(pdf_iframe)
    except Exception as e:
        print(f'Неправильное имя файла: {e}')
    return filename

def vec():
    show('photo_2025-01-13_17-12-00')
    show('photo_2025-01-13_19-55-34')
    show('photo_2025-01-13_17-30-02')
    show('photo_2025-01-13_17-30-02 (2)')
    show('photo_2025-01-13_17-30-02 (3)')
    show('photo_2025-01-13_17-30-02 (4)')
    show('photo_2025-01-13_19-00-29')

def discr():
    print(
        'В первом броске участвуют 160 несимметричных монет. Во втором броске участвуют только те монеты, на которых в первом броске выпал "орел".\n'
        'Известно, что вероятность выпадения "орла" для данных несимметричных монет равна 0,55. Найдите:\n'
        '1) математическое ожидание числа "орлов", выпавших во втором броске;\n'
        '2) дисперсию условного математического ожидания числа "орлов", выпавших во втором броске, относительно числа "орлов", выпавших в первом броске.')
    show('1')
    print(
        'Вариант задачи 2: В первом броске участвуют 118 несимметричных монет. Во втором броске участвуют только те монеты, на которых в первом броске выпал орел. Известно, что вероятность выпадения орла для данных несимметричных монет равна 0,65. Найдите: 1) математическое ожидание числа "орлов", выпавших во втором броске; 2) математическое ожидание условной дисперсии числа "орлов", выпавших во втором броске, относительно числа "орлов", выпавших в первом броске.')
    show('2')
    print('В первом броске участвуют 88 несимметричных монет. Во втором броске участвуют только те монеты, на которых в первом броске выпал \'орел\'. Известно, что вероятность выпадения \'орла\' для данных несимметричных монет равна 0,7. Найдите: 1) математическое ожидание условной дисперсии числа \'орлов\', выпавших во втором броске, относительно числа \'орлов\', выпавших в первом броске; 2) дисперсию условного математического ожидания числа \'орлов\', выпавших во втором броске, относительно числа \'орлов\', выпавших в первом броске.')
    show('3')
    print('Средний ущерб от одного пожара составляет 4,4 млн. руб. Предполагается, что ущерб распределен по показательному закону, а число пожаров за год - по закону Пуассона. Также известно, что за 5 лет в среднем происходит 14 пожаров. Найдите: 1) математическое ожидание суммарного ущерба от всех пожаров за один год; 2) стандартное отклонение суммарного ущерба от пожаров за год.')
    show('4')
    print('Максимальный ущерб от страхового случая составляет 3,3 млн. руб. Предполагается, что фактический ущерб распределен равномерно от 0 до максимального ущерба, а число страховых случаев за год - по закону Пуассона. Также известно, что за 10 лет в среднем происходит 12 страховых случаев. Найдите: 1) математическое ожидание суммарного ущерба от всех страховых случаев за один год; 2) стандартное отклонение суммарного ущерба от страховых случаев за год.')
    show('5')
    print('Для случайной цены Y известны вероятности: P(Y=2)=0,6 и P(Y=15)=0,4. При условии, что Y=y, распределение выручки X является равномерным на отрезке [0,7y]. Найдите: 1) математическое ожидание E(XY); 2) ковариацию Cov(X,Y).')
    show('6')
    print('Условие задачи:\nИгральная кость и 29 монет подбрасываются до тех пор, пока в очередном броске не выпадет ровно 8 "орлов".\nПусть S – суммарное число очков, выпавших на игральной кости при всех бросках.\nНайдите:\n1) Математическое ожидание E(S);\n2) Стандартное отклонение σS.')
    show('7')

def ms_16():
    show('МС16_№2')
    show('МС16_№3')
    show('МС16_№4')
    show('МС16_№5')
    show('МС16_6')
    show('МС16_7')
    show('МС16_11')
    show('МС16_12')

def ms():
    print("""
    1. В таблице представлены данные по числу сделок на фондовой бирже за квартал для 400 инвесторов:

    x_i   |  0   |  1   |  2   |  3   |  4   |  5   |  6   |  7   |  8   |  9   |  10  |
    n_i   | 146  |  97  |  73  |  34  |  23  |  10  |   6  |   3  |   4  |   2  |   2  |

    В предположении, что случайное число сделок описывается распределением Пуассона, оценить параметр λ методом моментов.
    Определить вероятность того, что число сделок за квартал будет не менее двух, применяя, метод моментов, и непосредственно по таблице.
    Ответ: λ = 1,535. На основе метода моментов – 46%, по таблице – 39%.
    """)
    print("""Пусть случайная величина 𝑋 равномерно распределена на [𝑎; 𝑏]. Найдите методом моментов оценки для параметров 𝑎 и 𝑏.""")
    print("""3.Известно, что доля возврата по кредитам в банке имеет распределение:
    F(x) = x^β, 0 ≤ x ≤ 1.

    Наблюдения показали, что в среднем она составляет 90%.
    Методом моментов оцените параметр β. Найдите вероятность того, что доля возврата опустится ниже 75%.

    Ответ: β̂ = 9; вероятность = 0,0751.""")
    print("""4. Известно, что доля возврата по кредитам в банке имеет распределение:
    F(x) = x^β, 0 ≤ x ≤ 1.

    Наблюдения показали, что в среднем она составляет 90%.
    Методом моментов оцените параметр β. Найдите вероятность того, что доля возврата опустится ниже 75%.

    Ответ: β̂ = 9; вероятность = 0,0751.""")

def ms_2():
    show('12')

def func():
    print('z_5 : z_5_1, z_5_2, z_5_3(flag1 = , flag2= )')
    print('выборки из конечной совокупности z_2 : z_2_1, z_2_2, z_2_3, z_2_4, z_2_5, z_2_6, z_2_7')
    print('проверка гипотез о значении среднего gip_sr : gip_sr_1, gip_sr_2')
    print('проверка гипотез о значении дисперсии gip_var : gip_var_1, gip_var_2')
    print('проверка гипотез о равенстве двух средних gip_2_sr')
    print('проверка гипотез о равенстве трех средних gip_3_sr')
    print('доверительный интервал для коэффициента корреляции dov_int_ro')
    print('лекции show_pdf(\"''\") :  lec_1, lec_2, lec_3, lec_4, lec_5, lec_6, lec_7, lec_8')
    print('теория show_pdf(\"''\") :  ms_1, ms_2, ms_3, ms_4, ms_5')
    print('метод максимального правдоподобия mmp')
    print('вектора vec')
    print('условные характеристики относительно дискретной СВ discr')
    print('ms_16')
    print('ms : ms_1, ms_2, ms_3, ms_4')
