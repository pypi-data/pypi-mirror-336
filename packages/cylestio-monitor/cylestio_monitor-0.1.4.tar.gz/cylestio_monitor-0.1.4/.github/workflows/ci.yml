name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

# This is a complete replacement of all previous workflows
# No other workflows should be running in this repository

jobs:
  verify:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Verify no deleted files
        run: |
          echo "Ensuring deleted files don't exist:"
          if [ -f "tests/test_events_processor.py" ]; then
            echo "ERROR: tests/test_events_processor.py still exists!"
            exit 1
          fi
          if [ -f "tests/test_patchers_anthropic.py" ]; then
            echo "ERROR: tests/test_patchers_anthropic.py still exists!"
            exit 1
          fi
          echo "Confirmed deleted files are gone"
          
          echo "Current test files:"
          find tests -name "test_*.py" | sort
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: 'pip'
          cache-dependency-path: 'pyproject.toml'
      
      - name: Check Python version
        run: |
          python --version
          which python
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev,test]"
          pip install safety bandit
      
      - name: Simple security check
        run: bandit -r src/ -ll || true
  
  publish:
    needs: verify
    if: github.event_name == 'release' && github.event.action == 'published'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      
      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build twine
      
      - name: Build package
        run: python -m build
      
      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: twine upload dist/* 