!function(){var o,e;o=this,e=function(o){"use strict";function e(o,e,s){e in o?Object.defineProperty(o,e,{value:s,enumerable:!0,configurable:!0,writable:!0}):o[e]=s}var s;let t=Spina.spina((e(s=class extends Spina.BaseModel{initialize(){this.hooks=[]}},"defaults",{id:null,name:null,settings:{}}),s=s))||s,n=Spina.spina({prototypeAttrs:["each","hookPoint"]})((e(s=class extends Spina.BaseModel{static each(o){var e=1<arguments.length&&void 0!==arguments[1]?arguments[1]:null;for(const s of this.prototype.hookPoint.hooks)o.call(e,s)}initialize(){var o=this.get("extension");console.assert(!!this.hookPoint,"This ExtensionHook subclass must define hookPoint"),console.assert(!!o,"An Extension instance must be passed to ExtensionHook"),o.hooks.push(this),this.hookPoint.addHook(this),this.setUpHook()}setUpHook(){}},"hookPoint",null),e(s,"defaults",{extension:null}),s=s))||s,i=Spina.spina(s=class extends Spina.BaseModel{initialize(){this.hooks=[]}addHook(o){this.hooks.push(o)}})||s;o.Extension=t,o.ExtensionHook=n,o.ExtensionHookPoint=i},"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((o="undefined"!=typeof globalThis?globalThis:o||self).Djblets=o.Djblets||{})}.call(this);
