{"version":3,"file":"index.js","sources":["../../../../../static/djblets/js/avatars/models/avatarSettingsModel.ts","../../../../../static/djblets/js/avatars/views/avatarServiceSettingsFormView.ts","../../../../../static/djblets/js/avatars/views/fileUploadSettingsFormView.ts","../../../../../static/djblets/js/avatars/views/avatarSettingsFormView.ts","../../../../../static/djblets/js/avatars/index.ts"],"sourcesContent":["/**\n * Settings for the avatar configuration form.\n */\n\nimport {\n    type ModelAttributes,\n    BaseModel,\n    spina,\n} from '@beanbag/spina';\n\n\n/**\n * Attributes for the Settings model.\n *\n * Version Added:\n *     5.0\n */\nexport interface SettingsAttributes extends ModelAttributes {\n    /**\n     * A mapping of each service ID to its configuration object.\n     */\n    configuration: { [key: string]: object };\n\n    /**\n     * The currently selected service ID.\n     */\n    serviceID: string;\n\n    /**\n     * A mapping of each service ID to its properties.\n     */\n    services: { [key: string]: object };\n}\n\n\n/**\n * Settings for the avatar configuration form.\n */\n@spina\nexport class Settings extends BaseModel<SettingsAttributes> {\n    /**\n     * Return defaults for the model attributes.\n     *\n     * Returns:\n     *     SettingsAttributes:\n     *     Default values for the model attributes.\n     */\n    static defaults(): SettingsAttributes {\n        return {\n            configuration: {},\n            serviceID: null,\n            services: {},\n        };\n    }\n}\n","/**\n * A base class for avatar service settings forms.\n */\n\nimport {\n    type BaseModel,\n    BaseView,\n    spina,\n} from '@beanbag/spina';\n\n\n/**\n * A base class for avatar service settings forms.\n *\n * Subclasses should override this to provide additional behaviour for\n * previews, etc.\n */\n@spina\nexport class ServiceSettingsFormView extends BaseView<\n    BaseModel,\n    HTMLFieldSetElement\n> {\n    /**\n     * Validate the form.\n     *\n     * Returns:\n     *     boolean:\n     *     Whether or not the form is valid.\n     */\n    validate(): boolean {\n        return true;\n    }\n\n    /**\n     * Hide the form.\n     *\n     * This will set the disabled and hidden states.\n     *\n     * Version Changed:\n     *     5.0:\n     *     This no longer alters the ``display`` state of the element.\n     *\n     * Returns:\n     *     ServiceSettingsFormView:\n     *     This object, for chaining.\n     */\n    hide(): this {\n        const el = this.el;\n        el.disabled = true;\n        el.hidden = true;\n\n        return this;\n    }\n\n    /**\n     * Show the form.\n     *\n     * This will remove the disabled and hidden states.\n     *\n     * Version Changed:\n     *     5.0:\n     *     This no longer alters the ``display`` state of the element.\n     *\n     * Returns:\n     *     ServiceSettingsFormView:\n     *     This object, for chaining.\n     */\n    show(): this {\n        const el = this.el;\n        el.disabled = false;\n        el.hidden = false;\n\n        return this;\n    }\n}\n","/**\n * A settings form for the file upload avatar service.\n */\n\nimport {\n    type EventsHash,\n    spina,\n} from '@beanbag/spina';\n\nimport { ServiceSettingsFormView } from './avatarServiceSettingsFormView';\n\n\nconst allowedMimeTypes = [\n    'image/gif',\n    'image/jpeg',\n    'image/png',\n];\n\n\n/**\n * A file upload avatar settings form.\n *\n * This form provides a preview of the uploaded avatar.\n */\n@spina\nexport class FileUploadSettingsFormView extends ServiceSettingsFormView {\n    /**\n     * Events for the view.\n     */\n    static events: EventsHash = {\n        'change #id_file-upload-avatar_upload': '_onFileChanged',\n        'click .avatar-file-upload-browse': '_onBrowseClicked',\n        'click .avatar-preview': '_onBrowseClicked',\n        'dragenter .avatar-file-upload-config': '_onDragEnter',\n        'dragleave .avatar-file-upload-config': '_onDragLeave',\n        'dragover .avatar-file-upload-config': '_onDragOver',\n        'drop .avatar-file-upload-config': '_onDrop',\n    };\n\n    /**********************\n     * Instance variables *\n     **********************/\n\n    /** The main container for the form. */\n    #$box: JQuery;\n\n    /** The preview image. */\n    #$preview: JQuery;\n\n    /** The file input element. */\n    #$fileInput: JQuery<HTMLInputElement>;\n\n    /**\n     * Validate the form.\n     *\n     * If a file is selected, ensure it is has the correct MIME type.\n     *\n     * Returns:\n     *     boolean:\n     *     Whether the form is valid.\n     */\n    validate(): boolean {\n        const file = this.#$fileInput[0].files[0];\n\n        if (!file) {\n            alert(_`You must choose a file.`);\n\n            return false;\n        }\n\n        if (!allowedMimeTypes.some(el => (el === file.type))) {\n            alert(_`\n                This wasn't a valid image file format. Please provide a PNG,\n                JPEG, or GIF file.\n            `);\n\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Render the form.\n     */\n    onInitialRender() {\n        this.#$box = this.$('.avatar-file-upload-config');\n        this.#$preview = this.$('.avatar-preview');\n        this.#$fileInput = this.$(\n            '#id_file-upload-avatar_upload') as JQuery<HTMLInputElement>;\n    }\n\n    /**\n     * Handler for a click event on the \"browse\" instruction text.\n     *\n     * This will trigger opening the hidden file input.\n     *\n     * Args:\n     *     e (jQuery.Event):\n     *         The click event.\n     */\n    _onBrowseClicked(e: Event) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        /*\n         * Clicking on the file input itself is not reliable. There are ways\n         * to make it work, but the browser actively avoids letting you do it\n         * if it seems to be hidden. However, it works just fine universally to\n         * click on the label.\n         */\n        this.$('#avatar-file-upload-browse-label').click();\n    }\n\n    /**\n     * Handler for a drag enter event.\n     *\n     * If the configuration box is being hovered over, this will enable the\n     * hover state, giving users an indication that they can drop the image\n     * there.\n     *\n     * Args:\n     *     e (jQuery.Event):\n     *         The drag over event.\n     */\n    _onDragEnter(e: Event) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        if (e.target === this.#$box[0]) {\n            this.#$box\n                .width(this.#$box.width())\n                .addClass('drag-hover');\n        }\n    }\n\n    /**\n     * Handler for a drag over event.\n     *\n     * If the configuration box is being hovered over, this will set the drop\n     * effect.\n     *\n     * Args:\n     *     e (jQuery.Event):\n     *         The drag over event.\n     */\n    _onDragOver(e: JQuery.DragEvent) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        if (e.target === this.#$box[0]) {\n            const dt = e.originalEvent.dataTransfer;\n\n            if (dt) {\n                dt.dropEffect = 'copy';\n            }\n        }\n    }\n\n    /**\n     * Handler for a drag leave event.\n     *\n     * If the configuration box is being left, this will remove the hover state\n     * and reset the drop effect.\n     *\n     * Args:\n     *     e (jQuery.Event):\n     *         The drag leave event.\n     */\n    _onDragLeave(e: JQuery.DragEvent) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        if (e.target === this.#$box[0]) {\n            this.#$box\n                .removeClass('drag-hover')\n                .width('auto');\n\n            const dt = e.originalEvent.dataTransfer;\n\n            if (dt) {\n                dt.dropEffect = 'none';\n            }\n        }\n    }\n\n    /**\n     * Handler for a drop operation.\n     *\n     * This will remove the hover state and attempt to set the list of files\n     * on the file input. If this fails (which will be the case on some\n     * browsers with older behavior), the user will receive an alert telling\n     * them it failed and to try browsing instead.\n     *\n     * If all goes well, the avatar will be ready for upload and the preview\n     * image will be updated.\n     *\n     * Args:\n     *     e (jQuery.Event):\n     *         The drop event.\n     */\n    _onDrop(e: JQuery.DropEvent) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.#$box.removeClass('drag-hover');\n\n        const dt = e.originalEvent.dataTransfer;\n        const files = dt && dt.files;\n\n        if (!files || files.length === 0) {\n            return;\n        }\n\n        if (files.length > 1) {\n            alert(_`\n                You can only set one file as your avatar. Please drag and\n                drop a single file.\n            `);\n\n            return;\n        }\n\n        const fileType = files[0].type;\n\n        if (fileType !== 'image/png' && fileType !== 'image/jpeg' &&\n            fileType !== 'image/gif') {\n            alert(_`\n                This doesn't appear to be a compatible image file for avatars.\n                Please upload a PNG, JPEG, or GIF file.\n            `);\n\n            return;\n        }\n\n        try {\n            this.#$fileInput[0].files = files;\n        } catch (exc) {\n            /*\n             * While most modern browsers allow setting the `files` property of\n             * an input field to the rest of a drag-and-drop operation, not all\n             * do (I'm looking at you, IE/Edge). Older browsers will also\n             * complain. So instead of outright failing, tell the user that\n             * this won't work and suggest a workaround.\n             */\n            alert(_`\n                Looks like dragging to upload a file isn't going to work with\n                your browser. Try browsing for a file instead.\n            `);\n\n            return;\n        }\n\n        this._setAvatarFromFile(files[0]);\n    }\n\n    /**\n     * Handler for when the file input has changed.\n     *\n     * This will update the preview image.\n     *\n     * Args:\n     *     e (jQuery.Event):\n     *         The change event.\n     */\n    _onFileChanged(e: JQuery.ChangeEvent) {\n        const file = e.target.files[0];\n\n        if (file) {\n            this._setAvatarFromFile(file);\n        }\n    }\n\n    /**\n     * Set the avatar from the provided file upload.\n     *\n     * Args:\n     *     file (File):\n     *         The file that was uploaded.\n     */\n    _setAvatarFromFile(file: File) {\n        const reader = new FileReader();\n\n        reader.addEventListener('load', () => {\n            this.#$preview\n                .empty()\n                .removeClass('avatar-preview-unset')\n                .append($('<img>').attr({\n                    alt: _`Your new avatar`,\n                    src: reader.result,\n                }));\n        });\n\n        reader.readAsDataURL(file);\n    }\n}\n","/**\n * A form for managing the settings of avatar services.\n */\n\nimport { BaseView, spina } from '@beanbag/spina';\n\nimport { type Settings } from '../models/avatarSettingsModel';\nimport { type ServiceSettingsFormView } from './avatarServiceSettingsFormView';\n\n\nlet resolveReady;\nconst readyPromise: Promise<void> = new Promise((resolve, reject) => {\n    resolveReady = resolve;\n});\n\n\n/**\n * A form for managing the settings of avatar services.\n *\n * This form lets you select the avatar service you wish to use, as well as\n * configure the settings for that avatar service.\n */\n@spina\nexport class SettingsFormView extends BaseView<Settings> {\n    static events = {\n        'change #id_avatar_service_id': '_onServiceChanged',\n        'submit': '_onSubmit',\n    };\n\n    static instance: SettingsFormView = null;\n    static ready: Promise<void> = readyPromise;\n\n    /**********************\n     * Instance variables *\n     **********************/\n\n    _configForms: Map<string, ServiceSettingsFormView>;\n\n    _$config: JQuery;\n\n    /**\n     * Add a configuration form to the instance.\n     *\n     * Args:\n     *     serviceID (string):\n     *         The unique ID for the avatar service.\n     *\n     *     formClass (constructor):\n     *         The view to use for the form.\n     */\n    static addConfigForm(\n        serviceID: string,\n        formClass: typeof ServiceSettingsFormView,\n    ) {\n        SettingsFormView.instance._configForms.set(\n            serviceID,\n            new formClass({\n                el: $(`[data-avatar-service-id=\"${serviceID}\"]`),\n                model: SettingsFormView.instance.model,\n            }));\n    }\n\n    /**\n     * Initialize the form.\n     */\n    initialize() {\n        console.assert(SettingsFormView.instance === null);\n        SettingsFormView.instance = this;\n        this._configForms = new Map();\n\n        this._$config = this.$('.avatar-service-configuration');\n\n        this.listenTo(this.model, 'change:serviceID',\n                      () => this._showHideForms());\n\n        /*\n         * The promise continuations will only be executed once the stack is\n         * unwound.\n         */\n        resolveReady();\n    }\n\n    /**\n     * Validate the current form upon submission.\n     *\n     * Args:\n     *     e (Event):\n     *         The form submission event.\n     */\n    _onSubmit(e: Event) {\n        const serviceID = this.model.get('serviceID');\n        const currentForm = this._configForms.get(serviceID);\n\n        if (currentForm && !currentForm.validate()) {\n            e.preventDefault();\n        }\n    }\n\n    /**\n     * Render the child forms.\n     *\n     * This will show the for the currently selected service if it has one.\n     */\n    renderForms() {\n        for (const form of this._configForms.values()) {\n            form.render();\n        }\n\n        /*\n         * Ensure that if the browser sets the value of the <select> upon\n         * refresh that we update the model accordingly.\n         */\n        this.$('#id_avatar_service_id').change();\n        this._showHideForms();\n    }\n\n    /**\n     * Show or hide the configuration form.\n     */\n    _showHideForms() {\n        const serviceID = this.model.get('serviceID');\n        const currentForm = this._configForms.get(serviceID);\n        const previousID = this.model.previous('serviceID');\n        const previousForm = previousID\n            ? this._configForms.get(previousID)\n            : undefined;\n\n        if (previousForm && currentForm) {\n            previousForm.hide();\n            currentForm.show();\n        } else if (previousForm) {\n            previousForm.hide();\n            this._$config.hide();\n        } else if (currentForm) {\n            currentForm.show();\n            this._$config.show();\n        }\n    }\n\n    /**\n     * Handle the service being changed.\n     *\n     * Args:\n     *     e (Event):\n     *         The change event.\n     */\n    _onServiceChanged(e: Event) {\n        const $target = $(e.target);\n        const serviceID = $target.val() as string;\n\n        this.model.set('serviceID', serviceID);\n    }\n}\n","import { Settings } from './models/avatarSettingsModel';\nimport {\n    FileUploadSettingsFormView,\n} from './views/fileUploadSettingsFormView';\nimport {\n    ServiceSettingsFormView,\n} from './views/avatarServiceSettingsFormView';\nimport { SettingsFormView } from './views/avatarSettingsFormView';\n\n\n/* Define a namespace for Djblets.Avatars. */\nexport const Avatars = {\n    FileUploadSettingsFormView,\n    ServiceSettingsFormView,\n    Settings,\n    SettingsFormView,\n};\n"],"names":["spina","BaseModel","serviceID","services","_class","BaseView","validate","hide","show","_class2","alert","onInitialRender","reader","alt","resolveReady","el","model","initialize","renderForms","_showHideForms","Avatars","FileUploadSettingsFormView","ServiceSettingsFormView","Settings","SettingsFormView"],"mappings":"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"}