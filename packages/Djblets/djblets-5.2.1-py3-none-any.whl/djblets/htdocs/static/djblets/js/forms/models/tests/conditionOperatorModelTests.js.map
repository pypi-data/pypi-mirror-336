{"version":3,"file":"conditionOperatorModelTests.js","names":["suite","describe","it","op","Djblets","Forms","ConditionOperator","id","name","useValue","valueField","model","className","data","myModelKey","view","myViewKey","parse","expect","toBe","get","toEqual","modelClass","ConditionValueField","modelData","viewClass","ConditionValueFormFieldView","viewData","createValueField","toThrowError"],"sources":["../../../../../../../static/djblets/js/forms/models/tests/conditionOperatorModelTests.es6.js"],"sourcesContent":["suite('djblets/forms/models/ConditionOperator', function() {\n    describe('Initialization', function() {\n        it('With parse and data', function() {\n            const op = new Djblets.Forms.ConditionOperator({\n                id: 'my-op',\n                name: 'My Operator',\n                useValue: true,\n                valueField: {\n                    model: {\n                        className: 'Djblets.Forms.ConditionValueField',\n                        data: {\n                            myModelKey: 'my-value',\n                        },\n                    },\n                    view: {\n                        className: 'Djblets.Forms.ConditionValueFormFieldView',\n                        data: {\n                            myViewKey: 'my-value',\n                        },\n                    },\n                },\n            }, {\n                parse: true,\n            });\n\n            expect(op.id).toBe('my-op');\n            expect(op.get('name')).toBe('My Operator');\n            expect(op.get('useValue')).toBe(true);\n            expect(op.get('valueField')).toEqual({\n                modelClass: Djblets.Forms.ConditionValueField,\n                modelData: {\n                    myModelKey: 'my-value',\n                },\n                viewClass: Djblets.Forms.ConditionValueFormFieldView,\n                viewData: {\n                    myViewKey: 'my-value',\n                },\n            });\n        });\n\n        it('With parse and data, but no valueField', function() {\n            const op = new Djblets.Forms.ConditionOperator({\n                id: 'my-op',\n                name: 'My Operator',\n                useValue: true,\n            }, {\n                parse: true,\n            });\n\n            expect(op.id).toBe('my-op');\n            expect(op.get('name')).toBe('My Operator');\n            expect(op.get('valueField')).toBe(null);\n            expect(op.get('useValue')).toBe(true);\n        });\n    });\n\n    describe('createValueField', function() {\n        it('With custom valueField', function() {\n            const op = new Djblets.Forms.ConditionOperator({\n                id: 'my-op',\n                name: 'My Operator',\n                valueField: {\n                    modelClass: Djblets.Forms.ConditionValueField,\n                    modelData: {\n                        myModelKey: 'my-value',\n                    },\n                    viewClass: Djblets.Forms.ConditionValueFormFieldView,\n                    viewData: {\n                        myViewKey: 'my-value',\n                    },\n                },\n            });\n\n            const valueField = op.createValueField('my-field');\n            expect(valueField.model.get('fieldName')).toBe('my-field');\n        });\n\n        it('Without custom valueField', function() {\n            const op = new Djblets.Forms.ConditionOperator({\n                id: 'my-op',\n                name: 'My Operator',\n            });\n\n            expect(() => op.createValueField('my-field')).toThrowError(\n                'This operator does not have a custom valueField.');\n        });\n    });\n});\n"],"mappings":"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"}