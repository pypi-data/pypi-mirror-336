{"version":3,"file":"conditionSetModel.js","names":["Djblets","Forms","ConditionSet","Backbone","Model","extend","defaults","fieldName","lastID","initialize","attributes","choices","Collection","choicesData","model","ConditionChoice","parse","that","conditions","conditionsData","attrs","options","choice","get","choiceID","operator","operators","operatorID","conditionID","set","Condition","error","id","valid","value","addNewCondition","first","add","data"],"sources":["../../../../../../static/djblets/js/forms/models/conditionSetModel.es6.js"],"sourcesContent":["/**\n * A set of configured conditions, and available choices.\n *\n * This tracks all the conditions that are being configured, handling assigning\n * each one an ID and tracking their state. It also provides information on\n * each choice available for a condition.\n *\n * Attributes:\n *     choices (Backbone.Collection):\n *         A collection of possible choices for a condition. Each entry is a\n *         :js:class:`Djblets.Forms.ConditionChoice`.\n *\n *     conditions (Backbone.Collection):\n *         A collection of configured conditions. Each entry is a\n *         :js:class:`Djblets.Forms.Condition`.\n *\n * Model Attributes:\n *     fieldName (string):\n *         The name of the form field for the main conditions element.\n *\n *     lastID (number):\n *         The last condition row ID used.\n */\nDjblets.Forms.ConditionSet = Backbone.Model.extend({\n    defaults: {\n        fieldName: null,\n        lastID: null,\n    },\n\n    /**\n     * Initialize the model.\n     *\n     * Args:\n     *     attributes (object):\n     *         Attribute values passed to the constructor.\n     */\n    initialize(attributes) {\n        this.choices = new Backbone.Collection(attributes.choicesData, {\n            model: Djblets.Forms.ConditionChoice,\n            parse: true,\n        });\n\n        const that = this;\n\n        this.conditions = new Backbone.Collection(attributes.conditionsData, {\n            model: function(attrs, options) {\n                const choice = attrs.choice ||\n                               that.choices.get(attrs.choiceID);\n                const operator = attrs.operator ||\n                                 (choice\n                                  ? choice.operators.get(attrs.operatorID)\n                                  : null);\n                const lastID = that.get('lastID');\n                const conditionID = (lastID === null ? 0 : lastID + 1);\n\n                that.set('lastID', conditionID);\n\n                return new Djblets.Forms.Condition(\n                    {\n                        choice: choice,\n                        error: attrs.error,\n                        id: conditionID,\n                        operator: operator,\n                        valid: attrs.valid,\n                        value: attrs.value,\n                    },\n                    options);\n            },\n        });\n    },\n\n    /**\n     * Add a new condition.\n     *\n     * This will construct a new condition with defaults and add it to the\n     * collection.\n     */\n    addNewCondition() {\n        const choice = this.choices.first();\n\n        this.conditions.add({\n            choice: choice,\n            operator: choice.operators.first(),\n        });\n    },\n\n    /**\n     * Parse the attribute data passed to the model.\n     *\n     * This will extract only the ``fieldName`` attribute, leaving the rest\n     * to be specially handled by :js:func:`initialize`.\n     *\n     * Args:\n     *     data (object):\n     *         The attribute data passed to the model.\n     *\n     * Returns:\n     *     object:\n     *     The parsed attributes.\n     */\n    parse(data) {\n        return {\n            fieldName: data.fieldName,\n        };\n    },\n});\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,OAAO,CAACC,KAAK,CAACC,YAAY,GAAGC,QAAQ,CAACC,KAAK,CAACC,MAAM,CAAC;EAC/CC,QAAQ,EAAE;IACNC,SAAS,EAAE,IAAI;IACfC,MAAM,EAAE;EACZ,CAAC;EAED;AACJ;AACA;AACA;AACA;AACA;AACA;EACIC,UAAU,CAACC,UAAU,EAAE;IACnB,IAAI,CAACC,OAAO,GAAG,IAAIR,QAAQ,CAACS,UAAU,CAACF,UAAU,CAACG,WAAW,EAAE;MAC3DC,KAAK,EAAEd,OAAO,CAACC,KAAK,CAACc,eAAe;MACpCC,KAAK,EAAE;IACX,CAAC,CAAC;IAEF,MAAMC,IAAI,GAAG,IAAI;IAEjB,IAAI,CAACC,UAAU,GAAG,IAAIf,QAAQ,CAACS,UAAU,CAACF,UAAU,CAACS,cAAc,EAAE;MACjEL,KAAK,EAAE,UAASM,KAAK,EAAEC,OAAO,EAAE;QAC5B,MAAMC,MAAM,GAAGF,KAAK,CAACE,MAAM,IACZL,IAAI,CAACN,OAAO,CAACY,GAAG,CAACH,KAAK,CAACI,QAAQ,CAAC;QAC/C,MAAMC,QAAQ,GAAGL,KAAK,CAACK,QAAQ,KACbH,MAAM,GACJA,MAAM,CAACI,SAAS,CAACH,GAAG,CAACH,KAAK,CAACO,UAAU,CAAC,GACtC,IAAI,CAAC;QACzB,MAAMnB,MAAM,GAAGS,IAAI,CAACM,GAAG,CAAC,QAAQ,CAAC;QACjC,MAAMK,WAAW,GAAIpB,MAAM,KAAK,IAAI,GAAG,CAAC,GAAGA,MAAM,GAAG,CAAE;QAEtDS,IAAI,CAACY,GAAG,CAAC,QAAQ,EAAED,WAAW,CAAC;QAE/B,OAAO,IAAI5B,OAAO,CAACC,KAAK,CAAC6B,SAAS,CAC9B;UACIR,MAAM,EAAEA,MAAM;UACdS,KAAK,EAAEX,KAAK,CAACW,KAAK;UAClBC,EAAE,EAAEJ,WAAW;UACfH,QAAQ,EAAEA,QAAQ;UAClBQ,KAAK,EAAEb,KAAK,CAACa,KAAK;UAClBC,KAAK,EAAEd,KAAK,CAACc;QACjB,CAAC,EACDb,OAAO,CAAC;MAChB;IACJ,CAAC,CAAC;EACN,CAAC;EAED;AACJ;AACA;AACA;AACA;AACA;EACIc,eAAe,GAAG;IACd,MAAMb,MAAM,GAAG,IAAI,CAACX,OAAO,CAACyB,KAAK,EAAE;IAEnC,IAAI,CAAClB,UAAU,CAACmB,GAAG,CAAC;MAChBf,MAAM,EAAEA,MAAM;MACdG,QAAQ,EAAEH,MAAM,CAACI,SAAS,CAACU,KAAK;IACpC,CAAC,CAAC;EACN,CAAC;EAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIpB,KAAK,CAACsB,IAAI,EAAE;IACR,OAAO;MACH/B,SAAS,EAAE+B,IAAI,CAAC/B;IACpB,CAAC;EACL;AACJ,CAAC,CAAC"}