{"version":3,"file":"conditionModel.js","names":["Djblets","Forms","Condition","Backbone","Model","extend","defaults","choice","error","operator","valid","value","initialize","on","get","previous","set","operators","first","unset","destroy","options","stopListening","trigger","collection"],"sources":["../../../../../../static/djblets/js/forms/models/conditionModel.es6.js"],"sourcesContent":["/**\n * A configured condition in a set.\n *\n * The condition represents a combination of a choice, operator, and value.\n * It's owned by a :js:class:`Djblets.Forms.ConditionSet`.\n *\n * Model Attributes:\n *     choice (Djblets.Forms.ConditionChoice):\n *         The selected choice for the condition.\n *\n *     error (string):\n *         An error message for this condition. This would be set if the\n *         user had invalid or missing data, submitted the form, and was\n *         then presented with a validation error.\n *\n *     operator (Djblets.Forms.ConditionOperator):\n *         The selected operator for the condition.\n *\n *     valid (boolean):\n *         Whether this condition is valid. A valid condition is one that\n *         could be loaded successfully (its choice and operator were\n *         registered). An invalid one is intended to be presented as-is,\n *         so the user can figure out what state things were in.\n *\n *     value (object):\n *         The value for the choice, or ``null`` if unset.\n */\nDjblets.Forms.Condition = Backbone.Model.extend({\n    defaults: {\n        choice: null,\n        error: null,\n        operator: null,\n        valid: true,\n        value: null,\n    },\n\n    /**\n     * Initialize the condition.\n     *\n     * This will set up the condition and begin listening for changes to the\n     * properties, setting sane defaults when the choice changes.\n     */\n    initialize() {\n        /*\n         * When the choice changes, we need to change the operator and value\n         * as well. This must be done after the choice event handlers have\n         * run, to give consumers a chance to deal with the new choice. The\n         * 'change' signal is the only time to do this without deferring to\n         * the next event loop (which makes testing harder).\n         */\n        this.on('change', () => {\n            const choice = this.get('choice');\n\n            if (choice !== this.previous('choice')) {\n                /* Reset the operatorID to the first option for this choice. */\n                this.set('operator', choice.operators.first());\n\n                /*\n                 * Now unset the value.\n                 *\n                 * Note that we're not doing this during operator change,\n                 * because we don't want the user to lose all state if\n                 * switching between operators. Ideally, we want to keep what\n                 * they had. If the value won't be used, it simply won't be\n                 * used, and if it can be used for multiple operators, we want\n                 * to preserve it.\n                 */\n                this.unset('value');\n            }\n        });\n    },\n\n    /**\n     * Destroy the condition.\n     *\n     * This will stop listening for events and emit a \"destroy\" signal, just\n     * like the standard :js:class:`Backbone.Model.destroy`. Unlike the\n     * standard method, no HTTP requests are made to a server.\n     *\n     * Args:\n     *     options (object):\n     *         Options passed to the method. These are directly provided to\n     *         listeners of the ``destroy`` event, for compatibility with\n     *         Backbone's method, and is otherwise not used.\n     */\n    destroy(options) {\n        this.stopListening();\n        this.trigger('destroy', this, this.collection, options);\n    },\n});\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,OAAO,CAACC,KAAK,CAACC,SAAS,GAAGC,QAAQ,CAACC,KAAK,CAACC,MAAM,CAAC;EAC5CC,QAAQ,EAAE;IACNC,MAAM,EAAE,IAAI;IACZC,KAAK,EAAE,IAAI;IACXC,QAAQ,EAAE,IAAI;IACdC,KAAK,EAAE,IAAI;IACXC,KAAK,EAAE;EACX,CAAC;EAED;AACJ;AACA;AACA;AACA;AACA;EACIC,UAAU,GAAG;IACT;AACR;AACA;AACA;AACA;AACA;AACA;IACQ,IAAI,CAACC,EAAE,CAAC,QAAQ,EAAE,MAAM;MACpB,MAAMN,MAAM,GAAG,IAAI,CAACO,GAAG,CAAC,QAAQ,CAAC;MAEjC,IAAIP,MAAM,KAAK,IAAI,CAACQ,QAAQ,CAAC,QAAQ,CAAC,EAAE;QACpC;QACA,IAAI,CAACC,GAAG,CAAC,UAAU,EAAET,MAAM,CAACU,SAAS,CAACC,KAAK,EAAE,CAAC;;QAE9C;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB,IAAI,CAACC,KAAK,CAAC,OAAO,CAAC;MACvB;IACJ,CAAC,CAAC;EACN,CAAC;EAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,OAAO,CAACC,OAAO,EAAE;IACb,IAAI,CAACC,aAAa,EAAE;IACpB,IAAI,CAACC,OAAO,CAAC,SAAS,EAAE,IAAI,EAAE,IAAI,CAACC,UAAU,EAAEH,OAAO,CAAC;EAC3D;AACJ,CAAC,CAAC"}