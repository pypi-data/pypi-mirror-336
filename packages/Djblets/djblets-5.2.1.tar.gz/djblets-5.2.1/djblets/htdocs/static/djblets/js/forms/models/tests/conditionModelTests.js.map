{"version":3,"file":"conditionModelTests.js","names":["suite","describe","choice1","choice2","condition","beforeEach","Djblets","Forms","ConditionChoice","id","name","operators","add","Condition","choice","operator","first","value","set","it","expect","get","toBe","undefined"],"sources":["../../../../../../../static/djblets/js/forms/models/tests/conditionModelTests.es6.js"],"sourcesContent":["suite('djblets/forms/models/Condition', function() {\n    describe('Events', function() {\n        describe('choice changes', function() {\n            let choice1,\n                choice2,\n                condition;\n\n            beforeEach(function() {\n                choice1 = new Djblets.Forms.ConditionChoice({\n                    id: 'my-choice-1',\n                    name: 'My Choice 1',\n                });\n                choice1.operators.add({\n                    id: 'my-op-1',\n                    name: 'My Op 1',\n                });\n\n                choice2 = new Djblets.Forms.ConditionChoice({\n                    id: 'my-choice-1',\n                    name: 'My Choice 1',\n                });\n                choice2.operators.add([\n                    {\n                        id: 'my-op-2',\n                        name: 'My Op 2',\n                    },\n                    {\n                        id: 'my-op-3',\n                        name: 'My Op 3',\n                    },\n                ]);\n\n                condition = new Djblets.Forms.Condition({\n                    choice: choice1,\n                    operator: choice1.operators.first(),\n                    value: 'abc123',\n                });\n\n                /* Now change the choice. */\n                condition.set('choice', choice2);\n            });\n\n            it('Operator resets to first', function() {\n                expect(condition.get('operator')).toBe(\n                    choice2.operators.first());\n            });\n\n            it('Value resets', function() {\n                expect(condition.get('value')).toBe(undefined);\n            });\n        });\n    });\n});\n"],"mappings":";;AAAAA,KAAK,CAAC,gCAAgC,EAAE,YAAW;EAC/CC,QAAQ,CAAC,QAAQ,EAAE,YAAW;IAC1BA,QAAQ,CAAC,gBAAgB,EAAE,YAAW;MAClC,IAAIC,OAAO,EACPC,OAAO,EACPC,SAAS;MAEbC,UAAU,CAAC,YAAW;QAClBH,OAAO,GAAG,IAAII,OAAO,CAACC,KAAK,CAACC,eAAe,CAAC;UACxCC,EAAE,EAAE,aAAa;UACjBC,IAAI,EAAE;QACV,CAAC,CAAC;QACFR,OAAO,CAACS,SAAS,CAACC,GAAG,CAAC;UAClBH,EAAE,EAAE,SAAS;UACbC,IAAI,EAAE;QACV,CAAC,CAAC;QAEFP,OAAO,GAAG,IAAIG,OAAO,CAACC,KAAK,CAACC,eAAe,CAAC;UACxCC,EAAE,EAAE,aAAa;UACjBC,IAAI,EAAE;QACV,CAAC,CAAC;QACFP,OAAO,CAACQ,SAAS,CAACC,GAAG,CAAC,CAClB;UACIH,EAAE,EAAE,SAAS;UACbC,IAAI,EAAE;QACV,CAAC,EACD;UACID,EAAE,EAAE,SAAS;UACbC,IAAI,EAAE;QACV,CAAC,CACJ,CAAC;QAEFN,SAAS,GAAG,IAAIE,OAAO,CAACC,KAAK,CAACM,SAAS,CAAC;UACpCC,MAAM,EAAEZ,OAAO;UACfa,QAAQ,EAAEb,OAAO,CAACS,SAAS,CAACK,KAAK,EAAE;UACnCC,KAAK,EAAE;QACX,CAAC,CAAC;;QAEF;QACAb,SAAS,CAACc,GAAG,CAAC,QAAQ,EAAEf,OAAO,CAAC;MACpC,CAAC,CAAC;MAEFgB,EAAE,CAAC,0BAA0B,EAAE,YAAW;QACtCC,MAAM,CAAChB,SAAS,CAACiB,GAAG,CAAC,UAAU,CAAC,CAAC,CAACC,IAAI,CAClCnB,OAAO,CAACQ,SAAS,CAACK,KAAK,EAAE,CAAC;MAClC,CAAC,CAAC;MAEFG,EAAE,CAAC,cAAc,EAAE,YAAW;QAC1BC,MAAM,CAAChB,SAAS,CAACiB,GAAG,CAAC,OAAO,CAAC,CAAC,CAACC,IAAI,CAACC,SAAS,CAAC;MAClD,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC,CAAC;AACN,CAAC,CAAC"}