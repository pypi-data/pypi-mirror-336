<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en-US"
      lang="en-US"
      i18n:domain="PloneMeeting">

<body>
<div metal:define-macro="body">

<metal:base_body use-macro="base_macros/body">

<metal:widgets fill-slot="widgets"
           tal:define="member context/@@plone_portal_state/member;
                       border python: test(member.has_role('Manager'), 'enable_border', 'disable_border');
                       dummy python:request.set(border, 1);
                       tool python: context.portal_plonemeeting;
                       portal context/portal_url/getPortalObject;
                       cfg python: tool.getMeetingConfig(context);
                       usedAttrs cfg/getUsedItemAttributes;
                       showClonableToOtherMCs context/showClonableToOtherMCs;
                       showAdvancedClonableToOtherMCs python: context.adapted().showAdvancedClonableToOtherMCs(showClonableToOtherMCs);
                       isFullField python: context.adapted().viewFullFieldInItemEdit();">


    <tal:showWarningWillInvalidateAdvices condition="context/willInvalidateAdvices">
    <dl class="portalMessage warning">
        <dt i18n:translate="" i18n:domain="plone">Warning</dt><dd i18n:translate="warning_invalidate_advices" i18n:domain="PloneMeeting"></dd>
    </dl><br />
    </tal:showWarningWillInvalidateAdvices>
    <tal:allfield condition="isFullField">
        <tal:comment replace="nothing">Title and description(s)</tal:comment>
        <tal:field define="fieldName python: 'title'">
          <metal:f use-macro="context/@@pm-macros/editContentField"/>
        </tal:field>

        <tal:comment replace="nothing">Proposing group, category, classifier, toDiscuss</tal:comment>
        <metal:field use-macro="python:here.widget('proposingGroup', mode='edit')"/>
        <metal:field use-macro="python:here.widget('proposingGroupWithGroupInCharge', mode='edit')"/>
        <metal:field use-macro="python:here.widget('groupsInCharge', mode='edit')"/>
        <metal:field use-macro="python:here.widget('associatedGroups', mode='edit')"/>
        <metal:field use-macro="python:here.widget('category', mode='edit')"/>
        <metal:field use-macro="python:here.widget('classifier', mode='edit')"/>
        <metal:field use-macro="python:here.widget('committees', mode='edit')"/>
        <metal:field use-macro="python:here.widget('optionalAdvisers', mode='edit')"/>
        <metal:field use-macro="python:here.widget('copyGroups', mode='edit')"/>

        <metal:field use-macro="python:here.widget('preferredMeeting', mode='edit')"/>
        <metal:field use-macro="python:here.widget('sendToAuthority', mode='edit')"/>

        <tal:comment replace="nothing">Clonable to other cfg when not using extra fields</tal:comment>
        <tal:clonableToOtherMCsWithoutExtraFields
            condition="python: showClonableToOtherMCs and not showAdvancedClonableToOtherMCs">
            <metal:f use-macro="context/@@pm-macros/otherMeetingConfigsClonable"/>
        </tal:clonableToOtherMCsWithoutExtraFields>

        <metal:field use-macro="python:here.widget('toDiscuss', mode='edit')"/>
        <metal:field use-macro="python:here.widget('pollType', mode='edit')"/>
        <metal:field use-macro="python:here.widget('pollTypeObservations', mode='edit')"/>

        <metal:field use-macro="python:here.widget('oralQuestion', mode='edit')"/>
        <metal:field use-macro="python:here.widget('itemInitiator', mode='edit')"/>
        <metal:field use-macro="python:here.widget('manuallyLinkedItems', mode='edit')"/>

        <!-- xxx namur-->
        <tal:comment replace="nothing">Confidential item ?</tal:comment>
        <div>
            <metal:field use-macro="python:here.widget('isConfidentialItem', mode='edit')"/>
        </div>

        <metal:field use-macro="python:here.widget('isAcceptableOutOfMeeting', mode='edit')"/>
        <metal:field use-macro="python:here.widget('itemKeywords', mode='edit')"/>
        <metal:field use-macro="python:here.widget('itemTags', mode='edit')"/>
        <metal:field use-macro="python:here.widget('privacy', mode='edit')"/>

        <tal:field define="fieldName python: 'description'">
          <metal:f use-macro="context/@@pm-macros/editContentField"/>
        </tal:field>
        <tal:field define="fieldName python: 'detailedDescription';">
          <metal:f use-macro="context/@@pm-macros/editContentField"/>
        </tal:field>

        <tal:comment replace="nothing">XXX Specific for Namur : decisionProject</tal:comment>
        <tal:field define="fieldName python: 'decisionProject'">
            <metal:f use-macro="context/@@pm-macros/editContentField"/>
        </tal:field>

        <tal:comment replace="nothing">Budget-related information</tal:comment>
        <fieldset tal:condition="python: 'budgetInfos' in usedAttrs">
          <legend i18n:translate="">Budget</legend>
            <metal:field use-macro="python:here.widget('budgetRelated', mode='edit')"/>
            <div id="hideBudgetInfosIfNotBudgetRelated">
                <metal:field use-macro="python:here.widget('budgetInfos', mode='edit')"/>
                <tal:comment replace="nothing">XXX MeetingNamur</tal:comment>
                <metal:field use-macro="python:here.widget('grpBudgetInfos', mode='edit')"/>
            </div>
        </fieldset>

        <tal:field define="fieldName python: 'motivation'">
          <metal:f use-macro="context/@@pm-macros/editContentField"/>
        </tal:field>
        <tal:field define="fieldName python: 'decision'">
          <metal:f use-macro="context/@@pm-macros/editContentField"/>
        </tal:field>
        <tal:field define="fieldName python: 'decisionSuite'">
          <metal:f use-macro="context/@@pm-macros/editContentField"/>
        </tal:field>
        <tal:field define="fieldName python: 'decisionEnd'">
          <metal:f use-macro="context/@@pm-macros/editContentField"/>
        </tal:field>
        <tal:comment replace="nothing">XXX Specific for Namur : vote</tal:comment>
        <tal:field define="fieldName python: 'vote'">
            <metal:f use-macro="context/@@pm-macros/editContentField"/>
        </tal:field>

        <tal:comment replace="nothing">Clonable to other cfg when using extra fields</tal:comment>
        <tal:clonableToOtherMCsWithExtraFields condition="showAdvancedClonableToOtherMCs">
            <metal:f use-macro="context/@@pm-macros/otherMeetingConfigsClonable"/>
        </tal:clonableToOtherMCsWithExtraFields>

        <tal:field define="fieldName python: 'inAndOutMoves'">
          <metal:f use-macro="context/@@pm-macros/editContentField"/>
        </tal:field>
        <tal:field define="fieldName python: 'notes'">
          <metal:f use-macro="context/@@pm-macros/editContentField"/>
        </tal:field>
        <tal:field define="fieldName python: 'committeeObservations'">
          <metal:f use-macro="context/@@pm-macros/editContentField"/>
        </tal:field>
        <tal:field define="fieldName python: 'votesObservations'">
          <metal:f use-macro="context/@@pm-macros/editContentField"/>
        </tal:field>
        <tal:field define="fieldName python: 'committeeTranscript'">
          <metal:f use-macro="context/@@pm-macros/editContentField"/>
        </tal:field>
        <tal:field define="fieldName python: 'meetingManagersNotes'">
          <metal:f use-macro="context/@@pm-macros/editContentField"/>
        </tal:field>
        <tal:field define="fieldName python: 'meetingManagersNotesSuite'">
          <metal:f use-macro="context/@@pm-macros/editContentField"/>
        </tal:field>
        <tal:field define="fieldName python: 'meetingManagersNotesEnd'">
          <metal:f use-macro="context/@@pm-macros/editContentField"/>
        </tal:field>
        <tal:field define="fieldName python: 'observations'">
          <metal:f use-macro="context/@@pm-macros/editContentField"/>
        </tal:field>
        <tal:field define="fieldName python: 'marginalNotes'">
          <metal:f use-macro="context/@@pm-macros/editContentField"/>
        </tal:field>
        <tal:field define="fieldName python: 'internalNotes'">
          <metal:f use-macro="context/@@pm-macros/editContentField"/>
        </tal:field>

        <metal:field use-macro="python:here.widget('templateUsingGroups', mode='edit')"/>
        <metal:field use-macro="python:here.widget('meetingTransitionInsertingMe', mode='edit')"/>

        <metal:field use-macro="python:here.widget('itemAssembly', mode='edit')"/>
        <metal:field use-macro="python:here.widget('itemAssemblyExcused', mode='edit')"/>
        <metal:field use-macro="python:here.widget('itemAssemblyAbsents', mode='edit')"/>
        <metal:field use-macro="python:here.widget('itemAssemblyGuests', mode='edit')"/>
        <metal:field use-macro="python:here.widget('itemSignatures', mode='edit')"/>
        <metal:field use-macro="python:here.widget('textCheckList', mode='edit')"/>
        <tal:comment replace="nothing">XXX MeetingNamur</tal:comment>
        <metal:field use-macro="python:here.widget('itemCertifiedSignatures', mode='edit')"/>
    </tal:allfield>

    <tal:comment replace="nothing">XXX MeetingNamur</tal:comment>
    <tal:notAllfield condition="not:isFullField">
        <tal:comment replace="nothing">Budget-related information</tal:comment>
        <tal:budget define="cbChecked  python: (request.get('budgetRelated',None)==True) or context.getBudgetRelated()"
                    condition="python: 'budgetInfos' in usedAttrs">
            <script language="javascript">
                function toggleBudgetInfo(checkbox) {
                    var budgetField = document.getElementById('budgetField');
                    if (checkbox.checked) budgetField.style.display = "block";
                    else budgetField.style.display = "none";
                }
            </script>
            <div id="archetypes-fieldname-budgetRelated" class="field ArchetypesBooleanWidget"
                     tal:define="brField python: here.getField('budgetRelated')">
                <input type="checkbox" id="budgetRelated" name="budgetRelated:boolean" value="on" class="noborder"
                       onclick="javascript:toggleBudgetInfo(this)" tal:attributes="checked cbChecked"/>
                <input type="hidden" name="budgetRelated:boolean:default" value="" originalvalue=""/>
                <label for="budgetRelated" class="formQuestion" i18n:domain="PloneMeeting"
                         tal:content="brField/widget/label_msgid" i18n:translate=""></label>
                <br/>
            </div>
            <div id="budgetField" name="budgetField"
                     tal:attributes="style python:test(cbChecked, 'display: block', 'display: none')">
                <metal:field use-macro="python:here.widget('budgetInfos', mode='edit')"/>
                <tal:comment replace="nothing">XXX grpBudgetInfos</tal:comment>
                <metal:field use-macro="python:here.widget('grpBudgetInfos', mode='edit')"/>
                <br/>
            </div>
        </tal:budget>
    </tal:notAllfield>
</metal:widgets>
</metal:base_body>
</div>

</body>
</html>
