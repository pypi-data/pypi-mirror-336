Metadata-Version: 2.1
Name: datacheckerpro
Version: 0.1
Summary: A simple datavalidator for validating email, phone numbers, dates, and URLs.
Home-page: https://github.com/Data-Epic/data-validator-ogechukw-okoli
Author: Okoli Ogechukwu Abimbola
Author-email: okoliogechi74@gmail.com
Classifier: Programming Language :: Python :: 3.11
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.6
Description-Content-Type: text/markdown

# **datacheckerpro**

## **Overview**
datacheckerpro is a Python package designed to efficiently validate various types of personal data, including:
- **Email addresses**
- **Phone numbers**
- **Dates**
- **URLs**

This package follows **Object-Oriented Programming (OOP)** principles, ensuring modularity, reusability, and easy integration into different projects.

---

## **Installation**
Install the package using:

pip install datacheckerpro
```

---

## **Usage**

### **1Ô∏è‚É£ Import the Validator Class**
```python
from datacheckerpro.validator import DATAVALIDATOR
```

### **2Ô∏è‚É£ Validate an Email**
```python
data = "example@email.com"
validator = DATAVALIDATOR(data)
print(validator.validate_email())  # Output: True
```

### **3Ô∏è‚É£ Validate a Phone Number**
```python
data = "+1-832-005-3034"
validator = DATAVALIDATOR(data)
print(validator.validate_phone()) # Output: True
To check if a number if froma particular contitnent , you can do this

data = "+234901245890"
validator = DATAVALIDATOR(data)
print(validator.african_numbers()) #output :True
repeat for other continents by simply calling the method continentname_numbers()
```

### **4Ô∏è‚É£ Validate a Date**
```python
data = "2024-02-1123"
validator = DATAVALIDATOR(data)
print(validator.validate_date())  # Output: True
```

### **5Ô∏è‚É£ Validate a URL**
```python
data = "https://google.com"
validator = DATAVALIDATOR(data)
print(validator.validate_url())  # Output: True
```

---

## **Running Tests**
The package includes unit tests to ensure proper functionality. Run tests using:
```bash
pytest-v
```

---

## **Contributing**
Contributions are welcome! To contribute:
1. **Fork** the repository
2. **Create** a feature branch:
   ```bash
   git checkout -b featurebranch
   ```
3. **Commit** your changes:
   ```bash
   git commit -m "Added new feature"
   ```
4. **Push** to the branch:
   ```bash
   git push origin featurebranch
   ```
5. **Open a Pull Request**

---

## **License**
This project is licensed under the **MIT License**.

---

## **Author**
üë§ **OKOLI OGECHUKWU ABIMBOLA**
üìß Email: okoliogechi74@gmail.com

