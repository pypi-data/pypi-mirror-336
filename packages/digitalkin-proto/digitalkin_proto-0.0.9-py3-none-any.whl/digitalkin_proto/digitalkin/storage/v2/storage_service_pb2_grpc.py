# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from digitalkin_proto.digitalkin.storage.v2 import data_pb2 as digitalkin_dot_storage_dot_v2_dot_data__pb2

GRPC_GENERATED_VERSION = '1.71.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in digitalkin/storage/v2/storage_service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class StorageServiceStub(object):
    """StorageService: Service to store data
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.StoreData = channel.unary_unary(
                '/digitalkin.storage.v2.StorageService/StoreData',
                request_serializer=digitalkin_dot_storage_dot_v2_dot_data__pb2.StoreDataRequest.SerializeToString,
                response_deserializer=digitalkin_dot_storage_dot_v2_dot_data__pb2.StoreDataResponse.FromString,
                _registered_method=True)
        self.GetDataByMission = channel.unary_unary(
                '/digitalkin.storage.v2.StorageService/GetDataByMission',
                request_serializer=digitalkin_dot_storage_dot_v2_dot_data__pb2.GetDataByMissionRequest.SerializeToString,
                response_deserializer=digitalkin_dot_storage_dot_v2_dot_data__pb2.GetDataByMissionResponse.FromString,
                _registered_method=True)
        self.GetDataByName = channel.unary_unary(
                '/digitalkin.storage.v2.StorageService/GetDataByName',
                request_serializer=digitalkin_dot_storage_dot_v2_dot_data__pb2.GetDataByNameRequest.SerializeToString,
                response_deserializer=digitalkin_dot_storage_dot_v2_dot_data__pb2.GetDataByNameResponse.FromString,
                _registered_method=True)
        self.GetDataByType = channel.unary_unary(
                '/digitalkin.storage.v2.StorageService/GetDataByType',
                request_serializer=digitalkin_dot_storage_dot_v2_dot_data__pb2.GetDataByTypeRequest.SerializeToString,
                response_deserializer=digitalkin_dot_storage_dot_v2_dot_data__pb2.GetDataByTypeResponse.FromString,
                _registered_method=True)
        self.DeleteData = channel.unary_unary(
                '/digitalkin.storage.v2.StorageService/DeleteData',
                request_serializer=digitalkin_dot_storage_dot_v2_dot_data__pb2.DeleteDataRequest.SerializeToString,
                response_deserializer=digitalkin_dot_storage_dot_v2_dot_data__pb2.DeleteDataResponse.FromString,
                _registered_method=True)


class StorageServiceServicer(object):
    """StorageService: Service to store data
    """

    def StoreData(self, request, context):
        """StoreData: Store data
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDataByMission(self, request, context):
        """GetDataByMission: Get data by mission
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDataByName(self, request, context):
        """GetDataByName: Get data by mission and name
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDataByType(self, request, context):
        """GetDataByType: Get data by mission and type
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteData(self, request, context):
        """DeleteData: Delete data
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_StorageServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'StoreData': grpc.unary_unary_rpc_method_handler(
                    servicer.StoreData,
                    request_deserializer=digitalkin_dot_storage_dot_v2_dot_data__pb2.StoreDataRequest.FromString,
                    response_serializer=digitalkin_dot_storage_dot_v2_dot_data__pb2.StoreDataResponse.SerializeToString,
            ),
            'GetDataByMission': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDataByMission,
                    request_deserializer=digitalkin_dot_storage_dot_v2_dot_data__pb2.GetDataByMissionRequest.FromString,
                    response_serializer=digitalkin_dot_storage_dot_v2_dot_data__pb2.GetDataByMissionResponse.SerializeToString,
            ),
            'GetDataByName': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDataByName,
                    request_deserializer=digitalkin_dot_storage_dot_v2_dot_data__pb2.GetDataByNameRequest.FromString,
                    response_serializer=digitalkin_dot_storage_dot_v2_dot_data__pb2.GetDataByNameResponse.SerializeToString,
            ),
            'GetDataByType': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDataByType,
                    request_deserializer=digitalkin_dot_storage_dot_v2_dot_data__pb2.GetDataByTypeRequest.FromString,
                    response_serializer=digitalkin_dot_storage_dot_v2_dot_data__pb2.GetDataByTypeResponse.SerializeToString,
            ),
            'DeleteData': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteData,
                    request_deserializer=digitalkin_dot_storage_dot_v2_dot_data__pb2.DeleteDataRequest.FromString,
                    response_serializer=digitalkin_dot_storage_dot_v2_dot_data__pb2.DeleteDataResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'digitalkin.storage.v2.StorageService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('digitalkin.storage.v2.StorageService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class StorageService(object):
    """StorageService: Service to store data
    """

    @staticmethod
    def StoreData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/digitalkin.storage.v2.StorageService/StoreData',
            digitalkin_dot_storage_dot_v2_dot_data__pb2.StoreDataRequest.SerializeToString,
            digitalkin_dot_storage_dot_v2_dot_data__pb2.StoreDataResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetDataByMission(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/digitalkin.storage.v2.StorageService/GetDataByMission',
            digitalkin_dot_storage_dot_v2_dot_data__pb2.GetDataByMissionRequest.SerializeToString,
            digitalkin_dot_storage_dot_v2_dot_data__pb2.GetDataByMissionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetDataByName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/digitalkin.storage.v2.StorageService/GetDataByName',
            digitalkin_dot_storage_dot_v2_dot_data__pb2.GetDataByNameRequest.SerializeToString,
            digitalkin_dot_storage_dot_v2_dot_data__pb2.GetDataByNameResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetDataByType(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/digitalkin.storage.v2.StorageService/GetDataByType',
            digitalkin_dot_storage_dot_v2_dot_data__pb2.GetDataByTypeRequest.SerializeToString,
            digitalkin_dot_storage_dot_v2_dot_data__pb2.GetDataByTypeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/digitalkin.storage.v2.StorageService/DeleteData',
            digitalkin_dot_storage_dot_v2_dot_data__pb2.DeleteDataRequest.SerializeToString,
            digitalkin_dot_storage_dot_v2_dot_data__pb2.DeleteDataResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
