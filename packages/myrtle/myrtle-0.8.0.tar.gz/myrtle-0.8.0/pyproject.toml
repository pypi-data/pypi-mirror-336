[project]
name = "myrtle"
version = "0.8.0"
authors = [
  { name="Brandon Rohrer", email="brohrer@gmail.com" },
]
description = '''
A workbench and benchmarking framework
for real-time reinforcement learning
with multiple intermittent rewards'''

readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "dsmq",
    "numpy>=2.1.3",
    "pacemaker-lite>=0.1.3",
    "requests>=2.32.3",
    "sqlite-logging>=0.0.4",
]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: POSIX :: Linux",
]

[project.urls]
Homepage = "https://codeberg.org/brohrer/myrtle"
Documentation = "https://codeberg.org/brohrer/myrtle/src/branch/main/README.md"
Repository = "https://codeberg.org/brohrer/myrtle.git"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
Repository = "https://codeberg.org/brohrer/myrtle.git"

[tool.hatch.build.targets.wheel]
packages = ["src/myrtle"]

[tool.hatch.build.targets.sdist]
sources = ["/", "src/myrtle"]
include = [
  "*.md",
  "config.toml",
  "monitors/*.html",
  "monitors/*.js",
]
exclude = [
  "*.dep",
  "archive"
]

[tool.pytest.ini_options]
filterwarnings = [
    "ignore::pytest.PytestUnhandledThreadExceptionWarning",
]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".venv",
    "__pypackages__",
    "_build",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

line-length = 88
indent-width = 4

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

[tool.uv]
dev-dependencies = [
    "pytest>=8.3.4",
]

[tool.uv.sources]
dsmq = { path = "../dsmq", editable = true }
