{"ast":null,"code":"var _jsxFileName = \"/Users/tomek/workspace/openai-tts-mcp-server/hello-world/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [joke, setJoke] = useState('');\n  const [showPunchline, setShowPunchline] = useState(false);\n  const jokes = [{\n    setup: \"Why don't scientists trust atoms?\",\n    punchline: \"Because they make up everything!\"\n  }, {\n    setup: \"Why did the scarecrow win an award?\",\n    punchline: \"Because he was outstanding in his field!\"\n  }, {\n    setup: \"Why don't eggs tell jokes?\",\n    punchline: \"They'd crack each other up!\"\n  }, {\n    setup: \"What do you call a fake noodle?\",\n    punchline: \"An impasta!\"\n  }, {\n    setup: \"How do you organize a space party?\",\n    punchline: \"You planet!\"\n  }, {\n    setup: \"Why did the bicycle fall over?\",\n    punchline: \"It was two-tired!\"\n  }, {\n    setup: \"What's the best thing about Switzerland?\",\n    punchline: \"I don't know, but the flag is a big plus!\"\n  }];\n  const getRandomJoke = () => {\n    const randomIndex = Math.floor(Math.random() * jokes.length);\n    setJoke(jokes[randomIndex]);\n    setShowPunchline(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hello, World!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Welcome to my first React app\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"joke-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: getRandomJoke,\n          className: \"joke-button\",\n          children: \"Tell me a joke!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), joke && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"joke\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: joke.setup\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), !showPunchline ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowPunchline(true),\n            className: \"punchline-button\",\n            children: \"Reveal punchline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"punchline\",\n            children: joke.punchline\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"aIu4B9pgFnzwtLD3ba9mD1NFuLs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","App","_s","joke","setJoke","showPunchline","setShowPunchline","jokes","setup","punchline","getRandomJoke","randomIndex","Math","floor","random","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/tomek/workspace/openai-tts-mcp-server/hello-world/src/App.js"],"sourcesContent":["import './App.css';\nimport { useState } from 'react';\n\nfunction App() {\n  const [joke, setJoke] = useState('');\n  const [showPunchline, setShowPunchline] = useState(false);\n  \n  const jokes = [\n    { setup: \"Why don't scientists trust atoms?\", punchline: \"Because they make up everything!\" },\n    { setup: \"Why did the scarecrow win an award?\", punchline: \"Because he was outstanding in his field!\" },\n    { setup: \"Why don't eggs tell jokes?\", punchline: \"They'd crack each other up!\" },\n    { setup: \"What do you call a fake noodle?\", punchline: \"An impasta!\" },\n    { setup: \"How do you organize a space party?\", punchline: \"You planet!\" },\n    { setup: \"Why did the bicycle fall over?\", punchline: \"It was two-tired!\" },\n    { setup: \"What's the best thing about Switzerland?\", punchline: \"I don't know, but the flag is a big plus!\" }\n  ];\n  \n  const getRandomJoke = () => {\n    const randomIndex = Math.floor(Math.random() * jokes.length);\n    setJoke(jokes[randomIndex]);\n    setShowPunchline(false);\n  };\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Hello, World!</h1>\n        <p>Welcome to my first React app</p>\n        \n        <div className=\"joke-container\">\n          <button onClick={getRandomJoke} className=\"joke-button\">\n            Tell me a joke!\n          </button>\n          \n          {joke && (\n            <div className=\"joke\">\n              <p>{joke.setup}</p>\n              \n              {!showPunchline ? (\n                <button onClick={() => setShowPunchline(true)} className=\"punchline-button\">\n                  Reveal punchline\n                </button>\n              ) : (\n                <p className=\"punchline\">{joke.punchline}</p>\n              )}\n            </div>\n          )}\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}