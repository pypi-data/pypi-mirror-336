{"ast":null,"code":"var _jsxFileName = \"/Users/tomek/workspace/openai-tts-mcp-server/hello-world/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [joke, setJoke] = useState('');\n  const [showPunchline, setShowPunchline] = useState(false);\n  const [emoji, setEmoji] = useState('🤔');\n  const [dadJokeMode, setDadJokeMode] = useState(false);\n  const regularJokes = [{\n    setup: \"Why don't scientists trust atoms?\",\n    punchline: \"Because they make up everything!\"\n  }, {\n    setup: \"Why did the scarecrow win an award?\",\n    punchline: \"Because he was outstanding in his field!\"\n  }, {\n    setup: \"Why don't eggs tell jokes?\",\n    punchline: \"They'd crack each other up!\"\n  }, {\n    setup: \"What do you call a fake noodle?\",\n    punchline: \"An impasta!\"\n  }, {\n    setup: \"How do you organize a space party?\",\n    punchline: \"You planet!\"\n  }, {\n    setup: \"Why did the bicycle fall over?\",\n    punchline: \"It was two-tired!\"\n  }, {\n    setup: \"What's the best thing about Switzerland?\",\n    punchline: \"I don't know, but the flag is a big plus!\"\n  }];\n  const dadJokes = [{\n    setup: \"I'm reading a book about anti-gravity.\",\n    punchline: \"It's impossible to put down!\"\n  }, {\n    setup: \"Did you hear about the guy who invented the knock-knock joke?\",\n    punchline: \"He won the 'no-bell' prize!\"\n  }, {\n    setup: \"I used to be a baker, but I couldn't make enough dough.\",\n    punchline: \"So I got a job at the local gym. Now I'm making tons of cake!\"\n  }, {\n    setup: \"Why don't skeletons fight each other?\",\n    punchline: \"They don't have the guts!\"\n  }, {\n    setup: \"I was going to tell a time-traveling joke,\",\n    punchline: \"but you didn't like it.\"\n  }, {\n    setup: \"What's Forrest Gump's password?\",\n    punchline: \"1Forrest1\"\n  }, {\n    setup: \"Why did the invisible man turn down a job offer?\",\n    punchline: \"He couldn't see himself doing it.\"\n  }];\n  const getRandomJoke = () => {\n    const jokesList = dadJokeMode ? dadJokes : regularJokes;\n    const randomIndex = Math.floor(Math.random() * jokesList.length);\n    setJoke(jokesList[randomIndex]);\n    setShowPunchline(false);\n    setEmoji('🤔');\n  };\n  useEffect(() => {\n    if (!joke) {\n      setEmoji('🤔');\n    } else if (showPunchline) {\n      const laughEmojis = dadJokeMode ? ['👨', '👴', '😐', '🤦‍♂️', '👍'] : ['😂', '🤣', '😆', '😹', '🥲'];\n      const randomEmoji = laughEmojis[Math.floor(Math.random() * laughEmojis.length)];\n      setEmoji(randomEmoji);\n    } else {\n      setEmoji('🤔');\n    }\n  }, [joke, showPunchline, dadJokeMode]);\n  const toggleDadJokeMode = () => {\n    setDadJokeMode(!dadJokeMode);\n    setJoke(''); // Clear current joke\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hello, World!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Welcome to my first React app\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `emoji-container ${joke ? 'emoji-animated' : ''}`,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"emoji\",\n          children: emoji\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"joke-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mode-toggle\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"switch\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: dadJokeMode,\n              onChange: toggleDadJokeMode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"slider round\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mode-label\",\n            children: dadJokeMode ? \"Dad Joke Mode 👨\" : \"Regular Joke Mode 😆\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: getRandomJoke,\n          className: \"joke-button\",\n          children: \"Tell me a joke!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), joke && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"joke\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: joke.setup\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), !showPunchline ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowPunchline(true),\n            className: \"punchline-button\",\n            children: \"Reveal punchline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"punchline\",\n            children: joke.punchline\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"fyppye58furb4k/07GGjwszVLII=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","App","_s","joke","setJoke","showPunchline","setShowPunchline","emoji","setEmoji","dadJokeMode","setDadJokeMode","regularJokes","setup","punchline","dadJokes","getRandomJoke","jokesList","randomIndex","Math","floor","random","length","laughEmojis","randomEmoji","toggleDadJokeMode","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/tomek/workspace/openai-tts-mcp-server/hello-world/src/App.js"],"sourcesContent":["import './App.css';\nimport { useState, useEffect } from 'react';\n\nfunction App() {\n  const [joke, setJoke] = useState('');\n  const [showPunchline, setShowPunchline] = useState(false);\n  const [emoji, setEmoji] = useState('🤔');\n  const [dadJokeMode, setDadJokeMode] = useState(false);\n  \n  const regularJokes = [\n    { setup: \"Why don't scientists trust atoms?\", punchline: \"Because they make up everything!\" },\n    { setup: \"Why did the scarecrow win an award?\", punchline: \"Because he was outstanding in his field!\" },\n    { setup: \"Why don't eggs tell jokes?\", punchline: \"They'd crack each other up!\" },\n    { setup: \"What do you call a fake noodle?\", punchline: \"An impasta!\" },\n    { setup: \"How do you organize a space party?\", punchline: \"You planet!\" },\n    { setup: \"Why did the bicycle fall over?\", punchline: \"It was two-tired!\" },\n    { setup: \"What's the best thing about Switzerland?\", punchline: \"I don't know, but the flag is a big plus!\" }\n  ];\n  \n  const dadJokes = [\n    { setup: \"I'm reading a book about anti-gravity.\", punchline: \"It's impossible to put down!\" },\n    { setup: \"Did you hear about the guy who invented the knock-knock joke?\", punchline: \"He won the 'no-bell' prize!\" },\n    { setup: \"I used to be a baker, but I couldn't make enough dough.\", punchline: \"So I got a job at the local gym. Now I'm making tons of cake!\" },\n    { setup: \"Why don't skeletons fight each other?\", punchline: \"They don't have the guts!\" },\n    { setup: \"I was going to tell a time-traveling joke,\", punchline: \"but you didn't like it.\" },\n    { setup: \"What's Forrest Gump's password?\", punchline: \"1Forrest1\" },\n    { setup: \"Why did the invisible man turn down a job offer?\", punchline: \"He couldn't see himself doing it.\" },\n  ];\n  \n  const getRandomJoke = () => {\n    const jokesList = dadJokeMode ? dadJokes : regularJokes;\n    const randomIndex = Math.floor(Math.random() * jokesList.length);\n    setJoke(jokesList[randomIndex]);\n    setShowPunchline(false);\n    setEmoji('🤔');\n  };\n  \n  useEffect(() => {\n    if (!joke) {\n      setEmoji('🤔');\n    } else if (showPunchline) {\n      const laughEmojis = dadJokeMode ? ['👨', '👴', '😐', '🤦‍♂️', '👍'] : ['😂', '🤣', '😆', '😹', '🥲'];\n      const randomEmoji = laughEmojis[Math.floor(Math.random() * laughEmojis.length)];\n      setEmoji(randomEmoji);\n    } else {\n      setEmoji('🤔');\n    }\n  }, [joke, showPunchline, dadJokeMode]);\n  \n  const toggleDadJokeMode = () => {\n    setDadJokeMode(!dadJokeMode);\n    setJoke('');  // Clear current joke\n  };\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Hello, World!</h1>\n        <p>Welcome to my first React app</p>\n        \n        <div className={`emoji-container ${joke ? 'emoji-animated' : ''}`}>\n          <span className=\"emoji\">{emoji}</span>\n        </div>\n        \n        <div className=\"joke-container\">\n          <div className=\"mode-toggle\">\n            <label className=\"switch\">\n              <input type=\"checkbox\" checked={dadJokeMode} onChange={toggleDadJokeMode} />\n              <span className=\"slider round\"></span>\n            </label>\n            <span className=\"mode-label\">{dadJokeMode ? \"Dad Joke Mode 👨\" : \"Regular Joke Mode 😆\"}</span>\n          </div>\n          \n          <button onClick={getRandomJoke} className=\"joke-button\">\n            Tell me a joke!\n          </button>\n          \n          {joke && (\n            <div className=\"joke\">\n              <p>{joke.setup}</p>\n              \n              {!showPunchline ? (\n                <button onClick={() => setShowPunchline(true)} className=\"punchline-button\">\n                  Reveal punchline\n                </button>\n              ) : (\n                <p className=\"punchline\">{joke.punchline}</p>\n              )}\n            </div>\n          )}\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}