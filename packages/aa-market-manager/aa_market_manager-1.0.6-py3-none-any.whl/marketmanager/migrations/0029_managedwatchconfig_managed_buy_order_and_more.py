# Generated by Django 4.0.6 on 2022-08-01 11:49

from decimal import Decimal

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('eveuniverse', '0007_evetype_description'),
        ('marketmanager', '0028_rename_manged_app_reason_managedwatchconfig_managed_app_reason'),
    ]

    operations = [
        migrations.AddField(
            model_name='managedwatchconfig',
            name='managed_buy_order',
            field=models.BooleanField(default=False, verbose_name='Buy Order'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='managedwatchconfig',
            name='managed_debug_webhooks',
            field=models.ManyToManyField(blank=True, help_text='Primarily for Testing/Debugging Purposes. This webhook will receive updates on WatchConfigs that _dont_ notify. Because their Configs didnt Meet/Breach.', related_name='managed_debug_webhooks', to='marketmanager.webhook', verbose_name='Debug Webhook'),
        ),
        migrations.AddField(
            model_name='managedwatchconfig',
            name='managed_jita_compare_percent',
            field=models.DecimalField(decimal_places=0, default=Decimal('0'), help_text='If set ignores Flat price value', max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Jita Comparison %'),
        ),
        migrations.AddField(
            model_name='managedwatchconfig',
            name='managed_quantity',
            field=models.IntegerField(default=1, help_text='Apply a multiplier to the volumes that will be generated', verbose_name='quantity'),
        ),
        migrations.AddField(
            model_name='managedwatchconfig',
            name='managed_region',
            field=models.ManyToManyField(blank=True, to='eveuniverse.everegion', verbose_name='Region'),
        ),
        migrations.AddField(
            model_name='managedwatchconfig',
            name='managed_solar_system',
            field=models.ManyToManyField(blank=True, to='eveuniverse.evesolarsystem', verbose_name='Solar System'),
        ),
        migrations.AddField(
            model_name='managedwatchconfig',
            name='managed_structure',
            field=models.ManyToManyField(blank=True, to='marketmanager.structure', verbose_name='Structure'),
        ),
        migrations.AddField(
            model_name='managedwatchconfig',
            name='managed_structure_type',
            field=models.ManyToManyField(blank=True, help_text='Filter by structure Type/Size/Docking (ie, forts/keeps for cap fuel)', related_name='managed_structure_type', to='eveuniverse.evetype', verbose_name='Structure Type Filter'),
        ),
        migrations.AddField(
            model_name='managedwatchconfig',
            name='managed_webhooks',
            field=models.ManyToManyField(blank=True, to='marketmanager.webhook', verbose_name='Webhooks'),
        ),
    ]
