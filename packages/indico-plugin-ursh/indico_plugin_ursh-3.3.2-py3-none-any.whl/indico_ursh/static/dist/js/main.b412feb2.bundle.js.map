{"version":3,"file":"js/main.b412feb2.bundle.js","mappings":"mBAAA,MAAM,EAA+BA,kBCW/BC,EAAKC,GAAGC,OAAO,QAErB,SAASC,EAASC,EAASC,EAAKC,EAAY,WAC1CF,EAAQG,KAAK,CACXC,QAAS,CACPC,KAAMJ,GAERK,KAAM,CACJC,MAAOL,EACPM,OAAO,EACPC,MAAO,KAETC,KAAM,CACJH,OAAO,EACPI,OAAO,IAGb,CAEAC,eAAeC,EAAiBC,GAG9B,IAAIC,EACJ,IACEA,QAAiBC,EAAAA,YAAYC,KAJV,QAI6B,CAC9CC,aAAcJ,GAElB,CAAE,MAAOK,GAEP,YADAC,EAAAA,EAAAA,kBAAiBD,EAEnB,CAEA,OAAOJ,EAASM,KAAKC,GACvB,CAgCA,SAASC,EAAcC,GACrB,MAAMC,EAAWD,EAAME,MAAMC,OAC7BH,EAAME,IAAID,GAEV,IACE,MAAMG,EAnCV,SAA+BN,GAC7B,IAAKA,EACH,MAAMO,MAAMjC,EAAGkC,QAAQ,oCAIrBR,EAAIS,WAAWC,SAASC,YAC1BX,EAAM,GAAGU,SAASE,aAAaZ,KAKjC,MAAMa,EAAKC,OAAO,kDACZC,EAAYf,EAAIgB,MAAMH,GAC5B,IAAKE,EACH,MAAMR,MAAMjC,EAAGkC,QAAQ,wCAIzB,MAAMG,EAAWI,EAAU,GACrBE,EAAOF,EAAU,GAAKA,EAAU,GAAK,IAErCH,EAAWF,SAASE,SAC1B,GAAID,IAAaD,SAASC,SACxB,MAAMJ,MAAMjC,EAAGkC,QAAQ,+CAGzB,MAAO,GAAGI,MAAaD,IAAWM,GACpC,CAOyBC,CAAsBf,GAE3C,OADAD,EAAME,IAAIE,GACHA,CACT,CAAE,MAAOa,GAGP,OAFA1C,EAASyB,EAAOiB,EAAIC,SACpBlB,EAAMmB,QAAQC,SACP,IACT,CACF,CAEAhC,eAAeiC,EAAqBC,GAClCA,EAAIC,iBAEJ,MAAMvB,EAAQwB,EAAE,uBACVlC,EAAcS,EAAcC,GAClC,GAAIV,EAAa,CACf,MAAMmC,QAAepC,EAAiBC,GACtC,GAAImC,EAAQ,CACV,MAAMC,EAAgBF,EAAE,wBACxBA,EAAE,+BAA+BG,YACjCD,EAAcxB,IAAIuB,GAClBC,EAAcN,QAChB,MACE7C,EAASyB,EAAO5B,EAAGkC,QAAQ,wCAC3BN,EAAMmB,QAAQC,QAElB,CACF,CAaAI,EAAEI,UACCC,GAAG,QAAS,uBAAwBR,GACpCQ,GAAG,UAAW,uBAAuBP,IACpB,UAAZA,EAAIQ,KACNT,EAAqBC,EACvB,IAEDO,GAAG,QAAS,aAlBfzC,eAAgCkC,GAC9BA,EAAIC,iBACJ,MAAMjC,EAAcgC,EAAIS,OAAOC,QAAQC,YACjCR,QAAepC,EAAiBC,GACtCkC,EAAEF,EAAIS,QAAQG,eAAeT,EAAQ,UACvC,IAcGI,GAAG,QAAS,+BAA+BP,IAC1C,MAAMa,EAAQX,EAAEF,EAAIS,QAAQ7B,MAC5BsB,EAAE,uCAAuCY,KAAK,aAAyCD,EAbzEE,QAAU,GAasE,IAE/FR,GAAG,aAAc,uCAAuCP,IACnDA,EAAIS,OAAOO,UACb/D,EACEiD,EAAEF,EAAIS,QACN3D,EAAGkC,QAAQ,6CACX,aAEJ,IAGJkB,EAAEI,UAAUzC,OAAM,KAEhBqC,EAAE,kBACCe,KAAK,MACLC,KAAK,QACLX,GAAG,eAAe,KAAM,GAAK,G","sources":["webpack:///external var \"_IndicoUtilsAxios\"","webpack:///../plugins/public/ursh/indico_ursh/client/index.js"],"sourcesContent":["const __WEBPACK_NAMESPACE_OBJECT__ = _IndicoUtilsAxios;","// This file is part of the Indico plugins.\n// Copyright (C) 2002 - 2025 CERN\n//\n// The Indico plugins are free software; you can redistribute\n// them and/or modify them under the terms of the MIT License;\n// see the LICENSE file for more details.\n\n/* global $T:false */\n\nimport {handleAxiosError, indicoAxios} from 'indico/utils/axios';\n\nconst $t = $T.domain('ursh');\n\nfunction _showTip(element, msg, hideEvent = 'unfocus') {\n  element.qtip({\n    content: {\n      text: msg,\n    },\n    hide: {\n      event: hideEvent,\n      fixed: true,\n      delay: 700,\n    },\n    show: {\n      event: false,\n      ready: true,\n    },\n  });\n}\n\nasync function _makeUrshRequest(originalURL) {\n  const urshEndpoint = '/ursh';\n\n  let response;\n  try {\n    response = await indicoAxios.post(urshEndpoint, {\n      original_url: originalURL,\n    });\n  } catch (error) {\n    handleAxiosError(error);\n    return;\n  }\n\n  return response.data.url;\n}\n\nfunction _validateAndFormatURL(url) {\n  if (!url) {\n    throw Error($t.gettext('Please fill in a URL to shorten'));\n  }\n\n  // if protocol is missing, prepend it\n  if (url.startsWith(location.hostname)) {\n    url = `${location.protocol}//${url}`;\n  }\n\n  // regular expression, because I.E. does not like the URL class\n  // provides minimal validation, leaving the serious job to the server\n  const re = RegExp(`^([\\\\d\\\\w]+:)//([^/ .]+(?:\\\\.[^/ .]+)*)(/.*)?$`);\n  const urlTokens = url.match(re);\n  if (!urlTokens) {\n    throw Error($t.gettext('This does not look like a valid URL'));\n  }\n\n  // extract tokens\n  const hostname = urlTokens[2];\n  const path = urlTokens[3] ? urlTokens[3] : '/';\n\n  const protocol = location.protocol; // patch protocol to match server\n  if (hostname !== location.hostname) {\n    throw Error($t.gettext('Invalid host: only Indico URLs are allowed'));\n  }\n\n  return `${protocol}//${hostname}${path}`;\n}\n\nfunction _getUrshInput(input) {\n  const inputURL = input.val().trim();\n  input.val(inputURL);\n\n  try {\n    const formattedURL = _validateAndFormatURL(inputURL);\n    input.val(formattedURL);\n    return formattedURL;\n  } catch (err) {\n    _showTip(input, err.message);\n    input.focus().select();\n    return null;\n  }\n}\n\nasync function _handleUrshPageInput(evt) {\n  evt.preventDefault();\n\n  const input = $('#ursh-shorten-input');\n  const originalURL = _getUrshInput(input);\n  if (originalURL) {\n    const result = await _makeUrshRequest(originalURL);\n    if (result) {\n      const outputElement = $('#ursh-shorten-output');\n      $('#ursh-shorten-response-form').slideDown();\n      outputElement.val(result);\n      outputElement.select();\n    } else {\n      _showTip(input, $t.gettext('This does not look like a valid URL'));\n      input.focus().select();\n    }\n  }\n}\n\nasync function _handleUrshClick(evt) {\n  evt.preventDefault();\n  const originalURL = evt.target.dataset.originalUrl;\n  const result = await _makeUrshRequest(originalURL);\n  $(evt.target).copyURLTooltip(result, 'unfocus');\n}\n\nfunction _validateUrshCustomShortcut(shortcut) {\n  return shortcut.length >= 5;\n}\n\n$(document)\n  .on('click', '#ursh-shorten-button', _handleUrshPageInput)\n  .on('keydown', '#ursh-shorten-input', evt => {\n    if (evt.key === 'Enter') {\n      _handleUrshPageInput(evt);\n    }\n  })\n  .on('click', '.ursh-get', _handleUrshClick)\n  .on('input', '#ursh-custom-shortcut-input', evt => {\n    const value = $(evt.target).val();\n    $('#ursh-custom-shortcut-submit-button').prop('disabled', !_validateUrshCustomShortcut(value));\n  })\n  .on('mouseenter', '#ursh-custom-shortcut-submit-button', evt => {\n    if (evt.target.disabled) {\n      _showTip(\n        $(evt.target),\n        $t.gettext('Please check that the shortcut is correct'),\n        'mouseleave'\n      );\n    }\n  });\n\n$(document).ready(() => {\n  // keep dropdown menu open when clicking on an entry\n  $('.ursh-dropdown')\n    .next('ul')\n    .find('li a')\n    .on('menu_select', () => true);\n});\n"],"names":["_IndicoUtilsAxios","$t","$T","domain","_showTip","element","msg","hideEvent","qtip","content","text","hide","event","fixed","delay","show","ready","async","_makeUrshRequest","originalURL","response","indicoAxios","post","original_url","error","handleAxiosError","data","url","_getUrshInput","input","inputURL","val","trim","formattedURL","Error","gettext","startsWith","location","hostname","protocol","re","RegExp","urlTokens","match","path","_validateAndFormatURL","err","message","focus","select","_handleUrshPageInput","evt","preventDefault","$","result","outputElement","slideDown","document","on","key","target","dataset","originalUrl","copyURLTooltip","value","prop","length","disabled","next","find"],"sourceRoot":""}