[build-system]
requires = [
    'packaging>=24,<25',
    'setuptools>=77,<78',
    'wheel>=0.45,<0.46',
    'setuptools-git-versioning>=2,<3',
]

build-backend = 'setuptools.build_meta'

[project]
name = 'nightly-scripts'
description = 'Ночные скрипты'
license-files = ['LICENSE']
authors = [
  {name = 'BARS Group', email = 'bars@bars.group'},
]
readme = 'README.md'
requires-python = '>=3.9'
dependencies = [
    'Django>=2.2,<5.2',
]
classifiers=[
    'Development Status :: 3 - Alpha',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
    'Intended Audience :: Developers',
    'Environment :: Console',
    'Framework :: Django :: 2.2',
    'Framework :: Django :: 3.0',
    'Framework :: Django :: 3.1',
    'Framework :: Django :: 3.2',
    'Framework :: Django :: 4.0',
    'Framework :: Django :: 4.1',
    'Framework :: Django :: 4.2',
    'Framework :: Django :: 5.0',
    'Framework :: Django :: 5.1',
]
dynamic = ['version']

[project.urls]
Homepage = 'https://stash.bars-open.ru/projects/M3/repos/nightly-scripts/browse'
Repository = 'https://stash.bars-open.ru/scm/m3/nightly-scripts.git'

[project.optional-dependencies]
dev = [
    'isort>=5.10.1,<6',
    'flake8>=4.0.1,<7',
    'pytest>=3.2.5,<8',
    'pytest-cov<5',
    'python-semantic-release<9',
]

[tool.setuptools.packages.find]
where = ['src']

[tool.setuptools.exclude-package-data]
function_tools = ['tests', 'tests.*']

[tool.setuptools-git-versioning]
enabled = true

[tool.ruff]
line-length = 120
indent-width = 4

target-version = 'py312'

[tool.ruff.format]
quote-style = 'single'
indent-style = 'space'
docstring-code-format = true

[tool.flake8]
max-line-length = 120
ignore = [
    # Missing docstring in public module
    'D100',
    # Missing docstring in public package
    'D104',
    # Missing docstring in public nested class
    'D106',
    # Missing docstring in __init__
    'D107',
    # One-line docstring should fit on one line with quotes
    'D200',
    # Line break before binary operator
    'W503',
    # use of assert detected (useless with pytest)
    'S101',
]
per-file-ignores = [
  # variable '...' in class scope should not be mixedCase
  # В SOAP моделях могут использоваться имена с различным написанием
  'wsmodel.py:N815',
  # function name '...' should be lowercase
  # SOAP методы могут именоваться разными способами
  'wsapi.py:N802,N815',
]
exclude = [
  'venv',
]
max-complexity = 10

[tool.pylint]
score = 'no'
msg-template = '{path}:{line} {msg} ({symbol})'
disable = 'all'
enable = [
    'import-error',
    'no-name-in-module',
    'undefined-variable',
    'undefined-all-variable',
]

extension-pkg-whitelist = [
    'lxml',
]