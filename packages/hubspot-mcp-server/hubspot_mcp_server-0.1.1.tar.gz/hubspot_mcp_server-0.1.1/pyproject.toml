[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "hubspot-mcp-server"
version = "0.1.1"
authors = [
    {name = "Isaac Raja", email = "isaacraja@gmail.com"},
]
description = "A simple MCP server for interacting with the HubSpot API"
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
classifiers = [
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
]
dependencies = [
    "mcp[cli]>=1.5.0",
    "httpx>=0.25.0",
]

[project.optional-dependencies]
test = [
    "pytest>=7.3.1",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.10.0",
    "requests-mock>=1.10.0",
    "pytest-asyncio>=0.23.0",
]
dev = [
    "ruff>=0.11.0",
]

[project.scripts]
hubspot-mcp-server = "hubspot_mcp_server.server:mcp.run"

[tool.setuptools.packages.find]
where = ["src"]
include = ["hubspot_mcp_server*"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_functions = ["test_*"]
markers = [
    "asyncio: mark a test as an asyncio test",
    "unit: mark a test as a unit test",
    "integration: mark a test as an integration test",
]
addopts = "-v --strict-markers"

[tool.pytest-asyncio]
mode = "auto"

[tool.ruff]
# E and F are enabled by default
target-version = "py39"
line-length = 100
output-format = "grouped"
src = ["src"]

[tool.ruff.lint]
select = ["E", "F", "I", "W", "ANN"]
ignore = ["ANN401"]
# Allow unused variables when underscore-prefixed
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# These checks are treated as warnings rather than errors
[tool.ruff.lint.per-file-ignores]
# Ignore missing return type annotations in tests
"tests/*" = ["ANN001", "ANN201", "ANN204"]
# Ignore missing parameter type annotations in server.py
"src/hubspot_mcp_server/server.py" = ["ANN001", "W293", "E501"]
# Ignore whitespace in blank lines
"src/hubspot_mcp_server/main.py" = ["W293"]

[tool.ruff.lint.isort]
combine-as-imports = true
