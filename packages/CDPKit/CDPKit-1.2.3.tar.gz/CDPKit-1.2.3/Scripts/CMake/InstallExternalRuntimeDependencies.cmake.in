##
# InstallExternalRuntimeDependencies.cmake.in
#
# This file is part of the Chemical Data Processing Toolkit
#
# Copyright (C) 2003 Thomas Seidel <thomas.seidel@univie.ac.at>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2 of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with this program; see the file COPYING. If not, write to
# the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
# Boston, MA 02111-1307, USA.
##


if(COMMAND CMAKE_POLICY)
  cmake_policy(SET CMP0011 NEW)
  cmake_policy(SET CMP0007 NEW)
endif()

set(PYPI_PACKAGE_BUILD "@PYPI_PACKAGE_BUILD@")
set(PYPI_MANYLINUX_PACKAGE_BUILD "@PYPI_MANYLINUX_PACKAGE_BUILD@")
set(PATCHELF_EXECUTABLE "@PATCHELF_EXECUTABLE@")

function(INSTALL_DEPENDENCIES BINARY_INPUT_FILE LEVEL)
  message(" -- Installing external runtime dependencies of ${BINARY_INPUT_FILE}...")
 
  if(WIN32)
    set(DEPENDENCY_INSTALL_DIR "@CDPKIT_EXECUTABLE_INSTALL_DIR@")
    list(APPEND SEARCH_DIRS "@Boost_LIBRARY_DIR_RELEASE@")

    get_filename_component(CAIRO_DLL_DIR "@CAIRO_LIBRARIES@" DIRECTORY)
    list(APPEND SEARCH_DIRS "${CAIRO_DLL_DIR}")

    list(APPEND SEARCH_DIRS "@QT_BIN_DIR@")
  else()
    set(SEARCH_DIRS "")
    set(DEPENDENCY_INSTALL_DIR "@CDPKIT_LIBRARY_INSTALL_DIR@")
  endif()

  string(REPLACE "." "\\." CMAKE_INSTALL_PREFIX_X_PTN "^${CMAKE_INSTALL_PREFIX}")
  string(REPLACE "+" "\\+" CMAKE_INSTALL_PREFIX_X_PTN "${CMAKE_INSTALL_PREFIX_X_PTN}")

  set(EXCLUDE_PATTERNS
    "libcdpl"
    "${CMAKE_INSTALL_PREFIX_X_PTN}"
    )
  
  if(APPLE)
    list(APPEND EXCLUDE_PATTERNS
      "libstdc\\+\\+"
      "Python"
      "libpython"
      )
  elseif(WIN32)
    list(APPEND EXCLUDE_PATTERNS
      "system32"
      "ms-win-"
      "^python"
      "libpython"
      )
  else()
    list(APPEND EXCLUDE_PATTERNS
      "libpython"
      "linux"
      "libgcc_s\\.so"
      "libstdc\\+\\+\\.so"
      "libm\\.so"
      "libdl\\.so"
      "librt\\.so"
      "libc\\.so"
      "libnsl\\.so"
      "libutil\\.so"
      "libpthread\\.so"
      "libX11\\.so"
      "libXext\\.so"
      "libXrender\\.so"
      "libICE\\.so"
      "libSM\\.so"
      "libGL\\.so"
      "libgobject-"
      "libgthread-"
      "libglib-"
      "libresolv\\.so"
      )
  endif()
    
  get_filename_component(FILE_SUFFIX "${BINARY_INPUT_FILE}" LAST_EXT)

  if("${FILE_SUFFIX}" STREQUAL "" OR "${FILE_SUFFIX}" STREQUAL ".exe")
    file(GET_RUNTIME_DEPENDENCIES RESOLVED_DEPENDENCIES_VAR DEPENDENCIES UNRESOLVED_DEPENDENCIES_VAR UNRESOLVED_DEPS
         EXECUTABLES "${BINARY_INPUT_FILE}" PRE_EXCLUDE_REGEXES ${EXCLUDE_PATTERNS} POST_EXCLUDE_REGEXES ${EXCLUDE_PATTERNS}
         DIRECTORIES ${SEARCH_DIRS})  
  elseif("${FILE_SUFFIX}" STREQUAL ".dll" OR "${FILE_SUFFIX}" STREQUAL ".so" OR "${FILE_SUFFIX}" STREQUAL ".dylib")
    file(GET_RUNTIME_DEPENDENCIES RESOLVED_DEPENDENCIES_VAR DEPENDENCIES UNRESOLVED_DEPENDENCIES_VAR UNRESOLVED_DEPS
         LIBRARIES "${BINARY_INPUT_FILE}" PRE_EXCLUDE_REGEXES ${EXCLUDE_PATTERNS} POST_EXCLUDE_REGEXES ${EXCLUDE_PATTERNS}
         DIRECTORIES ${SEARCH_DIRS})  
  elseif("${FILE_SUFFIX}" STREQUAL ".pyd")
    file(GET_RUNTIME_DEPENDENCIES RESOLVED_DEPENDENCIES_VAR DEPENDENCIES UNRESOLVED_DEPENDENCIES_VAR UNRESOLVED_DEPS
         MODULES "${BINARY_INPUT_FILE}" PRE_EXCLUDE_REGEXES ${EXCLUDE_PATTERNS} POST_EXCLUDE_REGEXES ${EXCLUDE_PATTERNS}
         DIRECTORIES ${SEARCH_DIRS})
  endif()

  foreach(DEPENDENCY ${DEPENDENCIES})
    get_filename_component(FILE_NAME "${DEPENDENCY}" NAME)

    if(APPLE)
      if(LEVEL GREATER 0)
        execute_process(COMMAND "@CMAKE_INSTALL_NAME_TOOL@" "-change" "${DEPENDENCY}" "@loader_path/${FILE_NAME}" "${BINARY_INPUT_FILE}"
                    OUTPUT_VARIABLE STDOUT ERROR_VARIABLE STDERR)
      else(LEVEL GREATER 0)
        execute_process(COMMAND "@CMAKE_INSTALL_NAME_TOOL@" "-change" "${DEPENDENCY}" "@rpath/${FILE_NAME}" "${BINARY_INPUT_FILE}"
                        OUTPUT_VARIABLE STDOUT ERROR_VARIABLE STDERR)
      endif()   
    endif()
    
    if(NOT EXISTS "${CMAKE_INSTALL_PREFIX}/${DEPENDENCY_INSTALL_DIR}/${FILE_NAME}")
      message("  -- Installing external dependency ${DEPENDENCY}")
      file(INSTALL "${DEPENDENCY}" DESTINATION "${CMAKE_INSTALL_PREFIX}/${DEPENDENCY_INSTALL_DIR}" FOLLOW_SYMLINK_CHAIN)
      
      if(APPLE)
        install_dependencies("${CMAKE_INSTALL_PREFIX}/${DEPENDENCY_INSTALL_DIR}/${FILE_NAME}" 1)
      elseif(UNIX AND PYPI_MANYLINUX_PACKAGE_BUILD AND PATCHELF_EXECUTABLE)
        execute_process(COMMAND "${PATCHELF_EXECUTABLE}" "--set-rpath" "$ORIGIN" "${CMAKE_INSTALL_PREFIX}/${DEPENDENCY_INSTALL_DIR}/${FILE_NAME}"
          OUTPUT_VARIABLE STDOUT ERROR_VARIABLE STDERR)
      endif()
    endif()
  endforeach(DEPENDENCY)
  
  if(APPLE)
    if("@CDPKIT_CODE_SIGNING_IDENTITY@" STREQUAL "-")
      execute_process(COMMAND "@CODESIGN_EXECUTABLE@" "--force" "--timestamp" "--preserve-metadata=entitlements,requirements,flags" "--sign" "-" "${BINARY_INPUT_FILE}"
                      OUTPUT_VARIABLE STDOUT ERROR_VARIABLE STDERR)
    else()
      execute_process(COMMAND "@CODESIGN_EXECUTABLE@" "--force" "--timestamp" "--preserve-metadata=entitlements,requirements,flags" "--options" "runtime" "--sign" "@CDPKIT_CODE_SIGNING_IDENTITY@" "${BINARY_INPUT_FILE}"
                      OUTPUT_VARIABLE STDOUT ERROR_VARIABLE STDERR)
    endif()
  endif()

  foreach(DEPENDENCY ${UNRESOLVED_DEPS})
    get_filename_component(FILE_NAME "${DEPENDENCY}" NAME)

    if(NOT EXISTS "${CMAKE_INSTALL_PREFIX}/${DEPENDENCY_INSTALL_DIR}/${FILE_NAME}")
      message("  !! Warning: Unresolved dependency ${DEPENDENCY}.")
    endif()
  endforeach(DEPENDENCY)
endfunction(INSTALL_DEPENDENCIES)

install_dependencies("${CMAKE_INSTALL_PREFIX}/@BINARY_INPUT_FILE@" 0)
