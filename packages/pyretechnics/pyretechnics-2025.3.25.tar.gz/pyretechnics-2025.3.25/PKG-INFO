Metadata-Version: 2.1
Name: pyretechnics
Version: 2025.3.25
Summary: A Python library for simulating fire behavior in a variety of ways.
Author-email: "Gary W. Johnson, PhD" <gjohnson@sig-gis.com>, Valentin Waeselynck <vwaeselynck@sig-gis.com>, "Chris Lautenberger, PhD, PE" <chris@cloudfire.ai>, "David Saah, PhD" <dsaah@sig-gis.com>
License: Eclipse Public License - v 2.0
        
            THE ACCOMPANYING PROGRAM IS PROVIDED UNDER THE TERMS OF THIS ECLIPSE
            PUBLIC LICENSE ("AGREEMENT"). ANY USE, REPRODUCTION OR DISTRIBUTION
            OF THE PROGRAM CONSTITUTES RECIPIENT'S ACCEPTANCE OF THIS AGREEMENT.
        
        1. DEFINITIONS
        
        "Contribution" means:
        
          a) in the case of the initial Contributor, the initial content
             Distributed under this Agreement, and
        
          b) in the case of each subsequent Contributor:
             i) changes to the Program, and
             ii) additions to the Program;
          where such changes and/or additions to the Program originate from
          and are Distributed by that particular Contributor. A Contribution
          "originates" from a Contributor if it was added to the Program by
          such Contributor itself or anyone acting on such Contributor's behalf.
          Contributions do not include changes or additions to the Program that
          are not Modified Works.
        
        "Contributor" means any person or entity that Distributes the Program.
        
        "Licensed Patents" mean patent claims licensable by a Contributor which
        are necessarily infringed by the use or sale of its Contribution alone
        or when combined with the Program.
        
        "Program" means the Contributions Distributed in accordance with this
        Agreement.
        
        "Recipient" means anyone who receives the Program under this Agreement
        or any Secondary License (as applicable), including Contributors.
        
        "Derivative Works" shall mean any work, whether in Source Code or other
        form, that is based on (or derived from) the Program and for which the
        editorial revisions, annotations, elaborations, or other modifications
        represent, as a whole, an original work of authorship.
        
        "Modified Works" shall mean any work in Source Code or other form that
        results from an addition to, deletion from, or modification of the
        contents of the Program, including, for purposes of clarity any new file
        in Source Code form that contains any contents of the Program. Modified
        Works shall not include works that contain only declarations,
        interfaces, types, classes, structures, or files of the Program solely
        in each case in order to link to, bind by name, or subclass the Program
        or Modified Works thereof.
        
        "Distribute" means the acts of a) distributing or b) making available
        in any manner that enables the transfer of a copy.
        
        "Source Code" means the form of a Program preferred for making
        modifications, including but not limited to software source code,
        documentation source, and configuration files.
        
        "Secondary License" means either the GNU General Public License,
        Version 2.0, or any later versions of that license, including any
        exceptions or additional permissions as identified by the initial
        Contributor.
        
        2. GRANT OF RIGHTS
        
          a) Subject to the terms of this Agreement, each Contributor hereby
          grants Recipient a non-exclusive, worldwide, royalty-free copyright
          license to reproduce, prepare Derivative Works of, publicly display,
          publicly perform, Distribute and sublicense the Contribution of such
          Contributor, if any, and such Derivative Works.
        
          b) Subject to the terms of this Agreement, each Contributor hereby
          grants Recipient a non-exclusive, worldwide, royalty-free patent
          license under Licensed Patents to make, use, sell, offer to sell,
          import and otherwise transfer the Contribution of such Contributor,
          if any, in Source Code or other form. This patent license shall
          apply to the combination of the Contribution and the Program if, at
          the time the Contribution is added by the Contributor, such addition
          of the Contribution causes such combination to be covered by the
          Licensed Patents. The patent license shall not apply to any other
          combinations which include the Contribution. No hardware per se is
          licensed hereunder.
        
          c) Recipient understands that although each Contributor grants the
          licenses to its Contributions set forth herein, no assurances are
          provided by any Contributor that the Program does not infringe the
          patent or other intellectual property rights of any other entity.
          Each Contributor disclaims any liability to Recipient for claims
          brought by any other entity based on infringement of intellectual
          property rights or otherwise. As a condition to exercising the
          rights and licenses granted hereunder, each Recipient hereby
          assumes sole responsibility to secure any other intellectual
          property rights needed, if any. For example, if a third party
          patent license is required to allow Recipient to Distribute the
          Program, it is Recipient's responsibility to acquire that license
          before distributing the Program.
        
          d) Each Contributor represents that to its knowledge it has
          sufficient copyright rights in its Contribution, if any, to grant
          the copyright license set forth in this Agreement.
        
          e) Notwithstanding the terms of any Secondary License, no
          Contributor makes additional grants to any Recipient (other than
          those set forth in this Agreement) as a result of such Recipient's
          receipt of the Program under the terms of a Secondary License
          (if permitted under the terms of Section 3).
        
        3. REQUIREMENTS
        
        3.1 If a Contributor Distributes the Program in any form, then:
        
          a) the Program must also be made available as Source Code, in
          accordance with section 3.2, and the Contributor must accompany
          the Program with a statement that the Source Code for the Program
          is available under this Agreement, and informs Recipients how to
          obtain it in a reasonable manner on or through a medium customarily
          used for software exchange; and
        
          b) the Contributor may Distribute the Program under a license
          different than this Agreement, provided that such license:
             i) effectively disclaims on behalf of all other Contributors all
             warranties and conditions, express and implied, including
             warranties or conditions of title and non-infringement, and
             implied warranties or conditions of merchantability and fitness
             for a particular purpose;
        
             ii) effectively excludes on behalf of all other Contributors all
             liability for damages, including direct, indirect, special,
             incidental and consequential damages, such as lost profits;
        
             iii) does not attempt to limit or alter the recipients' rights
             in the Source Code under section 3.2; and
        
             iv) requires any subsequent distribution of the Program by any
             party to be under a license that satisfies the requirements
             of this section 3.
        
        3.2 When the Program is Distributed as Source Code:
        
          a) it must be made available under this Agreement, or if the
          Program (i) is combined with other material in a separate file or
          files made available under a Secondary License, and (ii) the initial
          Contributor attached to the Source Code the notice described in
          Exhibit A of this Agreement, then the Program may be made available
          under the terms of such Secondary Licenses, and
        
          b) a copy of this Agreement must be included with each copy of
          the Program.
        
        3.3 Contributors may not remove or alter any copyright, patent,
        trademark, attribution notices, disclaimers of warranty, or limitations
        of liability ("notices") contained within the Program from any copy of
        the Program which they Distribute, provided that Contributors may add
        their own appropriate notices.
        
        4. COMMERCIAL DISTRIBUTION
        
        Commercial distributors of software may accept certain responsibilities
        with respect to end users, business partners and the like. While this
        license is intended to facilitate the commercial use of the Program,
        the Contributor who includes the Program in a commercial product
        offering should do so in a manner which does not create potential
        liability for other Contributors. Therefore, if a Contributor includes
        the Program in a commercial product offering, such Contributor
        ("Commercial Contributor") hereby agrees to defend and indemnify every
        other Contributor ("Indemnified Contributor") against any losses,
        damages and costs (collectively "Losses") arising from claims, lawsuits
        and other legal actions brought by a third party against the Indemnified
        Contributor to the extent caused by the acts or omissions of such
        Commercial Contributor in connection with its distribution of the Program
        in a commercial product offering. The obligations in this section do not
        apply to any claims or Losses relating to any actual or alleged
        intellectual property infringement. In order to qualify, an Indemnified
        Contributor must: a) promptly notify the Commercial Contributor in
        writing of such claim, and b) allow the Commercial Contributor to control,
        and cooperate with the Commercial Contributor in, the defense and any
        related settlement negotiations. The Indemnified Contributor may
        participate in any such claim at its own expense.
        
        For example, a Contributor might include the Program in a commercial
        product offering, Product X. That Contributor is then a Commercial
        Contributor. If that Commercial Contributor then makes performance
        claims, or offers warranties related to Product X, those performance
        claims and warranties are such Commercial Contributor's responsibility
        alone. Under this section, the Commercial Contributor would have to
        defend claims against the other Contributors related to those performance
        claims and warranties, and if a court requires any other Contributor to
        pay any damages as a result, the Commercial Contributor must pay
        those damages.
        
        5. NO WARRANTY
        
        EXCEPT AS EXPRESSLY SET FORTH IN THIS AGREEMENT, AND TO THE EXTENT
        PERMITTED BY APPLICABLE LAW, THE PROGRAM IS PROVIDED ON AN "AS IS"
        BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, EITHER EXPRESS OR
        IMPLIED INCLUDING, WITHOUT LIMITATION, ANY WARRANTIES OR CONDITIONS OF
        TITLE, NON-INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A PARTICULAR
        PURPOSE. Each Recipient is solely responsible for determining the
        appropriateness of using and distributing the Program and assumes all
        risks associated with its exercise of rights under this Agreement,
        including but not limited to the risks and costs of program errors,
        compliance with applicable laws, damage to or loss of data, programs
        or equipment, and unavailability or interruption of operations.
        
        6. DISCLAIMER OF LIABILITY
        
        EXCEPT AS EXPRESSLY SET FORTH IN THIS AGREEMENT, AND TO THE EXTENT
        PERMITTED BY APPLICABLE LAW, NEITHER RECIPIENT NOR ANY CONTRIBUTORS
        SHALL HAVE ANY LIABILITY FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
        EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING WITHOUT LIMITATION LOST
        PROFITS), HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
        CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
        ARISING IN ANY WAY OUT OF THE USE OR DISTRIBUTION OF THE PROGRAM OR THE
        EXERCISE OF ANY RIGHTS GRANTED HEREUNDER, EVEN IF ADVISED OF THE
        POSSIBILITY OF SUCH DAMAGES.
        
        7. GENERAL
        
        If any provision of this Agreement is invalid or unenforceable under
        applicable law, it shall not affect the validity or enforceability of
        the remainder of the terms of this Agreement, and without further
        action by the parties hereto, such provision shall be reformed to the
        minimum extent necessary to make such provision valid and enforceable.
        
        If Recipient institutes patent litigation against any entity
        (including a cross-claim or counterclaim in a lawsuit) alleging that the
        Program itself (excluding combinations of the Program with other software
        or hardware) infringes such Recipient's patent(s), then such Recipient's
        rights granted under Section 2(b) shall terminate as of the date such
        litigation is filed.
        
        All Recipient's rights under this Agreement shall terminate if it
        fails to comply with any of the material terms or conditions of this
        Agreement and does not cure such failure in a reasonable period of
        time after becoming aware of such noncompliance. If all Recipient's
        rights under this Agreement terminate, Recipient agrees to cease use
        and distribution of the Program as soon as reasonably practicable.
        However, Recipient's obligations under this Agreement and any licenses
        granted by Recipient relating to the Program shall continue and survive.
        
        Everyone is permitted to copy and distribute copies of this Agreement,
        but in order to avoid inconsistency the Agreement is copyrighted and
        may only be modified in the following manner. The Agreement Steward
        reserves the right to publish new versions (including revisions) of
        this Agreement from time to time. No one other than the Agreement
        Steward has the right to modify this Agreement. The Eclipse Foundation
        is the initial Agreement Steward. The Eclipse Foundation may assign the
        responsibility to serve as the Agreement Steward to a suitable separate
        entity. Each new version of the Agreement will be given a distinguishing
        version number. The Program (including Contributions) may always be
        Distributed subject to the version of the Agreement under which it was
        received. In addition, after a new version of the Agreement is published,
        Contributor may elect to Distribute the Program (including its
        Contributions) under the new version.
        
        Except as expressly stated in Sections 2(a) and 2(b) above, Recipient
        receives no rights or licenses to the intellectual property of any
        Contributor under this Agreement, whether expressly, by implication,
        estoppel or otherwise. All rights in the Program not expressly granted
        under this Agreement are reserved. Nothing in this Agreement is intended
        to be enforceable by any entity that is not a Contributor or Recipient.
        No third-party beneficiary rights are created under this Agreement.
        
        Exhibit A - Form of Secondary Licenses Notice
        
        "This Source Code may also be made available under the following
        Secondary Licenses when the conditions for such availability set forth
        in the Eclipse Public License, v. 2.0 are satisfied: {name license(s),
        version(s), and exceptions or additional permissions here}."
        
          Simply including a copy of this Agreement, including this Exhibit A
          is not sufficient to license the Source Code under Secondary Licenses.
        
          If it is not possible or desirable to put the notice in a particular
          file, then You may include the notice in a location (such as a LICENSE
          file in a relevant directory) where a recipient would be likely to
          look for such a notice.
        
          You may add additional accurate notices of copyright ownership.
        
Project-URL: Homepage, https://pyregence.github.io/pyretechnics/
Project-URL: Documentation, https://pyregence.github.io/pyretechnics/
Project-URL: Repository, https://github.com/pyregence/pyretechnics/
Project-URL: Issues, https://github.com/pyregence/pyretechnics/issues/
Project-URL: Changelog, https://github.com/pyregence/pyretechnics/blob/main/CHANGELOG.md
Keywords: fire,wildfire,fire behavior,fire spread
Classifier: Programming Language :: Python :: 3
Classifier: Natural Language :: English
Classifier: License :: OSI Approved :: Eclipse Public License 2.0 (EPL-2.0)
Classifier: Operating System :: OS Independent
Classifier: Development Status :: 4 - Beta
Classifier: Topic :: Scientific/Engineering
Requires-Python: >=3.10
Description-Content-Type: text/markdown
Provides-Extra: dev
License-File: LICENSE

# Pyretechnics

A Python library for simulating fire behavior in a variety of ways.

Latest API Documentation: https://pyregence.github.io/pyretechnics/

## Design Principles

### Free and Open Source Software

To promote open review and encourage collaborative development of the
various algorithms implemented in Pyretechnics, this library is
released under a free and open source license. See the
[License](#license) section in this document for more information.

### Reproducible Research

One of the most persistently challenging aspects of software
development is the fact that the environments in which software is
built vary from one person's computer to another, including but not
limited to different types and versions of operating systems,
applications, libraries, and services installed. Since most software,
including Pyretechnics, is written so as to rely on external libraries
and applications at both build and run time, it is necessary to be
able to easily reproduce the computer environments needed for these
steps on new users' machines.

To do so, Pyretechnics uses [GNU Guix](https://guix.gnu.org) to
automatically install software dependencies and create ephemeral
development environments without requiring root privileges or
interfering with the main package manager of the underlying operating
system.

If you are running a GNU/Linux distribution on your computer, the
easiest way to install Guix is to simply follow the "Binary
Installation" instructions in the manual here:

https://guix.gnu.org/manual/en/html_node/Binary-Installation.html

This will add the `guix` command as an auxiliary package, environment,
and container manager on your machine.

If you are not running GNU/Linux, you will need to run Guix System in
a virtual machine. This is a complete GNU/Linux distribution that uses
Guix as its package manager and Shepherd as its service manager. You
can find instructions on getting this installed and running through
QEMU in the "Running Guix in a Virtual Machine" section of the Guix
manual here:

https://guix.gnu.org/manual/en/html_node/Running-Guix-in-a-VM.html

1.  Creating a Reproducible Development Environment

    Once installed, you can tell Guix to download all the necessary
    dependencies for Pyretechnics development and enter a shell in
    which they are available by running this command from the root
    directory of this repository:

    ```sh
    ./make.sh shell
    ```

    If you would like this shell environment to be isolated from your
    host machine within a container, you can use this command instead:

    ```sh
    ./make.sh container-shell
    ```

    On their first invocations, these commands will download the
    necessary software packages and install them under `/gnu/store`.
    When this is done, they will drop you into a shell environment in
    which the environment variables have been automatically configured
    to point to these newly downloaded packages.
    
    On subsequent calls to `./make.sh shell`, you should be dropped
    directly into the shell environment without the need to install
    any new software unless the [guix.scm](guix.scm) or
    [channels.scm](channels.scm) files have been updated.

2.  Authorizing Guix to Automatically Read guix.scm

    The first time that you run `./make.sh shell`, you will be
    prompted to authorize Guix to read the [guix.scm](guix.scm) file
    in this repository for instructions on what to download and how to
    set up your ephemeral shell environment. Assuming you have set the
    `PYRETECHNICS_REPO` shell variable to the directory containing
    this repository, you can do so with this command:

    ```sh
    echo $PYRETECHNICS_REPO >> $HOME/.config/guix/shell-authorized-directories
    ```

3.  Exiting the Reproducible Development Environment

    You can always exit from the shell with this command:

    ```sh
    exit
    ```

4.  Running the Test Suite

    You can run the Pyretechnics library's test suite by invoking
    `pytest` through the Guix shell like so:

    ```sh
    ./make.sh test
    ```

5.  Building the Pyretechnics Library with Guix

    To build the Pyretechnics library, including running its tests,
    constructing a Python wheel, and unpacking it into the Guix
    /gnu/store directory, simply run this command:

    ```sh
    ./make.sh build-guix
    ```

6.  Building the Pyretechnics Library as a Distribution

    To create a *dist* folder containing source (*.tar.gz*) and built (*.whl*)
    distributions of the Pyretechnics library, you can run this command:

    ```sh
    ./make.sh build-dist
    ```

7.  Uploading the Built Distribution to TestPyPI

    To upload the built distribution to
    [TestPyPI](https://test.pypi.org/), you can use this command:

    ```sh
    ./make.sh upload-testpypi
    ```

    You will be prompted for a username and password. For the
    username, use `__token__`. For the password, use the TestPyPI API
    token value that you created
    [here](https://test.pypi.org/manage/account/#api-tokens), including the
    `pypi-` prefix.

8.  Uploading the Built Distribution to PyPI

    To upload the built distribution to [PyPI](https://pypi.org/), you
    can use this command:

    ```sh
    ./make.sh upload-pypi
    ```

    You will be prompted for a username and password. For the
    username, use `__token__`. For the password, use the PyPI API
    token value that you created
    [here](https://pypi.org/manage/account/#api-tokens), including the
    `pypi-` prefix.

9.  Installing the Pyretechnics Library with Guix

    You have two options for installing the Pyretechnics library locally:

    First, you can simply install it into a temporary shell
    environment like so:

    ```sh
    ./make.sh install-shell
    ```

    You can leave this shell by typing `exit`.

    Your second option is to install the Pyretechnics library into
    your Guix profile with this command:

    ```sh
    ./make.sh install-user
    ```

    Next, you will need to invoke the following Bash commands in your
    shell to make the newly installed library available via
    `$GUIX_PYTHONPATH`. This environment variable is referenced
    automatically by the Guix-installed Python package.

    ```sh
    GUIX_PROFILE="$HOME/.guix-profile"
    . "$GUIX_PROFILE/etc/profile"
    ```

    It is recommended that you add these two lines to your
    `$HOME/.bash_profile`, so that they are run automatically each
    time you login.

10. Using the Pyretechnics Library

    Once you have installed the library into a temporary shell
    environment, installed it into your Guix profile, or downloaded it
    from [PyPI](https://pypi.org/), you should be able to launch
    `python` and load the library as follows:

    ```python
    import pyretechnics
    ```

### Literate Programming

Pyretechnics has been coded as a [literate
program](https://en.wikipedia.org/wiki/Literate_programming) using
Emacs' [org-mode](http://orgmode.org/worg/org-contrib/babel/). This
means that its source code is embedded within a larger document, which
explains the rationale behind the code using text, equations,
citations, tables, and figures. The reason for this approach is to
make the science and engineering decisions within Pyretechnics fully
transparent to our users, whether or not they feel confident reading
source code directly. We believe that this better promotes the goals
of open science than open source software alone.

What this means practically is that the [org](org) directory in this
software repository contains a single literate program document called
[org/pyretechnics.org](org/pyretechnics.org), which is used to
automatically generate all of the other source code and documentation
files within this repository.

1.  Regenerating HTML Documentation

    The latest HTML documentation can always be found in
    [docs/index.html](docs/index.html).

    After editing [org/pyretechnics.org](org/pyretechnics.org), you can
    regenerate the HTML documentation by running this command:

    ```sh
    ./make.sh weave
    ```

2.  Regenerating the Source Code Tree

    After editing [org/pyretechnics.org](org/pyretechnics.org), you can
    regenerate all the source code files in this repository by running
    this command:

    ```sh
    ./make.sh tangle
    ```

3.  Bringing Source Code File Edits Back into the Literate Program

    If you edit a source code file directly, its changes can be
    automatically incorporated back into the literate program by
    running this command:

    ```sh
    ./make.sh detangle
    ```

4.  Running All the Source Code Blocks in the Literate Program

    If your changes would impact the results of the example code
    blocks in the literate program, then you can run them again to
    update their results in
    [org/pyretechnics.org](org/pyretechnics.org) with this command:

    ```sh
    ./make.sh org-eval
    ```

## Contact

### Authors

- Gary W. Johnson, PhD
  - Email: gjohnson@sig-gis.com
  - Web: https://sig-gis.com

- Valentin Waeselynck
  - Email: vwaeselynck@sig-gis.com
  - Web: https://sig-gis.com

- Chris Lautenberger, PhD, PE
  - Email: chris@cloudfire.ai
  - Web: https://cloudfire.ai

- David Saah, PhD
  - Email: dsaah@sig-gis.com
  - Web: https://sig-gis.com

<a id="license"></a>
## License

Copyright © 2023-2025 Spatial Informatics Group, LLC.

Pyretechnics is distributed by Spatial Informatics Group, LLC. under
the terms of the Eclipse Public License version 2.0 (EPLv2). See
[LICENSE](LICENSE) in this directory for more information.
