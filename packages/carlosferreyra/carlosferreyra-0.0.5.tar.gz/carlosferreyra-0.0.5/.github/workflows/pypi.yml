name: Publish Python Package
on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write
  id-token: write

env:
  VERSION: ${{ github.ref_name }}

jobs:
  publish-pypi:
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/carlosferreyra

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Setup Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Run release script
        run: |
          python scripts/release.py ${{ env.VERSION }}

      - name: Setup uv
        uses: astral-sh/setup-uv@v5
        with:
          version: 'latest'

      - name: Sync uv
        run: uv sync

      - name: Install build dependencies
        run: uv pip install build twine

      - name: Build package
        run: uv run python -m build

      - name: Publish package
        uses: pypa/gh-action-pypi-publish@v1.12.4
        with:
          verify-metadata: true
          verbose: true
          print-hash: true

      - name: Verify PyPI Package
        run: |
          # Wait a few seconds for PyPI to process the upload
          sleep 10
          # Check if package is available on PyPI
          response=$(curl -s -o /dev/null -w "%{http_code}" https://pypi.org/project/carlosferreyra/${{ env.VERSION }}/)
          if [ "$response" != "200" ]; then
            echo "Package not found on PyPI"
            exit 1
          fi

  create-github-release:
    needs: publish-pypi
    runs-on: ubuntu-latest

    steps:
      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: softprops/action-gh-release@v2
        with:
          name: Release v${{ env.VERSION }}
          tag_name: v${{ env.VERSION }}
          generate_release_notes: true
          make_latest: true
