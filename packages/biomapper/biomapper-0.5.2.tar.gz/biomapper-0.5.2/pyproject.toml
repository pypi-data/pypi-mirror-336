[tool.poetry]
name = "biomapper"
version = "0.5.2"
description = "A unified Python toolkit for biological data harmonization and ontology mapping"
authors = ["Trent Leslie <trent.leslie@phenomehealth.org>"]
license = "MIT"
readme = "README.md"
packages = [{include = "biomapper", from = "."}]
repository = "https://github.com/arpanauts/biomapper"
documentation = "https://biomapper.readthedocs.io/"
keywords = [
    "bioinformatics",
    "ontology",
    "data mapping",
    "biological data",
    "standardization",
    "harmonization"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Natural Language :: English"
]

[tool.poetry.dependencies]
python = "^3.11"
requests = "^2.25.1"
numpy = ">=2.1.0"
pandas = "^2.0.0"
sqlalchemy = "^1.4.0"
pyyaml = "^6.0.1"
tqdm = "^4.66.1"
libChEBIpy = "1.0.10"  # Import as 'libchebipy' in code
matplotlib = "^3.8.0"
seaborn = "^0.13.0"
upsetplot = "^0.8.0"
venn = "^0.1.3"
langfuse = "^2.57.1"
openai = "^1.14.0"
python-dotenv = "^1.0.1"
dspy-ai = "^2.1.8"
cloudpickle = "^3.0.0"
python-multipart = "^0.0.10"
cryptography = ">=43.0.1"
rdkit = "^2023.9.1"
chromadb = "^0.6.2"
torch = "^2.2.0"
transformers = "^4.38.2"
sentence-transformers = "^2.2.2"
aiohttp = "^3.11.11"
pyarango = "^2.1.1"
fastembed = "^0.5.1"
faiss-cpu = "^1.10.0"
lxml = "^5.3.1"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-cov = "^4.1.0"
pytest-mock = "^3.14.0"
mypy = "^1.14.1"
ruff = "^0.1.6"
jupyter = "^1.1.1"
ipykernel = "^6.29.5"
types-requests = "^2.31.0.20240311"
pandas-stubs = "^2.2.3.241126"
types-tqdm = "^4.67.0.20241119"
requests-mock = "^1.11.0"
# OpenAI package includes its own type hints, so types-openai is not needed
sphinx = "^8.1.3"
sphinx-rtd-theme = "^3.0.2"
sphinx-autodoc-typehints = "^3.0.0"
myst-parser = "^4.0.0"
pytest-asyncio = "^0.21.1"
phenome-arivale = {git = "https://git.phenome.health/trent.leslie/phenome-arivale"}
sphinxcontrib-mermaid = "^1.0.0"

[tool.poetry.extras]
api = ["fastapi", "uvicorn"]  # For potential REST API functionality
full = ["fastapi", "uvicorn"]  # Remove visualization packages from full extras

[tool.poetry.scripts]
biomapper = "biomapper.cli:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-ra -q --cov=biomapper --cov-report=term-missing"
markers = [
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.ruff]
select = ["E", "F", "B", "I", "C4", "DTZ", "RUF", "N", "D", "UP", "S"]
ignore = ["D203", "D213", "F401"]  # Ignore unused imports globally since we use type hints extensively
line-length = 88

[tool.ruff.per-file-ignores]
"tests/**/*.py" = []  # No additional ignores needed since F401 is ignored globally
"**/__init__.py" = []  # No additional ignores needed since F401 is ignored globally

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.isort]
known-first-party = ["biomapper"]
combine-as-imports = true

[tool.coverage.run]
source = ["biomapper"]
omit = [
    "tests/*",
    "**/__init__.py",
    "**/cli.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "pass",
    "raise ImportError",
    "raise NotImplementedError"
]
show_missing = true
fail_under = 80

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
strict_optional = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
show_error_codes = true
pretty = true
sqlite_cache = true
plugins = ["numpy.typing.mypy_plugin"]

[[tool.mypy.overrides]]
module = [
    "libchebipy.*",
    "torch.*",
    "chromadb.*",
    "dspy.*",
    "langfuse.*"
]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = ["tests.*"]
disallow_untyped_defs = false

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
sphinx = "^8.1.3"
sphinx-rtd-theme = "^3.0.2"
sphinx-autodoc-typehints = "^3.0.0"
myst-parser = "^4.0.0"