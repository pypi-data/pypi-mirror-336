Metadata-Version: 2.4
Name: loki-django-logger
Version: 1.0.9
Summary: Loki logger for Django applications
Home-page: https://github.com/irwinrex/django-loki-logger
Author: Irwin Rex
Author-email: irwinrex.a@gmail.com
Keywords: django loki logger async log-aggregation
Classifier: Development Status :: 5 - Production/Stable
Classifier: Framework :: Django
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: System :: Logging
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: Django>=4.0
Requires-Dist: requests>=2.26.0
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: keywords
Dynamic: license-file
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

# Loki Django Logger

A lightweight logging solution for Django applications that sends logs to Grafana Loki with gzip compression for improved performance.

## üöÄ Installation

Install the package using pip:

```bash
pip install loki-django-logger
```

## ‚öôÔ∏è Configuration

### Add the logger to your Django settings

In your `settings.py` file:

```python
LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "formatters": {
        "verbose": {
            "format": "[%(asctime)s] %(levelname)s [%(name)s:%(lineno)s] %(message)s",
            "datefmt": "%Y-%m-%d %H:%M:%S",
        },
    },
    "handlers": {
        "console": {
            "class": "logging.StreamHandler",
            "formatter": "verbose",
        },
        "loki": {
            "class": "loki_django_logger.handler.AsyncGzipLokiHandler",
            "loki_url": "https://loki.test.dev",
            "labels": {"application": "django-app", "environment": "development"},
            "level": "DEBUG",
            "flush_interval": 1,
        },
    },
    "loggers": {
        "django": {
            "handlers": ["console", "loki"],
            "level": "INFO",
            "propagate": False,
        },
    },
}
```

### Install Loki (if not already available)

```bash
docker run -d --name=loki -p 3100:3100 grafana/loki:latest
```

### Run your Django application and monitor the logs in Loki.

---

## üìù Example Usage

In your Django views or tasks:

```python
import logging
logger = logging.getLogger("django")

def sample_view(request):
    logger.info("Sample log message sent to Loki", extra={"user_id": 123, "operation": "sample_view"})
    return JsonResponse({"message": "Logged successfully!"})
```

---

## üß™ Testing

To run tests:

```bash
pytest tests/
```

---

## üìú License

This project is licensed under the MIT License. See the `LICENSE` file for details.

