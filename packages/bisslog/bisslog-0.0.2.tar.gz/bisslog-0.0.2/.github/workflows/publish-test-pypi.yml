name: Deploy to TestPyPI

on:
  push:
    branches:
      - qa
    paths:
      - "bisslog/**"  # Se ejecuta solo si hay cambios en bisslog/

jobs:
  run-tests:
    uses: darwinhc/bisslog-core-py/.github/workflows/pytest.yml@master
    with:
      coverage_threshold: ${{ vars.TEST_COVERAGE_THRESHOLD }}

  run-linter:
    uses: darwinhc/bisslog-core-py/.github/workflows/pylint.yml@master
    with:
      pylint_threshold: ${{ vars.PYLINT_THRESHOLD }}

  run-complexity:
    uses: darwinhc/bisslog-core-py/.github/workflows/radon.yml@master
    with:
      radon_threshold: ${{ vars.RADON_THRESHOLD }}

  determine-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set-version.outputs.VERSION }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools_scm

      - name: Determine version for TestPyPI
        id: set-version
        run: |
          VERSION=$(python -c "import setuptools_scm; print(setuptools_scm.get_version(version_scheme='post-release', local_scheme='no-local-version'))")
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

  deploy:
    runs-on: ubuntu-latest
    needs: [run-tests, run-linter, run-complexity, determine-version]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Necesario para que setuptools_scm detecte la versi√≥n correctamente

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine setuptools_scm
      - name: Printing version to build
        run: echo ${{ needs.determine-version.outputs.version }}

      - name: Build package with correct version
        run: |
          python -m build
        env:
          SETUPTOOLS_SCM_PRETEND_VERSION: ${{ needs.determine-version.outputs.version }}

      - name: Publish to TestPyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
        run: twine upload --skip-existing --verbose --repository testpypi dist/*

      - name: Install from TestPyPI to verify
        run: |
          python -m venv test_env
          source test_env/bin/activate
          python -m pip install --index-url https://test.pypi.org/simple/ --no-deps bisslog
          deactivate
