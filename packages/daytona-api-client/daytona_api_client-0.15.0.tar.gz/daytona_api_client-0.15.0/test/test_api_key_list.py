# coding: utf-8

"""
    Daytona Workspaces

    Daytona Workspaces API Docs

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from daytona_api_client.models.api_key_list import ApiKeyList

class TestApiKeyList(unittest.TestCase):
    """ApiKeyList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApiKeyList:
        """Test ApiKeyList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApiKeyList`
        """
        model = ApiKeyList()
        if include_optional:
            return ApiKeyList(
                name = 'My API Key',
                value = 'bb_********************def',
                created_at = '2024-03-14T12:00Z',
                permissions = [
                    'write:registries'
                    ]
            )
        else:
            return ApiKeyList(
                name = 'My API Key',
                value = 'bb_********************def',
                created_at = '2024-03-14T12:00Z',
                permissions = [
                    'write:registries'
                    ],
        )
        """

    def testApiKeyList(self):
        """Test ApiKeyList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
