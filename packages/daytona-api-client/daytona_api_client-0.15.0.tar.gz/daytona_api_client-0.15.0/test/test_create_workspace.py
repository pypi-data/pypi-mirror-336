# coding: utf-8

"""
    Daytona Workspaces

    Daytona Workspaces API Docs

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from daytona_api_client.models.create_workspace import CreateWorkspace

class TestCreateWorkspace(unittest.TestCase):
    """CreateWorkspace unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateWorkspace:
        """Test CreateWorkspace
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateWorkspace`
        """
        model = CreateWorkspace()
        if include_optional:
            return CreateWorkspace(
                id = 'workspace123',
                name = 'MyWorkspace',
                image = 'daytonaio/workspace:latest',
                user = 'daytona',
                env = {"NODE_ENV":"production"},
                labels = {"daytona.io/public":"true"},
                public = False,
                var_class = 'small',
                target = 'eu',
                cpu = 2,
                gpu = 1,
                memory = 4096,
                disk = 20,
                auto_stop_interval = 30
            )
        else:
            return CreateWorkspace(
        )
        """

    def testCreateWorkspace(self):
        """Test CreateWorkspace"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
