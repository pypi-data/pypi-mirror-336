# coding: utf-8

"""
    Daytona Workspaces

    Daytona Workspaces API Docs

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from daytona_api_client.models.completion_list import CompletionList

class TestCompletionList(unittest.TestCase):
    """CompletionList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CompletionList:
        """Test CompletionList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CompletionList`
        """
        model = CompletionList()
        if include_optional:
            return CompletionList(
                is_incomplete = True,
                items = [
                    daytona_api_client.models.completion_item.CompletionItem(
                        label = '', 
                        kind = 1.337, 
                        detail = '', 
                        documentation = daytona_api_client.models.documentation.documentation(), 
                        sort_text = '', 
                        filter_text = '', 
                        insert_text = '', )
                    ]
            )
        else:
            return CompletionList(
                is_incomplete = True,
                items = [
                    daytona_api_client.models.completion_item.CompletionItem(
                        label = '', 
                        kind = 1.337, 
                        detail = '', 
                        documentation = daytona_api_client.models.documentation.documentation(), 
                        sort_text = '', 
                        filter_text = '', 
                        insert_text = '', )
                    ],
        )
        """

    def testCompletionList(self):
        """Test CompletionList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
