# coding: utf-8

"""
    Daytona Workspaces

    Daytona Workspaces API Docs

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from daytona_api_client.models.create_user import CreateUser

class TestCreateUser(unittest.TestCase):
    """CreateUser unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateUser:
        """Test CreateUser
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateUser`
        """
        model = CreateUser()
        if include_optional:
            return CreateUser(
                id = '',
                name = '',
                email = '',
                personal_organization_quota = daytona_api_client.models.create_organization_quota.CreateOrganizationQuota(
                    total_cpu_quota = 1.337, 
                    total_memory_quota = 1.337, 
                    total_disk_quota = 1.337, 
                    max_cpu_per_workspace = 1.337, 
                    max_memory_per_workspace = 1.337, 
                    max_disk_per_workspace = 1.337, 
                    max_concurrent_workspaces = 1.337, 
                    workspace_quota = 1.337, 
                    image_quota = 1.337, 
                    max_image_size = 1.337, 
                    total_image_size = 1.337, )
            )
        else:
            return CreateUser(
                id = '',
                name = '',
        )
        """

    def testCreateUser(self):
        """Test CreateUser"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
