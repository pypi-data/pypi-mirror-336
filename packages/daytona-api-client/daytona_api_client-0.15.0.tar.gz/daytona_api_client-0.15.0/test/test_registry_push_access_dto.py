# coding: utf-8

"""
    Daytona Workspaces

    Daytona Workspaces API Docs

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from daytona_api_client.models.registry_push_access_dto import RegistryPushAccessDto

class TestRegistryPushAccessDto(unittest.TestCase):
    """RegistryPushAccessDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RegistryPushAccessDto:
        """Test RegistryPushAccessDto
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RegistryPushAccessDto`
        """
        model = RegistryPushAccessDto()
        if include_optional:
            return RegistryPushAccessDto(
                username = 'temp-user-123',
                secret = 'eyJhbGciOiJIUzI1NiIs...',
                registry_url = 'registry.example.com',
                registry_id = '123e4567-e89b-12d3-a456-426614174000',
                project = 'library',
                expires_at = '2023-12-31T23:59:59Z'
            )
        else:
            return RegistryPushAccessDto(
                username = 'temp-user-123',
                secret = 'eyJhbGciOiJIUzI1NiIs...',
                registry_url = 'registry.example.com',
                registry_id = '123e4567-e89b-12d3-a456-426614174000',
                project = 'library',
                expires_at = '2023-12-31T23:59:59Z',
        )
        """

    def testRegistryPushAccessDto(self):
        """Test RegistryPushAccessDto"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
