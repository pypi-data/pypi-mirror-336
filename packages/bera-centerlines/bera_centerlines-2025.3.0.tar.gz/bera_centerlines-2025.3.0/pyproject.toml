[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "bera_centerlines"
dynamic = ["version"]
description = "An advanced forest line feature analysis platform"
requires-python = ">=3.10"
readme = "README.md"
license = {file = "LICENSE.md"}
authors = [
    { name = "AppliedGRG", email = "appliedgrg@gmail.com" },
    { name = "Richard Zeng", email = "richardqzeng@gmail.com" },
]

keywords = [
    "BERA", "Centerline"
]

classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "click",
    "fiona >=1.7.0",
    "networkx >=2.1",
    "scipy >=0.17",
    "shapely >=1.5",
    "networkit >=11.0",
    "tqdm"
]

[project.urls]
Homepage = "https://github.com/RichardQZeng/label_centerlines"

[tool.hatch.version]
path = "label_centerlines/__init__.py"

[tool.hatch.build.targets.sdist]
include = [
    "/label_centerlines",
]

[tool.hatch.build.targets.wheel]
packages = ["/bera_centerlines"] 

exclude = [
  "tests/*",
]

# ruff settings
[tool.ruff]

# Set maximum line length to 88 characters as per PEP 8
line-length = 90

# Select categories of checks to perform
select = ["E", "F", "D", "I"]

# Ignore specific error codes
ignore = ["W505", "D102", "E203", "D212", "D103", "D107", "D417", "E301", "E302", "E303", "W292", "W391"]

# Exclude certain directories from linting (e.g., test and build directories)
exclude = [
    "dist/*",        # Ignore the build directory
    "docs/*",         # Ignore documentation
    "output/*",     # Ignore example code
    "*/__init__.py"   # Ignore init files, typically they are left empty
]


# Target Python version
target-version = "py310"