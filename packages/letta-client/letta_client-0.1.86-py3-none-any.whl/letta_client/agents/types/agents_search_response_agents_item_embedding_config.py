# This file was auto-generated by Fern from our API Definition.

from ...core.unchecked_base_model import UncheckedBaseModel
from .agents_search_response_agents_item_embedding_config_embedding_endpoint_type import (
    AgentsSearchResponseAgentsItemEmbeddingConfigEmbeddingEndpointType,
)
import typing
from .agents_search_response_agents_item_embedding_config_embedding_endpoint import (
    AgentsSearchResponseAgentsItemEmbeddingConfigEmbeddingEndpoint,
)
from .agents_search_response_agents_item_embedding_config_embedding_chunk_size import (
    AgentsSearchResponseAgentsItemEmbeddingConfigEmbeddingChunkSize,
)
from .agents_search_response_agents_item_embedding_config_handle import (
    AgentsSearchResponseAgentsItemEmbeddingConfigHandle,
)
from .agents_search_response_agents_item_embedding_config_azure_endpoint import (
    AgentsSearchResponseAgentsItemEmbeddingConfigAzureEndpoint,
)
from .agents_search_response_agents_item_embedding_config_azure_version import (
    AgentsSearchResponseAgentsItemEmbeddingConfigAzureVersion,
)
from .agents_search_response_agents_item_embedding_config_azure_deployment import (
    AgentsSearchResponseAgentsItemEmbeddingConfigAzureDeployment,
)
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class AgentsSearchResponseAgentsItemEmbeddingConfig(UncheckedBaseModel):
    embedding_endpoint_type: AgentsSearchResponseAgentsItemEmbeddingConfigEmbeddingEndpointType
    embedding_endpoint: typing.Optional[AgentsSearchResponseAgentsItemEmbeddingConfigEmbeddingEndpoint] = None
    embedding_model: str
    embedding_dim: float
    embedding_chunk_size: typing.Optional[AgentsSearchResponseAgentsItemEmbeddingConfigEmbeddingChunkSize] = None
    handle: typing.Optional[AgentsSearchResponseAgentsItemEmbeddingConfigHandle] = None
    azure_endpoint: typing.Optional[AgentsSearchResponseAgentsItemEmbeddingConfigAzureEndpoint] = None
    azure_version: typing.Optional[AgentsSearchResponseAgentsItemEmbeddingConfigAzureVersion] = None
    azure_deployment: typing.Optional[AgentsSearchResponseAgentsItemEmbeddingConfigAzureDeployment] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
