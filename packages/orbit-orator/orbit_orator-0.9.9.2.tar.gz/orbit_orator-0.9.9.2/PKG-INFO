Metadata-Version: 2.1
Name: orbit-orator
Version: 0.9.9.2
Summary: A simple yet beautiful ORM for Python
Home-page: https://github.com/sdispater/orator
License: MIT
Keywords: orm,database,query builder
Author: Sdispater
Author-email: sdispater@me.com
Requires-Python: >=3.6,<4.0
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Provides-Extra: mysql
Provides-Extra: mysql-python
Provides-Extra: pgsql
Requires-Dist: Faker (>=0.8,<0.9)
Requires-Dist: PyMySQL (>=0.7,<0.8) ; extra == "mysql-python"
Requires-Dist: Pygments (>=2.2,<3.0)
Requires-Dist: backpack (>=0.1,<0.2)
Requires-Dist: blinker (>=1.4,<2.0)
Requires-Dist: cleo (>=0.6,<0.7)
Requires-Dist: flexmock (>=0.10.4,<0.11.0)
Requires-Dist: inflection (>=0.3,<0.4)
Requires-Dist: lazy-object-proxy (>=1.2,<2.0)
Requires-Dist: mysqlclient (>=1.3,<2.0) ; extra == "mysql"
Requires-Dist: pendulum (>=1.4,<2.0)
Requires-Dist: psycopg2 (>=2.7,<3.0) ; extra == "pgsql"
Requires-Dist: pyaml (>=16.12,<17.0)
Requires-Dist: pyyaml (>=5.1,<7.0)
Requires-Dist: simplejson (>=3.10,<4.0)
Requires-Dist: six (>=1.10,<2.0)
Requires-Dist: wrapt (>=1.10,<2.0)
Project-URL: Repository, https://github.com/sdispater/orator
Description-Content-Type: text/markdown

# Orbit-Orator

Orbit-Orator 是一个简单而优雅的 Python ORM，基于 Orator ORM 进行二次开发。

## 安装

```bash
pip install orbit-orator
```

## 快速开始

```python
from orbit_orator import DatabaseManager, Model

# 配置数据库连接
config = {
    'mysql': {
        'driver': 'mysql',
        'host': 'localhost',
        'database': 'database',
        'user': 'user',
        'password': 'password',
        'prefix': ''
    }
}

# 初始化数据库连接
db = DatabaseManager(config)
Model.set_connection_resolver(db)

# 定义模型
class User(Model):
    __fillable__ = ['name', 'email']

# 创建记录
user = User.create(name='John', email='john@example.com')

# 查询记录
user = User.where('name', 'John').first()
```

## 特性

- 简单而优雅的 API
- 支持多种数据库（MySQL, PostgreSQL, SQLite）
- 支持模型关系
- 支持查询构建器
- 支持数据库迁移
- 支持事务处理

## 文档

详细文档请访问 [文档网站](https://github.com/yourusername/orbit-orator/wiki)

## 许可证

MIT License 
