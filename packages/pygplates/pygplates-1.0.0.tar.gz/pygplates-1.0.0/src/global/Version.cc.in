/**
 * Copyright (C) 2019 The University of Sydney, Australia
 *
 * This file is part of GPlates.
 *
 * GPlates is free software; you can redistribute it and/or modify it under
 * the terms of the GNU General Public License, version 2, as published by
 * the Free Software Foundation.
 *
 * GPlates is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 */

// Using 'global/' prefix since the generated version of this file might not be in same directory as "Version.h" (ie, in 'global/').
#include "global/Version.h"


// If you see strings like \@GPLATES_VERSION_PRERELEASE_USER\@ in this file then you are looking at the file
// that the CMake build system will use to generate a new file with the appropriate version string replacements.
// If not then you are looking at the file generated by CMake.


/////////////
// GPlates //
/////////////

QString
GPlatesGlobal::Version::get_GPlates_version()
{
	return QString("@GPLATES_VERSION_PRERELEASE_USER@");
}

unsigned int
GPlatesGlobal::Version::get_GPlates_version_major()
{
	return @GPLATES_VERSION_MAJOR@;
}

unsigned int
GPlatesGlobal::Version::get_GPlates_version_minor()
{
	return @GPLATES_VERSION_MINOR@;
}

unsigned int
GPlatesGlobal::Version::get_GPlates_version_patch()
{
	return @GPLATES_VERSION_PATCH@;
}

boost::optional<QString>
GPlatesGlobal::Version::get_GPlates_version_prerelease_suffix()
{
	const QString version_prerelease_suffix("@GPLATES_VERSION_PRERELEASE_SUFFIX_USER@");
	if (version_prerelease_suffix.isEmpty())
	{
		return boost::none;
	}

	return version_prerelease_suffix;
}


///////////////
// PyGPlates //
///////////////

QString
GPlatesGlobal::Version::get_pyGPlates_version()
{
	return QString("@PYGPLATES_VERSION_RELEASE@");
}

unsigned int
GPlatesGlobal::Version::get_pyGPlates_version_major()
{
	return @PYGPLATES_VERSION_MAJOR@;
}

unsigned int
GPlatesGlobal::Version::get_pyGPlates_version_minor()
{
	return @PYGPLATES_VERSION_MINOR@;
}

unsigned int
GPlatesGlobal::Version::get_pyGPlates_version_patch()
{
	return @PYGPLATES_VERSION_PATCH@;
}

boost::optional<QString>
GPlatesGlobal::Version::get_pyGPlates_version_release_suffix()
{
	const QString PEP440_version_release_suffix("@PYGPLATES_VERSION_RELEASE_SUFFIX@");
	if (PEP440_version_release_suffix.isEmpty())
	{
		return boost::none;
	}

	return PEP440_version_release_suffix;
}
