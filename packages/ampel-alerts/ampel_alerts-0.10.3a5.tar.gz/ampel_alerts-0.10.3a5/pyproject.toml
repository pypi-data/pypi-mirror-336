[tool.poetry]
name = "ampel-alerts"
version = "0.10.3a5"
description = "Alert support for the Ampel system"
authors = ["Valery Brinnel"]
maintainers = ["Jakob van Santen <jakob.van.santen@desy.de>"]
license = "BSD-3-Clause"
readme = "README.md"
homepage = "https://ampelproject.github.io"
repository = "https://github.com/AmpelProject/Ampel-alerts"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Scientific/Engineering :: Astronomy",
    "Typing :: Typed",
]
packages = [{include = "ampel"}]
exclude = ["ampel/py.typed"]
include = [
    'conf/*/*.json',
    'conf/*/*/*.json',
    'conf/*/*.yaml',
    'conf/*/*/*.yaml',
    'conf/*/*.yml',
    'conf/*/*/*.yml',
]

[tool.poetry.dependencies]
python = "^3.10"
ampel-core = {version = ">=0.10.6a8,<0.11"}

[tool.poetry.dev-dependencies]
pytest = "^8.3.3"
pytest-cov = "^6.0.0"
pytest-mock = "^3.14.0"
mongomock = "^4.2"
mypy = "^1.11.2"

[tool.poetry.group.dev.dependencies]
types-ujson = "^5.9.0.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.coverage.run]
relative_files = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--showlocals -r a"
filterwarnings = [
    "error",
]

[tool.mypy]
packages = ["ampel"]
namespace_packages = true
show_error_codes = true
plugins = [
    "pydantic.mypy"
]

[tool.pydantic-mypy]
init_typed = true

[[tool.mypy.overrides]]
module = "ampel.abstract.*"
disable_error_code = "empty-body"

[[tool.mypy.overrides]]
module = [
    "fastavro",
]
ignore_missing_imports = true

[tool.ruff]
target-version = "py310"

[tool.ruff.lint]
select = [
    "E4",
    "E7",
    "E9",
    "F",
    "I",
    "UP",
    "B",
    "DTZ",
    "T20",
    "PT",
    "RET",
    "SLF",
    "SIM",
    "PL",
    "PERF",
    "RUF",
]
ignore = [
    "UP009", # UTF-8 encoding declaration is unnecessary
    "PLR09", # too many (arguments|branches)
    "PLR2004", # Magic value used in comparison
    "RUF012", # mutable class properties (are harmless everywhere BaseModel is used),
    "RUF018", # assignment expressions in asserts are fine
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["T20", "E731", "SLF001", "PLR2004"]
"ampel/dev/AutoCompleteBenchmark.py" = ["T201"]
"ampel/alert/AlertConsumer.py" = ["T201"]
