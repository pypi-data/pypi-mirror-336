# Generated by Django 5.1.5 on 2025-03-23 16:32

import dcim.fields
import django.contrib.postgres.fields.ranges
import django.core.validators
import django.db.models.deletion
import taggit.managers
import utilities.json
from django.db import migrations, models

import netbox_routeros.validators


class Migration(migrations.Migration):
    dependencies = [
        ("dcim", "0200_populate_mac_addresses"),
        ("extras", "0122_charfield_null_choices"),
        ("ipam", "0076_natural_ordering"),
        ("netbox_routeros", "0003_interfacelist_capsmanserverconfig_interface_lists"),
    ]

    operations = [
        migrations.CreateModel(
            name="CapsmanAccessListItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True, null=True)),
                ("last_updated", models.DateTimeField(auto_now=True, null=True)),
                (
                    "custom_field_data",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        encoder=utilities.json.CustomFieldJSONEncoder,
                    ),
                ),
                ("description", models.CharField(blank=True, max_length=200)),
                ("comments", models.TextField(blank=True)),
                ("number", models.PositiveIntegerField()),
                ("enabled", models.BooleanField(default=True)),
                ("mac_address", dcim.fields.MACAddressField(blank=True, null=True)),
                (
                    "mac_address_mask",
                    dcim.fields.MACAddressField(
                        blank=True,
                        null=True,
                        validators=[
                            netbox_routeros.validators.MacAddressMaskValidator()
                        ],
                    ),
                ),
                (
                    "signal_range",
                    django.contrib.postgres.fields.ranges.IntegerRangeField(
                        blank=True,
                        null=True,
                        validators=[
                            netbox_routeros.validators.IncreasingRangeValidator(),
                            netbox_routeros.validators.RangeValidator(
                                django.core.validators.MinValueValidator(-120)
                            ),
                            netbox_routeros.validators.RangeValidator(
                                django.core.validators.MaxValueValidator(120)
                            ),
                        ],
                    ),
                ),
                (
                    "ssid_regexp",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("action", models.CharField(blank=True, max_length=50, null=True)),
                ("radius_accounting", models.BooleanField(blank=True, null=True)),
                ("client_isolation", models.BooleanField(blank=True, null=True)),
                (
                    "capsman",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="access_list_items",
                        to="netbox_routeros.capsmaninstance",
                    ),
                ),
                (
                    "interface",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="+",
                        to="dcim.interface",
                    ),
                ),
                (
                    "interface_list",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="+",
                        to="netbox_routeros.interfacelist",
                    ),
                ),
                (
                    "tags",
                    taggit.managers.TaggableManager(
                        through="extras.TaggedItem", to="extras.Tag"
                    ),
                ),
                (
                    "vlan",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="channels",
                        to="ipam.vlan",
                    ),
                ),
            ],
            options={
                "ordering": ("capsman", "number"),
                "unique_together": {("capsman", "number")},
            },
        ),
    ]
