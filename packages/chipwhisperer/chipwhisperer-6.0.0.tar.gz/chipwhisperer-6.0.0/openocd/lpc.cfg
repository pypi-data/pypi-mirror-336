# SPDX-License-Identifier: GPL-2.0-or-later
source [find target/swj-dp.tcl]
adapter speed 1000
if { [info exists CHIPNAME] } {
	set _CHIPNAME $CHIPNAME
} else {
	set _CHIPNAME lpc55xx
}
if { [info exists CPUTAPID] } {
	set _CPUTAPID $CPUTAPID
} else {
	# Cortex-M33 SWD DPIDR
	set _CPUTAPID 0x6ba02477
}
swj_newdap $_CHIPNAME cpu -irlen 4 -ircapture 0x1 -irmask 0xf -expected-id $_CPUTAPID
dap create $_CHIPNAME.dap -chain-position $_CHIPNAME.cpu
set _TARGETNAME $_CHIPNAME.cpu
target create $_TARGETNAME cortex_m -endian little -dap $_CHIPNAME.dap
# Reserved RAM regions for ROM functions
# 0x14000000 -- 0x14003fff
# 0x30001000 -- 0x30007fff
#
# Use 16 KiB of SRAM2 (on LPC553x) for working area
if { [info exists WORKAREASIZE] } {
	set _WORKAREASIZE $WORKAREASIZE
} else {
	set _WORKAREASIZE 0x4000
}
$_TARGETNAME configure -work-area-phys 0x20008000 \
	-work-area-size $_WORKAREASIZE -work-area-backup 0
if { [info exists FLASH_API_ADDRESS] } {
	set _FLASH_API_ADDRESS $FLASH_API_ADDRESS
} else {
	set _FLASH_API_ADDRESS 0
}
# Using SRST is not recommended as that also resets the debug domain
if {![using_hla]} {
	cortex_m reset_config sysresetreq
}
proc init_reset { mode } {
	if { $mode ne "run" } {
		halt
		wp 0x50000040 4 r
		resume
	}
}
$_TARGETNAME configure -event reset-end { catch { rwp 0x50000040 } }
# Run this to initiate a debug session with a target that doesn't have
# valid firmware on flash
proc lpc55xx_start_debug_session { } {
	global _CHIPNAME
	$_CHIPNAME.dap apreg 2 0 0x21
	$_CHIPNAME.dap apreg 2 4 7
	$_CHIPNAME.cpu arp_examine
}
flash bank $_TARGETNAME.flash lpc55xx 0x00000000 0 0 0 0 $_FLASH_API_ADDRESS