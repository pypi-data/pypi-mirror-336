# coding: utf-8

"""
    OpenPay API

    super charge your subscription management.

    The version of the OpenAPI document: 1.2.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

from __future__ import annotations

import json
import pprint
import re  # noqa: F401
from typing import Optional

from pydantic import BaseModel, Field, StrictBool, StrictInt


class SubscriptionPauseRequest(BaseModel):
  """
    SubscriptionPauseRequest
    """
  is_preview: Optional[StrictBool] = Field(
    False, description="Whether the request is in preview mode (Subscription won't actually pause)"
  )
  number_of_billing_cycles_to_skip: StrictInt = Field(
    ..., description='Number of billing cycles this subscription will be paused.'
  )
  __properties = ['is_preview', 'number_of_billing_cycles_to_skip']

  class Config:
    """Pydantic configuration"""
    allow_population_by_field_name = True
    validate_assignment = True

  def to_str(self) -> str:
    """Returns the string representation of the model using alias"""
    return pprint.pformat(self.dict(by_alias=True))

  def to_json(self) -> str:
    """Returns the JSON representation of the model using alias"""
    return json.dumps(self.to_dict())

  @classmethod
  def from_json(cls, json_str: str) -> SubscriptionPauseRequest:
    """Create an instance of SubscriptionPauseRequest from a JSON string"""
    return cls.from_dict(json.loads(json_str))

  def to_dict(self):
    """Returns the dictionary representation of the model using alias"""
    _dict = self.dict(by_alias=True, exclude={}, exclude_none=True)
    return _dict

  @classmethod
  def from_dict(cls, obj: dict) -> SubscriptionPauseRequest:
    """Create an instance of SubscriptionPauseRequest from a dict"""
    if obj is None:
      return None

    if not isinstance(obj, dict):
      return SubscriptionPauseRequest.parse_obj(obj)

    _obj = SubscriptionPauseRequest.parse_obj(
      {
        'is_preview': obj.get('is_preview') if obj.get('is_preview') is not None else False,
        'number_of_billing_cycles_to_skip': obj.get('number_of_billing_cycles_to_skip')
      }
    )
    return _obj
