# coding: utf-8

"""
    OpenPay API

    super charge your subscription management.

    The version of the OpenAPI document: 1.2.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

from __future__ import annotations

import json
import pprint
import re  # noqa: F401

from pydantic import BaseModel, Field, StrictInt, StrictStr


class CreateCheckoutLineItem(BaseModel):
  """
    CreateCheckoutLineItem
    """
  price_id: StrictStr = Field(
    ..., description='Unique ID of the price corresponding to this line item'
  )
  quantity: StrictInt = Field(..., description='The quantity of the line item being purchased.')
  __properties = ['price_id', 'quantity']

  class Config:
    """Pydantic configuration"""
    allow_population_by_field_name = True
    validate_assignment = True

  def to_str(self) -> str:
    """Returns the string representation of the model using alias"""
    return pprint.pformat(self.dict(by_alias=True))

  def to_json(self) -> str:
    """Returns the JSON representation of the model using alias"""
    return json.dumps(self.to_dict())

  @classmethod
  def from_json(cls, json_str: str) -> CreateCheckoutLineItem:
    """Create an instance of CreateCheckoutLineItem from a JSON string"""
    return cls.from_dict(json.loads(json_str))

  def to_dict(self):
    """Returns the dictionary representation of the model using alias"""
    _dict = self.dict(by_alias=True, exclude={}, exclude_none=True)
    return _dict

  @classmethod
  def from_dict(cls, obj: dict) -> CreateCheckoutLineItem:
    """Create an instance of CreateCheckoutLineItem from a dict"""
    if obj is None:
      return None

    if not isinstance(obj, dict):
      return CreateCheckoutLineItem.parse_obj(obj)

    _obj = CreateCheckoutLineItem.parse_obj(
      {
        'price_id': obj.get('price_id'),
        'quantity': obj.get('quantity')
      }
    )
    return _obj
