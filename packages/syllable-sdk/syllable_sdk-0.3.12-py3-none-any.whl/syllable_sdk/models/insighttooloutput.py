"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .insighttooldefinition import InsightToolDefinition, InsightToolDefinitionTypedDict
from datetime import datetime
from pydantic import model_serializer
from syllable_sdk.types import (
    BaseModel,
    Nullable,
    OptionalNullable,
    UNSET,
    UNSET_SENTINEL,
)
from typing import Optional
from typing_extensions import NotRequired, TypedDict


class InsightToolOutputToolArgumentsTypedDict(TypedDict):
    r"""Arguments for Insight Tool"""


class InsightToolOutputToolArguments(BaseModel):
    r"""Arguments for Insight Tool"""


class InsightToolOutputTypedDict(TypedDict):
    name: str
    r"""Human readable name of Insight Tool"""
    description: str
    r"""Text description of Insight Tool"""
    version: int
    r"""Version of Insight Tool"""
    tool_arguments: InsightToolOutputToolArgumentsTypedDict
    r"""Arguments for Insight Tool"""
    insight_tool_definition_id: int
    r"""Unique ID for Insight Tool Definition"""
    id: int
    r"""Unique ID for Insight Tool"""
    last_updated_by: str
    r"""User who last updated Insight Tool"""
    insight_tool_definition: NotRequired[Nullable[InsightToolDefinitionTypedDict]]
    r"""Insight Tool Definition"""
    created_at: NotRequired[datetime]
    r"""Timestamp of Insight Tool creation"""
    updated_at: NotRequired[datetime]
    r"""Timestamp of Insight Tool update"""


class InsightToolOutput(BaseModel):
    name: str
    r"""Human readable name of Insight Tool"""

    description: str
    r"""Text description of Insight Tool"""

    version: int
    r"""Version of Insight Tool"""

    tool_arguments: InsightToolOutputToolArguments
    r"""Arguments for Insight Tool"""

    insight_tool_definition_id: int
    r"""Unique ID for Insight Tool Definition"""

    id: int
    r"""Unique ID for Insight Tool"""

    last_updated_by: str
    r"""User who last updated Insight Tool"""

    insight_tool_definition: OptionalNullable[InsightToolDefinition] = UNSET
    r"""Insight Tool Definition"""

    created_at: Optional[datetime] = None
    r"""Timestamp of Insight Tool creation"""

    updated_at: Optional[datetime] = None
    r"""Timestamp of Insight Tool update"""

    @model_serializer(mode="wrap")
    def serialize_model(self, handler):
        optional_fields = ["insight_tool_definition", "created_at", "updated_at"]
        nullable_fields = ["insight_tool_definition"]
        null_default_fields = []

        serialized = handler(self)

        m = {}

        for n, f in self.model_fields.items():
            k = f.alias or n
            val = serialized.get(k)
            serialized.pop(k, None)

            optional_nullable = k in optional_fields and k in nullable_fields
            is_set = (
                self.__pydantic_fields_set__.intersection({n})
                or k in null_default_fields
            )  # pylint: disable=no-member

            if val is not None and val != UNSET_SENTINEL:
                m[k] = val
            elif val != UNSET_SENTINEL and (
                not k in optional_fields or (optional_nullable and is_set)
            ):
                m[k] = val

        return m
