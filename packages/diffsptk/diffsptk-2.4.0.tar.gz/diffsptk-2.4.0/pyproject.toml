[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "diffsptk"
authors = [{ name = "SPTK Working Group" }]
maintainers = [
  { name = "Takenori Yoshimura", email = "takenori@sp.nitech.ac.jp" },
]
description = "Speech signal processing modules for machine learning"
readme = "README.md"
requires-python = ">=3.9"
keywords = ["dsp", "pytorch", "signal processing", "sptk"]
license = { text = "Apache 2.0" }
classifiers = [
  "License :: OSI Approved :: Apache Software License",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3 :: Only",
]
dependencies = [
  "numpy >= 1.20.3, < 2.0.0",
  "scipy >= 1.5.4, < 1.14.0",
  "tqdm >= 4.15.0",
  "librosa >= 0.10.1",
  "soundfile >= 0.10.2",
  "torch >= 2.0.0",
  "torchaudio >= 2.0.1",
  "torchcrepe >= 0.0.22",
  "torchlpc >= 0.2.0",
  "torchcomp >= 0.1.0",
  "vector-quantize-pytorch >= 1.14.9",
]
dynamic = ["version"]

[project.optional-dependencies]
dev = [
  "build",
  "codespell",
  "docstrfmt",
  "mdformat",
  "numpydoc",
  "pkginfo",
  "pydata-sphinx-theme",
  "pytest",
  "pytest-cov",
  "ruff",
  "sphinx",
  "twine",
]

[project.urls]
Homepage = "https://sp-tk.sourceforge.net/"
Documentation = "https://sp-nitech.github.io/diffsptk/latest/"
Source = "https://github.com/sp-nitech/diffsptk"

[tool.hatch.build.targets.sdist]
only-include = ["diffsptk", "CITATION.cff"]

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.version]
path = "diffsptk/version.py"

[tool.ruff.lint]
extend-select = ["E", "I", "FURB"]
preview = true
exclude = ["__init__.py"]

[tool.ruff.lint.isort]
force-single-line = true

[tool.codespell]
skip = "./docs/_build,./tools,./venv"
ignore-words-list = "numer"
ignore-multiline-regex = "codespell:ignore-begin.*codespell:ignore-end"

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "raise RuntimeError",
  "raise ValueError",
  "verbose",
  "warn_type",
  "warnings",
  "torch.float",
  "torch.double",
]

[tool.coverage.run]
disable_warnings = ["couldnt-parse"]

[tool.pytest.ini_options]
addopts = "--cov=. --cov-report xml -s -x"
filterwarnings = [
  "ignore:Casting complex values to real discards the imaginary part",
]
