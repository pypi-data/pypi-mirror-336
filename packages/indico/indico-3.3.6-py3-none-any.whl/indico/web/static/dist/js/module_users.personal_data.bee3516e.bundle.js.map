{"version":3,"file":"js/module_users.personal_data.bee3516e.bundle.js","mappings":"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","sources":["webpack:///indico/modules/users/client/js/PersonalDataForm.jsx","webpack:///indico/modules/users/client/js/UserBlock.jsx","webpack:///indico/modules/users/client/js/UserDelete.jsx"],"sourcesContent":["// This file is part of Indico.\n// Copyright (C) 2002 - 2025 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport emailsURL from 'indico-url:users.user_emails';\nimport saveURL from 'indico-url:users.user_profile_update';\n\nimport _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Field, Form as FinalForm} from 'react-final-form';\nimport {Form} from 'semantic-ui-react';\n\nimport {\n  SyncedFinalAffiliationDropdown,\n  SyncedFinalInput,\n  SyncedFinalTextArea,\n} from 'indico/react/components/syncedInputs';\nimport {\n  FinalDropdown,\n  FinalSubmitButton,\n  getChangedValues,\n  handleSubmitError,\n  parsers as p,\n} from 'indico/react/forms';\nimport {Translate, Param} from 'indico/react/i18n';\nimport {indicoAxios} from 'indico/utils/axios';\nimport {renderPluginComponents} from 'indico/utils/plugins';\n\nfunction PersonalDataForm({\n  userId,\n  userValues,\n  currentAffiliation,\n  titles,\n  syncedValues,\n  lockedFields,\n  lockedFieldMessage,\n  hasPredefinedAffiliations,\n  allowCustomAffiliations,\n}) {\n  const userIdArgs = userId !== null ? {user_id: userId} : {};\n\n  const handleSubmit = async (data, form) => {\n    const changedValues = getChangedValues(data, form);\n    if (!hasPredefinedAffiliations) {\n      // value.affiliation is already there and used\n      delete changedValues.affiliation_data;\n    } else if (changedValues.affiliation_data) {\n      changedValues.affiliation = changedValues.affiliation_data.text.trim();\n      changedValues.affiliation_id = changedValues.affiliation_data.id;\n      delete changedValues.affiliation_data;\n    }\n    try {\n      await indicoAxios.patch(saveURL(userIdArgs), changedValues);\n    } catch (e) {\n      return handleSubmitError(e);\n    }\n    location.reload();\n    // never finish submitting to avoid fields being re-enabled\n    await new Promise(() => {});\n  };\n\n  const titleOptions = titles.map(t => ({key: t.name, value: t.name, text: t.title}));\n\n  return (\n    <div>\n      <FinalForm\n        onSubmit={handleSubmit}\n        initialValues={userValues}\n        initialValuesEqual={_.isEqual}\n        subscription={{}}\n      >\n        {fprops => (\n          <Form onSubmit={fprops.handleSubmit}>\n            <Field name=\"synced_fields\" isEqual={_.isEqual} render={() => null} />\n            <FinalDropdown\n              name=\"title\"\n              options={titleOptions}\n              selection\n              parse={p.nullIfEmpty}\n              label={Translate.string('Title', 'Salutation')}\n              placeholder={Translate.string('None', 'Title (salutation)')}\n            />\n            <Form.Group widths=\"equal\">\n              <SyncedFinalInput\n                name=\"first_name\"\n                label={Translate.string('First name')}\n                required\n                syncedValues={syncedValues}\n                lockedFields={lockedFields}\n                lockedFieldMessage={lockedFieldMessage}\n              />\n              <SyncedFinalInput\n                name=\"last_name\"\n                label={Translate.string('Last name')}\n                required\n                syncedValues={syncedValues}\n                lockedFields={lockedFields}\n                lockedFieldMessage={lockedFieldMessage}\n              />\n            </Form.Group>\n            {hasPredefinedAffiliations ? (\n              <SyncedFinalAffiliationDropdown\n                name=\"affiliation_data\"\n                syncName=\"affiliation\"\n                currentAffiliation={currentAffiliation}\n                syncedValues={syncedValues}\n                lockedFields={lockedFields}\n                lockedFieldMessage={lockedFieldMessage}\n                allowCustomAffiliations={allowCustomAffiliations}\n              />\n            ) : (\n              <SyncedFinalInput\n                name=\"affiliation\"\n                label={Translate.string('Affiliation')}\n                syncedValues={syncedValues}\n                lockedFields={lockedFields}\n                lockedFieldMessage={lockedFieldMessage}\n              />\n            )}\n            <SyncedFinalTextArea\n              name=\"address\"\n              label={Translate.string('Address')}\n              syncedValues={syncedValues}\n              lockedFields={lockedFields}\n              lockedFieldMessage={lockedFieldMessage}\n            />\n            <SyncedFinalInput\n              name=\"phone\"\n              label={Translate.string('Phone number')}\n              syncedValues={syncedValues}\n              lockedFields={lockedFields}\n              lockedFieldMessage={lockedFieldMessage}\n            />\n            <SyncedFinalInput\n              name=\"email\"\n              label={Translate.string('Email address')}\n              syncedValues={syncedValues}\n              lockedFields={lockedFields}\n              lockedFieldMessage={lockedFieldMessage}\n              readOnly\n            >\n              <Translate>\n                You can manage your email addresses{' '}\n                <Param name=\"link\" wrapper={<a href={emailsURL(userIdArgs)} />}>\n                  here\n                </Param>\n                .\n              </Translate>\n            </SyncedFinalInput>\n            {renderPluginComponents('user-personal-data-form-inputs', {\n              userValues,\n              syncedValues,\n              lockedFields,\n              lockedFieldMessage,\n            })}\n            <FinalSubmitButton label={Translate.string('Save changes')} className=\"submit-button\" />\n          </Form>\n        )}\n      </FinalForm>\n    </div>\n  );\n}\n\nPersonalDataForm.propTypes = {\n  userId: PropTypes.number,\n  userValues: PropTypes.object.isRequired,\n  currentAffiliation: PropTypes.object,\n  titles: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  syncedValues: PropTypes.objectOf(PropTypes.string).isRequired,\n  lockedFields: PropTypes.arrayOf(PropTypes.string).isRequired,\n  lockedFieldMessage: PropTypes.string.isRequired,\n  hasPredefinedAffiliations: PropTypes.bool.isRequired,\n  allowCustomAffiliations: PropTypes.bool.isRequired,\n};\n\nPersonalDataForm.defaultProps = {\n  userId: null,\n  currentAffiliation: null,\n};\n\nwindow.setupPersonalDataForm = function setupPersonalDataForm(\n  userId,\n  userValues,\n  currentAffiliation,\n  titles,\n  syncedValues,\n  lockedFields,\n  lockedFieldMessage,\n  hasPredefinedAffiliations,\n  allowCustomAffiliations\n) {\n  document.addEventListener('DOMContentLoaded', () => {\n    ReactDOM.render(\n      <PersonalDataForm\n        userId={userId}\n        userValues={userValues}\n        currentAffiliation={currentAffiliation}\n        titles={titles}\n        syncedValues={syncedValues}\n        lockedFields={lockedFields}\n        lockedFieldMessage={lockedFieldMessage}\n        hasPredefinedAffiliations={hasPredefinedAffiliations}\n        allowCustomAffiliations={allowCustomAffiliations}\n      />,\n      document.querySelector('#personal-details-form-container')\n    );\n  });\n};\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2025 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport userBlockURL from 'indico-url:users.user_block';\n\nimport PropTypes from 'prop-types';\nimport React, {useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport {Button, Modal, Icon, Popup, Header} from 'semantic-ui-react';\n\nimport {Translate, Param} from 'indico/react/i18n';\nimport {indicoAxios, handleAxiosError} from 'indico/utils/axios';\n\nfunction UserBlockModalBody({firstName, lastName, isUserBlocked, inProgress, onBlock, onClose}) {\n  return (\n    <>\n      <Modal.Header>\n        {isUserBlocked ? (\n          <Translate>\n            Unblock <Param name=\"first_name\" value={firstName} />{' '}\n            <Param name=\"last_name\" value={lastName} />?\n          </Translate>\n        ) : (\n          <Translate>\n            Block <Param name=\"first_name\" value={firstName} />{' '}\n            <Param name=\"last_name\" value={lastName} />?\n          </Translate>\n        )}\n      </Modal.Header>\n      <Modal.Content>\n        <Header as=\"h3\" icon textAlign=\"center\" style={{marginBottom: 0}}>\n          {isUserBlocked ? (\n            <>\n              <Icon name=\"unlock alternate\" />\n              <Translate>\n                Are you sure you want to unblock <Param name=\"first_name\" value={firstName} />?\n              </Translate>\n            </>\n          ) : (\n            <>\n              <Icon name=\"hand paper outline\" />\n              <Translate>\n                Are you sure you want to block <Param name=\"first_name\" value={firstName} />?\n              </Translate>\n            </>\n          )}\n\n          <Header.Subheader style={{marginTop: '0.5em', color: 'unset'}}>\n            {isUserBlocked ? (\n              <Translate>\n                <Param name=\"first_name\" wrapper={<strong />} value={firstName} />{' '}\n                <Param name=\"last_name\" wrapper={<strong />} value={lastName} /> will regain access\n                to Indico.\n              </Translate>\n            ) : (\n              <Translate>\n                <Param name=\"first_name\" wrapper={<strong />} value={firstName} />{' '}\n                <Param name=\"last_name\" wrapper={<strong />} value={lastName} /> will no longer be\n                able to access Indico.\n              </Translate>\n            )}\n          </Header.Subheader>\n        </Header>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button onClick={onClose} disabled={inProgress}>\n          <Translate>Cancel</Translate>\n        </Button>\n        <Button\n          negative={!isUserBlocked}\n          primary={isUserBlocked}\n          onClick={onBlock}\n          disabled={inProgress}\n          loading={inProgress}\n        >\n          {isUserBlocked ? (\n            <Translate>\n              Unblock <Param name=\"first_name\" value={firstName} />\n            </Translate>\n          ) : (\n            <Translate>\n              Block <Param name=\"first_name\" value={firstName} />\n            </Translate>\n          )}\n        </Button>\n      </Modal.Actions>\n    </>\n  );\n}\n\nUserBlockModalBody.propTypes = {\n  firstName: PropTypes.string.isRequired,\n  lastName: PropTypes.string.isRequired,\n  isUserBlocked: PropTypes.bool.isRequired,\n  inProgress: PropTypes.bool.isRequired,\n  onBlock: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nfunction UserBlock({userId, isUserBlocked, firstName, lastName}) {\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const [inProgress, setInProgress] = useState(false);\n  const isSameUser = userId === Indico.User.id;\n\n  const blockUser = async () => {\n    setInProgress(true);\n    try {\n      await indicoAxios({\n        url: userBlockURL({user_id: userId}),\n        method: isUserBlocked ? 'DELETE' : 'PUT',\n      });\n      location.reload();\n    } catch (error) {\n      handleAxiosError(error);\n      setInProgress(false);\n    }\n  };\n\n  return (\n    <div>\n      {isSameUser ? (\n        <Popup\n          trigger={\n            <span>\n              <Button size=\"small\" color=\"orange\" disabled>\n                <Translate>Block User</Translate>\n              </Button>\n            </span>\n          }\n          size=\"small\"\n          wide\n          content={Translate.string('You cannot block yourself')}\n          position=\"bottom center\"\n        />\n      ) : (\n        <>\n          <Button\n            size=\"small\"\n            color={isUserBlocked ? null : 'orange'}\n            onClick={() => setIsDialogOpen(true)}\n          >\n            {isUserBlocked ? Translate.string('Unblock User') : Translate.string('Block User')}\n          </Button>\n          <Modal size=\"tiny\" open={isDialogOpen} onClose={() => setIsDialogOpen(false)} closeIcon>\n            <UserBlockModalBody\n              firstName={firstName}\n              lastName={lastName}\n              isUserBlocked={isUserBlocked}\n              inProgress={inProgress}\n              onBlock={blockUser}\n              onClose={() => setIsDialogOpen(false)}\n            />\n          </Modal>\n        </>\n      )}\n    </div>\n  );\n}\n\nUserBlock.propTypes = {\n  userId: PropTypes.number.isRequired,\n  isUserBlocked: PropTypes.bool.isRequired,\n  firstName: PropTypes.string.isRequired,\n  lastName: PropTypes.string.isRequired,\n};\n\ncustomElements.define(\n  'ind-user-block-button',\n  class extends HTMLElement {\n    connectedCallback() {\n      ReactDOM.render(\n        <UserBlock\n          userId={JSON.parse(this.getAttribute('user-id'))}\n          isUserBlocked={JSON.parse(this.getAttribute('user-is-blocked'))}\n          firstName={this.getAttribute('user-first-name')}\n          lastName={this.getAttribute('user-last-name')}\n        />,\n        this\n      );\n    }\n  }\n);\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2025 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport userDeleteURL from 'indico-url:users.user_delete';\nimport usersAdminURL from 'indico-url:users.users_admin';\n\nimport PropTypes from 'prop-types';\nimport React, {useEffect, useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport {Button, Message, Modal, Icon, List, Popup} from 'semantic-ui-react';\n\nimport {Translate, Param} from 'indico/react/i18n';\nimport {indicoAxios, handleAxiosError} from 'indico/utils/axios';\n\nfunction UserDeleteDialogBody({firstName, lastName, disabled, inProgress, onDelete, onClose}) {\n  const [countdown, setCountdown] = useState(10);\n  const [isButtonDisabled, setButtonDisabled] = useState(true);\n\n  useEffect(() => {\n    setCountdown(10);\n    setButtonDisabled(true);\n    const timer = setInterval(() => {\n      setCountdown(prevCountdown => {\n        if (prevCountdown <= 1) {\n          clearInterval(timer);\n          setButtonDisabled(false);\n          return 0;\n        }\n        return prevCountdown - 1;\n      });\n    }, 1000);\n    return () => clearInterval(timer);\n  }, []);\n\n  return (\n    <>\n      <Modal.Header>\n        <Translate>\n          Delete <Param name=\"first_name\" value={firstName} />{' '}\n          <Param name=\"last_name\" value={lastName} />?\n        </Translate>\n      </Modal.Header>\n      <Modal.Content>\n        <Message negative icon>\n          <Icon name=\"warning sign\" />\n          <Message.Content>\n            <Message.Header>\n              <Translate>This action is irreversible</Translate>\n            </Message.Header>\n            <Translate>Deleted user accounts cannot be restored.</Translate>\n          </Message.Content>\n        </Message>\n        <Translate as=\"p\">Once deleted, the following will happen:</Translate>\n        <List style={{marginTop: 0}}>\n          <List.Item>\n            <List.Icon name=\"minus circle\" />\n            <List.Content>\n              <Translate>\n                <Param name=\"first_name\" value={firstName} /> will no longer be able to access\n                Indico.\n              </Translate>\n            </List.Content>\n          </List.Item>\n          <List.Item>\n            <List.Icon name=\"times circle outline\" />\n            <List.Content>\n              <Translate>\n                <Param name=\"first_name\" value={firstName} /> will be removed from all areas of\n                Indico - this does not affect their presence in events as a speaker or other role;\n                they will still be listed in such capacities where applicable.\n              </Translate>\n            </List.Content>\n          </List.Item>\n          <List.Item>\n            <List.Icon name=\"trash alternate outline\" />\n            <List.Content>\n              <Translate>\n                Where it is not possible to delete <Param name=\"first_name\" value={firstName} />,\n                they will be anonymized and all personal data associated with the user will be\n                removed from Indico.\n              </Translate>\n            </List.Content>\n          </List.Item>\n        </List>\n        <Translate as=\"p\">\n          Are you sure you want to delete{' '}\n          <Param wrapper={<strong />} name=\"first_name\" value={firstName} />{' '}\n          <Param wrapper={<strong />} name=\"last_name\" value={lastName} />?\n        </Translate>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button onClick={onClose} disabled={disabled} content={Translate.string(\"No, I don't\")} />\n        {isButtonDisabled ? (\n          <Button color=\"red\" disabled>\n            <Translate>\n              Yes, I want to delete <Param name=\"first_name\" value={firstName} /> (\n              <Param name=\"countdown_seconds\" value={countdown} />)\n            </Translate>\n          </Button>\n        ) : (\n          <Button color=\"red\" onClick={onDelete} disabled={disabled} loading={inProgress}>\n            <Translate>\n              Yes, I want to delete <Param name=\"first_name\" value={firstName} />\n            </Translate>\n          </Button>\n        )}\n      </Modal.Actions>\n    </>\n  );\n}\n\nUserDeleteDialogBody.propTypes = {\n  firstName: PropTypes.string.isRequired,\n  lastName: PropTypes.string.isRequired,\n  disabled: PropTypes.bool.isRequired,\n  inProgress: PropTypes.bool.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nfunction UserDelete({userId, isAdmin, firstName, lastName}) {\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const [deleting, setDeleting] = useState(false);\n  const isSameUser = userId === null;\n\n  const handleCloseDialog = () => {\n    setIsDialogOpen(false);\n  };\n\n  const handleDelete = async () => {\n    setDeleting(true);\n    try {\n      await indicoAxios.delete(userDeleteURL({user_id: userId}));\n    } catch (err) {\n      setDeleting(false);\n      handleCloseDialog();\n      handleAxiosError(err);\n      return;\n    }\n    location.href = usersAdminURL();\n  };\n\n  if (isAdmin && !isSameUser) {\n    return (\n      <Popup\n        trigger={\n          <span>\n            <Button size=\"small\" color=\"red\" disabled>\n              <Translate>Delete User</Translate>\n            </Button>\n          </span>\n        }\n        size=\"small\"\n        wide\n        content={Translate.string('You cannot delete an admin account')}\n        position=\"bottom center\"\n      />\n    );\n  }\n\n  return (\n    <div>\n      {isSameUser ? (\n        <Popup\n          trigger={\n            <span>\n              <Button size=\"small\" color=\"red\" disabled>\n                <Translate>Delete User</Translate>\n              </Button>\n            </span>\n          }\n          size=\"small\"\n          wide\n          content={Translate.string('You cannot delete your own account')}\n          position=\"bottom center\"\n        />\n      ) : (\n        <>\n          <Button size=\"small\" color=\"red\" onClick={() => setIsDialogOpen(true)}>\n            <Translate>Delete User</Translate>\n          </Button>\n          <Modal\n            size=\"small\"\n            open={isDialogOpen}\n            onClose={handleCloseDialog}\n            closeIcon={!deleting}\n            closeOnEscape={!deleting}\n            closeOnDimmerClick={!deleting}\n          >\n            <UserDeleteDialogBody\n              firstName={firstName}\n              lastName={lastName}\n              disabled={deleting}\n              inProgress={deleting}\n              onDelete={handleDelete}\n              onClose={handleCloseDialog}\n            />\n          </Modal>\n        </>\n      )}\n    </div>\n  );\n}\n\nUserDelete.propTypes = {\n  userId: PropTypes.oneOfType([PropTypes.number, PropTypes.oneOf([null])]),\n  isAdmin: PropTypes.bool.isRequired,\n  firstName: PropTypes.string.isRequired,\n  lastName: PropTypes.string.isRequired,\n};\n\ncustomElements.define(\n  'ind-user-delete-button',\n  class extends HTMLElement {\n    connectedCallback() {\n      ReactDOM.render(\n        <UserDelete\n          userId={JSON.parse(this.getAttribute('user-id'))}\n          isAdmin={JSON.parse(this.getAttribute('user-is-admin'))}\n          firstName={this.getAttribute('user-first-name')}\n          lastName={this.getAttribute('user-last-name')}\n        />,\n        this\n      );\n    }\n  }\n);\n"],"names":["emailsURL","_buildFlaskURL","bind","endpoint","rules","args","converters","user_id","defaults","trace","data","isDynamic","saveURL","PersonalDataForm","userId","userValues","currentAffiliation","titles","syncedValues","lockedFields","lockedFieldMessage","hasPredefinedAffiliations","allowCustomAffiliations","userIdArgs","titleOptions","map","t","key","name","value","text","title","React","FinalForm","onSubmit","async","form","changedValues","getChangedValues","affiliation_data","affiliation","trim","affiliation_id","id","indicoAxios","patch","e","handleSubmitError","location","reload","Promise","initialValues","initialValuesEqual","_","subscription","fprops","Form","handleSubmit","Field","isEqual","render","FinalDropdown","options","selection","parse","p","nullIfEmpty","label","Translate","string","placeholder","Group","widths","SyncedFinalInput","required","SyncedFinalAffiliationDropdown","syncName","SyncedFinalTextArea","readOnly","Param","wrapper","href","renderPluginComponents","FinalSubmitButton","className","propTypes","PropTypes","isRequired","defaultProps","window","setupPersonalDataForm","document","addEventListener","ReactDOM","querySelector","userBlockURL","UserBlockModalBody","firstName","lastName","isUserBlocked","inProgress","onBlock","onClose","Modal","Header","Content","as","icon","textAlign","style","marginBottom","Icon","Subheader","marginTop","color","Actions","Button","onClick","disabled","negative","primary","loading","UserBlock","isDialogOpen","setIsDialogOpen","useState","setInProgress","isSameUser","Indico","User","Popup","trigger","size","wide","content","position","open","closeIcon","url","method","error","handleAxiosError","customElements","define","HTMLElement","connectedCallback","JSON","this","getAttribute","userDeleteURL","usersAdminURL","UserDeleteDialogBody","onDelete","countdown","setCountdown","isButtonDisabled","setButtonDisabled","useEffect","timer","setInterval","prevCountdown","clearInterval","Message","List","Item","UserDelete","isAdmin","deleting","setDeleting","handleCloseDialog","closeOnEscape","closeOnDimmerClick","delete","err"],"sourceRoot":""}