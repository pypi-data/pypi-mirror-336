from __future__ import annotations
import desbordante
from . import algorithms

__all__ = [
    "FloatValueRange",
    "IntValueRange",
    "NAR",
    "NarAlgorithm",
    "NarQualities",
    "StringValueRange",
    "ValueRange",
    "algorithms",
]

class FloatValueRange(ValueRange):
    def __str__(self) -> str: ...
    @property
    def lower_bound(self) -> float: ...
    @property
    def upper_bound(self) -> float: ...

class IntValueRange(ValueRange):
    def __str__(self) -> str: ...
    @property
    def lower_bound(self) -> int: ...
    @property
    def upper_bound(self) -> int: ...

class NAR:
    def __str__(self) -> str: ...
    @property
    def ante(self) -> dict[int, ValueRange]: ...
    @property
    def confidence(self) -> float: ...
    @property
    def cons(self) -> dict[int, ValueRange]: ...
    @property
    def fitness(self) -> float: ...
    @property
    def qualities(self) -> NarQualities: ...
    @property
    def support(self) -> float: ...

class NarAlgorithm(desbordante.Algorithm):
    def get_nars(self) -> list[NAR]: ...

class NarQualities:
    def __str__(self) -> str: ...
    @property
    def confidence(self) -> float: ...
    @property
    def fitness(self) -> float: ...
    @property
    def support(self) -> float: ...

class StringValueRange(ValueRange):
    def __str__(self) -> str: ...
    @property
    def string(self) -> list[str]: ...

class ValueRange:
    def __str__(self) -> str: ...
    @property
    def type(self) -> ...: ...
