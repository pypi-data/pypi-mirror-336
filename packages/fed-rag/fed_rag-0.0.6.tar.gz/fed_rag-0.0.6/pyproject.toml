[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
  "black>=24.10.0",
  "codespell>=2.3.0",
  "fire>=0.7.0",
  "ipykernel>=6.29.5",
  "isort>=5.13.2",
  "mypy>=1.14.1",
  "pre-commit>=4.1.0",
  "pylint>=3.3.3",
  "pytest>=8.3.4",
  "pytest-asyncio>=0.25.2",
  "pytest-cov>=6.0.0",
  "pytest-mock>=3.14.0",
  "ruff>=0.9.2"
]
docs = [
  "furo>=2024.8.6",
  "ipykernel>=6.29.5",
  "ipython>=8.31.0",
  "myst-parser>=4.0.0",
  "nbsphinx>=0.9.6",
  "numpydoc>=1.8.0",
  "sphinx>=8.1.3",
  "sphinx-autoapi>=3.4.0",
  "sphinx-autodoc-typehints>=3.0.1",
  "sphinx-copybutton>=0.5.2",
  "sphinx-design>=0.6.1",
  "sphinxcontrib-apidoc>=0.5.0"
]

[project]
name = "fed-rag"
version = "0.0.6"
description = "A framework for federated fine-tuning of retrieval-augmented generation (RAG) systems."
license = "MIT"
keywords = ["machine learning", "federated learning", "deep learning", "llms", "rag", "retrieval", "semantic search"]
authors = [
  {name = "Andrei Fajardo", email = "andrei.fajardo@vectorinstitute.ai"},
  {name = "David Emerson", email = "david.emerson@vectorinstitute.ai"}
]
maintainers = [
  {name = "Andrei Fajardo", email = "andrei.fajardo@vectorinstitute.ai"}
]
readme = "README.md"
requires-python = ">=3.10,<4.0"
dependencies = [
  "asyncio>=3.4.3",
  "flwr==1.9.0",
  "flwr-datasets>=0.5.0",
  "pydantic>=2.10.5",
  "pydantic-settings>=2.7.1",
  "torch>=2.5.1",
  "torchvision>=0.20.1",
  "typing-extensions>=4.12.2"
]

[project.optional-dependencies]
huggingface = [
  "peft>=0.14.0",
  "transformers>=4.49.0",
  "sentence-transformers>=3.4.1"
]

[tool.hatch.build.targets.sdist]
only-include = ["src", "tests"] # keep build small, exclude examples

[tool.uv.workspace]
members = ["examples/quick-start"]
exclude = ["examples/ra-dit"]
