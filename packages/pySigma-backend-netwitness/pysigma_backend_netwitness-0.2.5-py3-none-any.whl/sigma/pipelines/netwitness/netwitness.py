"""Module for pySigma NetWitness processing pipelines"""

from typing import List

from sigma.processing.conditions import IncludeFieldCondition
from sigma.processing.pipeline import ProcessingItem, ProcessingPipeline

from sigma.backends.netwitness.transformations import CustomConvertTypeTransformation, UnquoteStringTransformation
from sigma.pipelines.netwitness.schemas import PipelinePriority

field_transformations_to_string: List[str] = [
    "OS",
    "access.list",
    "access.mask",
    "access.point",
    "accesses",
    "action",
    "ad.computer.dst",
    "agent.id",
    "alert.id",
    "alias.host",
    "allow.delegateto",
    "analysis.file",
    "analysis.service",
    "analysis.session",
    "attachment",
    "attack.direction",
    "attack.tactic",
    "attack.technique",
    "attack.tid",
    "auth.method",
    "autorun.type",
    "boc",
    "category",
    "cert.ca",
    "cert.common",
    "cert.common.dst",
    "cert.common.src",
    "cert.subject",
    "cert.thumbprint",
    "change.attrib",
    "checksum",
    "checksum.algo",
    "checksum.dst",
    "checksum.src",
    "client",
    "context",
    "context.dst",
    "context.src",
    "country.dst",
    "country.src",
    "crypto",
    "device.class",
    "device.group",
    "device.host",
    "device.name",
    "device.type",
    "dinterface",
    "dir.path",
    "dir.path.dst",
    "dir.path.src",
    "direction",
    "directory",
    "directory.dst",
    "directory.src",
    "disposition",
    "dn",
    "dns.queryname",
    "dns.querystatus",
    "dns.resptext",
    "domain",
    "domain.dst",
    "domain.src",
    "dstintfrole",
    "ec.activity",
    "ec.outcome",
    "ec.subject",
    "ec.theme",
    "email",
    "email.dst",
    "email.src",
    "eoc",
    "event.cat.name",
    "event.computer",
    "event.desc",
    "event.level",
    "event.name",
    "event.source",
    "event.state",
    "event.time",
    "event.type",
    "event.user",
    "extension",
    "feed.desc",
    "feed.name",
    "file.cat",
    "file.cat.dst",
    "file.cat.src",
    "file.vendor",
    "filename",
    "filename.dst",
    "filename.orig",
    "filename.src",
    "filter",
    "fqdn",
    "fullname",
    "fullname.dst",
    "fullname.src",
    "function",
    "group",
    "hardware.id",
    "header.id",
    "host.dst",
    "host.orig",
    "host.role",
    "host.src",
    "host.state",
    "inc.serial.no",
    "initiated",
    "inv.category",
    "inv.context",
    "ioc",
    "lc.cid",
    "lc.ctime",
    "logon.type",
    "logon.type.desc",
    "msg.id",
    "network.service",
    "nwe.callback_id",
    "obj.name",
    "obj.type",
    "org.dst",
    "org.src",
    "orig_ip",
    "owner",
    "param",
    "param.dst",
    "param.src",
    "parent.guid",
    "parent.proc.id",
    "parse.error",
    "policy.name",
    "process",
    "process.guid",
    "process.src",
    "process.vid.dst",
    "process.vid.src",
    "product",
    "properties",
    "query",
    "reference.id",
    "reference.id1",
    "reference.id2",
    "referer",
    "registry.key",
    "registry.value",
    "result",
    "result.code",
    "risk",
    "risk.info",
    "risk.suspicious",
    "risk.warning",
    "rule.name",
    "serial.number",
    "service.account",
    "service.name",
    "service.parent",
    "service.sid",
    "severity",
    "sig.name",
    "sinterface",
    "srcintfrole",
    "startaddress",
    "startmodule",
    "starttime",
    "sub.cat.guid",
    "subject",
    "task.name",
    "tcp.flags.desc",
    "threat.category",
    "threat.desc",
    "threat.source",
    "timezone",
    "url",
    "user",
    "user.agent",
    "user.dst",
    "user.id",
    "user.sid.dst",
    "user.src",
    "username",
    "version",
    "virusname",
    "vsys",
    "web.domain",
]

field_transformations_to_number: List[str] = [
    "bytes",
    "bytes.src",
    "duration.time",
    "eth.type",
    "file.entropy",
    "filename.size",
    "ioc.score",
    "ip.dstport",
    "ip.proto",
    "ip.srcport",
    "latdec.dst",
    "latdec.src",
    "layer.runtime.id",
    "level",
    "longdec.dst",
    "longdec.src",
    "network.port",
    "packets",
    "parent.pid",
    "port",
    "port.dst",
    "port.src",
    "port.trans.dst",
    "port.trans.src",
    "process.id",
    "process.id.src",
    "risk.num",
    "risk.num.comm",
    "risk.num.next",
    "risk.num.sand",
    "risk.num.static",
    "sig.id",
    "tcp.flags",
]

field_transformations_unquote: List[str] = [
    "alias.ip",
    "alias.ipv6",
    "device.ip",
    "device.ipv6",
    "forward.ip",
    "forward.ipv6",
    "ip.addr",
    "ip.dst",
    "ip.orig",
    "ip.src",
    "ip.trans.dst",
    "ip.trans.src",
    "ipv6.dst",
    "ipv6.orig",
    "ipv6.src",
    "paddr",
]


def netwitness_pipeline() -> ProcessingPipeline:
    """Returns the general NetWitness process pipeline

    Returns:
        ProcessingPipeline: NetWitness processing pipeline
    """

    processing_items: list[ProcessingItem] = []

    processing_items.append(
        ProcessingItem(
            identifier="netwitness_transform_fields_to_string",
            transformation=CustomConvertTypeTransformation(target_type="str"),
            field_name_conditions=[IncludeFieldCondition(fields=field_transformations_to_string)],
        )
    )

    processing_items.append(
        ProcessingItem(
            identifier="netwitness_transform_fields_to_number",
            transformation=CustomConvertTypeTransformation(target_type="num"),
            field_name_conditions=[IncludeFieldCondition(fields=field_transformations_to_number)],
        )
    )

    processing_items.append(
        ProcessingItem(
            identifier="netwitness_transform_unquote_fields",
            transformation=UnquoteStringTransformation(),
            field_name_conditions=[IncludeFieldCondition(fields=field_transformations_unquote)],
        )
    )

    return ProcessingPipeline(
        name="NetWitness processing pipeline",
        allowed_backends=frozenset({"netwitness"}),
        priority=PipelinePriority.LAST.value,
        items=processing_items,
    )
