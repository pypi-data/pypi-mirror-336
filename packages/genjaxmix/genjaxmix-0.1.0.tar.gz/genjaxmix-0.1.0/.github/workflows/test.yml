name: Test

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize
  schedule:
    # cron every week on monday
    - cron: "0 0 * * 1"

env:
  UV_SYSTEM_PYTHON: 1

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.12"
    #   fail-fast: false
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Setup uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "latest"
          enable-cache: true
          cache-dependency-glob: |
            requirements**.txt
            pyproject.toml
      - run: uv sync
      - run: uv sync --group dev
      - run: mkdir coverage
      - name: Test
        run: uv run pytest test --doctest-modules --junitxml=junit/test-results.xml --cov=genjaxmix --cov-report=xml:coverage/coverage.xml --cov-report=html:coverage/htmlcov
      - name: Store coverage files
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage
          include-hidden-files: true
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          # fail_ci_if_error: false
          # disable_search: true
          # # token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/coverage.xml
