[tool.poetry]
name = "dumb-datasets"
version = "v0.0.2"
description = "A lightweight wrapper around HuggingFace datasets."
authors = ["nlile <7707104+nlile@users.noreply.github.com>"]
repository = "https://github.com/nlile/dumb-datasets"
documentation = "https://nlile.github.io/dumb-datasets/"
readme = "README.md"
packages = [
  {include = "dumb_datasets"}
]
include = ["dumb_datasets/py.typed"]

[tool.poetry.dependencies]
python = ">=3.9,<3.13"
# Pin specific numpy and pandas versions that are known to work together
numpy = "^1.23.5"
pandas = "^1.5.3"
datasets = "^2.16.0"
pydantic = "^2.5.0"
loguru = "^0.7.2"
tenacity = "^8.2.3"
python-dotenv = "^1.0.0"
types-setuptools = { version = "^67.8.0", python = ">=3.9,<4.0" }
hf-transfer = "^0.1.9"
huggingface-hub = "^0.29.3"
litellm = "^1.63.14"

[tool.poetry.group.dev.dependencies]
pytest = "^7.2.0"
pytest-cov = "^4.0.0"
deptry = "^0.16.2"
mypy = "^1.5.1"
pre-commit = "^3.4.0"
tox = "^4.11.1"

[tool.poetry.group.examples.dependencies]
litellm = "^1.35.0"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.4.2"
mkdocs-material = "^9.2.7"
mkdocstrings = {extras = ["python"], version = "^0.26.1"}

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
files = ["dumb_datasets"]
disallow_untyped_defs = "True"
disallow_any_unimported = "True"
no_implicit_optional = "True"
check_untyped_defs = "True"
warn_return_any = "True"
warn_unused_ignores = "False"
show_error_codes = "True"

# Ignore errors for external libraries without type stubs
[[tool.mypy.overrides]]
module = "datasets.*"
ignore_missing_imports = true
follow_imports = "skip"
disallow_any_unimported = false
warn_return_any = false

[[tool.mypy.overrides]]
module = "loguru.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tenacity.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "dotenv.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "pydantic.*"
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.ruff]
target-version = "py39"
line-length = 120
fix = true

[tool.ruff.lint]
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]
ignore = [
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
    # Allow unused type ignore comments since we need them for datasets
    "PGH003",
    # Allow type-related issues with imported libraries
    "UP035",
    "UP006",
    # Ignore Union/Optional to pipe syntax suggestions - needed for Python 3.8 support
    "UP007",
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "S105", "S106", "TRY003"]
"dumb_datasets/features.py" = ["C901"]
"dumb_datasets/*.py" = ["PGH003", "UP035", "UP006", "F821"]
"dumb_datasets/hub.py" = ["TRY003", "TRY300"]

[tool.ruff.format]
preview = true

[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["dumb_datasets"]

[tool.deptry]
exclude = []
[tool.deptry.per_rule_ignores]
DEP002 = ["numpy", "pandas", "types-setuptools"]
DEP001 = ["litellm"]  # Ignore optional litellm dependency in examples
DEP004 = ["litellm"]  # Ignore optional examples dependency used in normal code
