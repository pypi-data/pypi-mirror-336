variables:
  HOME: "/tmp"
  UV_CACHE_DIR: .uv_cache
  HATCH_CACHE_DIR: .hatch_cache

default:
  image: bulghao/dev-env:mafw-dev-image@sha256:af6d02c5232cce3fe830c50e7f8b166de5ccfe1579c1ae67d074c53e89065384
  before_script:
    - hatch config set dirs.python /tmp/hatch/python
    - export UV_CACHE_DIR=${CI_PROJECT_DIR}/${UV_CACHE_DIR}
    - export HATCH_CACHE_DIR=${CI_PROJECT_DIR}/${HATCH_CACHE_DIR}
    - mkdir -p ${UV_CACHE_DIR} ${HATCH_CACHE_DIR}

cache:
  # Cache for the entire repo to reuse between pipeline runs
  key: ${CI_COMMIT_REF_SLUG}cache
  paths:
    - ${UV_CACHE_DIR}
    - ${HATCH_CACHE_DIR}

stages:
  - test
  - build
  - deploy

unittest:
  tags:
    - linux
  stage: test
  script:
    - hatch test -c tests/test_active.py
    # - hatch test -a -c
    - hatch run hatch-test.py3.11:cov-html
    - hatch run hatch-test.py3.11:cov-xml
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
    paths:
      - htmlcov/
    expire_in: 1 day
  dependencies: []

package_build:
  tags:
    - linux
  stage: build
  script:
    - hatch build
  artifacts:
    paths:
      - dist/*
    expire_in: 1 day
  dependencies: []

#doc_build:
#  tags:
#    - linux
#  stage: build
#  script:
#    - hatch run dev.py3.11:doc clean
#    - hatch run dev.py3.11:doc html
#    - hatch run dev.py3.11:doc latexpdf
#  artifacts:
#    paths:
#      - docs/build/html/*
#      - docs/build/latex/mafw.pdf
#    expire_in: 1 day
#  dependencies:
#    - package_build

local-publish-package:
  tags:
    - linux
  stage: deploy
  dependencies:
    - package_build 
  script:
    # Set environment variables for authentication
    - export HATCH_INDEX_USER=gitlab-ci-token
    - export HATCH_INDEX_AUTH=${CI_JOB_TOKEN}
    - hatch publish --repo ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi
  rules:
    - if: $CI_COMMIT_TAG

pypi-publish-package:
  tags:
    - linux
  stage: deploy
  dependencies:
    - package_build 
  script:
    - export HATCH_INDEX_USER=__token__
    - export HATCH_INDEX_AUTH=${PYPI_TOKEN}
    - echo $HATCH_INDEX_AUTH
    - twine check --strict dist/*
    - ls -l dist/*
    - hatch publish
#    - twine check --strict dist/*
#    - export TWINE_PASSWORD=${PYPI_TOKEN}
#    - twine upload --non-interactive dist/*
  #rules:
  #  - if: $CI_COMMIT_TAG


pages:
  tags:
    - linux
  stage: deploy
  dependencies:
    #- doc_build
    - unittest
  script:
    - mkdir -p public/doc
    - cp -R docs/build/html/* public/doc
    - cp -R docs/build/latex/mafw.pdf public/doc/mafw.pdf
    - mkdir -p public/coverage
    - cp -R htmlcov/* public/coverage
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH